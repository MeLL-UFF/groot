["source: pageclass00(page,class).", "target: accounttype(account,type).", "setMap: pageclass00(A,B)=accounttype(A,B).", "source: hasanchor01(word,page).", "target: follows(account,account).", "setMap: hasanchor01(A,B)=follows(A,B).", "source: departmentof02(page,page).", "target: follows(account,account).", "setMap: departmentof02(A,B)=follows(A,B).", "source: has03(word,page).", "target: follows(account,account).", "setMap: has03(A,B)=follows(A,B).", "source: followstarget07(followstype1,followstype2).", "target: follows(account,account).", "setMap: followstarget07(A,B)=follows(A,B).", "source: tweetstarget08(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget08(A,B)=tweets(A,B).", "source: pageclass10(page,class).", "target: accounttype(account,type).", "setMap: pageclass10(A,B)=accounttype(A,B).", "source: hasanchor11(word,page).", "target: follows(account,account).", "setMap: hasanchor11(A,B)=follows(A,B).", "source: has12(word,page).", "target: follows(account,account).", "setMap: has12(A,B)=follows(A,B).", "source: accounttypetarget14(accounttypetype1,accounttypetype2).", "target: recursion_accounttype(account,type).", "setMap: accounttypetarget14(A,B)=recursion_accounttype(A,B).", "source: recursion_accounttypetarget16(recursionaccounttypetype1,recursionaccounttypetype2).", "target: accounttype(account,type).", "setMap: recursion_accounttypetarget16(A,B)=accounttype(A,B).", "source: tweetstarget17(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget17(A,B)=tweets(A,B).", "source: membersofproject17(page,page).", "target: follows(account,account).", "setMap: membersofproject17(A,B)=follows(A,B).", "source: departmentof18(page,page).", "target: follows(account,account).", "setMap: departmentof18(A,B)=follows(A,B).", "source: has19(word,page).", "target: follows(account,account).", "setMap: has19(A,B)=follows(A,B).", "source: pageclass20(page,class).", "target: accounttype(account,type).", "setMap: pageclass20(A,B)=accounttype(A,B).", "source: hasanchor21(word,page).", "target: follows(account,account).", "setMap: hasanchor21(A,B)=follows(A,B).", "source: has22(word,page).", "target: follows(account,account).", "setMap: has22(A,B)=follows(A,B).", "source: has23(word,page).", "target: follows(account,account).", "setMap: has23(A,B)=follows(A,B).", "source: departmentof24(page,page).", "target: follows(account,account).", "setMap: departmentof24(A,B)=follows(A,B).", "source: has25(word,page).", "target: follows(account,account).", "setMap: has25(A,B)=follows(A,B).", "source: followstarget27(followstype1,followstype2).", "target: follows(account,account).", "setMap: followstarget27(A,B)=follows(A,B).", "source: tweetstarget28(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget28(A,B)=tweets(A,B).", "source: departmentof29(page,page).", "target: follows(account,account).", "setMap: departmentof29(A,B)=follows(A,B).", "source: pageclass30(page,class).", "target: accounttype(account,type).", "setMap: pageclass30(A,B)=accounttype(A,B).", "source: hasanchor31(word,page).", "target: follows(account,account).", "setMap: hasanchor31(A,B)=follows(A,B).", "source: has34(word,page).", "target: follows(account,account).", "setMap: has34(A,B)=follows(A,B).", "source: recursion_accounttypetarget36(recursionaccounttypetype1,recursionaccounttypetype2).", "target: accounttype(account,type).", "setMap: recursion_accounttypetarget36(A,B)=accounttype(A,B).", "source: has38(word,page).", "target: follows(account,account).", "setMap: has38(A,B)=follows(A,B).", "source: pageclass40(page,class).", "target: accounttype(account,type).", "setMap: pageclass40(A,B)=accounttype(A,B).", "source: hasanchor41(word,page).", "target: follows(account,account).", "setMap: hasanchor41(A,B)=follows(A,B).", "source: departmentof42(page,page).", "target: follows(account,account).", "setMap: departmentof42(A,B)=follows(A,B).", "source: has43(word,page).", "target: follows(account,account).", "setMap: has43(A,B)=follows(A,B).", "source: departmentof44(page,page).", "target: follows(account,account).", "setMap: departmentof44(A,B)=follows(A,B).", "source: has46(word,page).", "target: follows(account,account).", "setMap: has46(A,B)=follows(A,B).", "source: departmentof47(page,page).", "target: follows(account,account).", "setMap: departmentof47(A,B)=follows(A,B).", "target: follows(account,account).", "source: has48(word,page).", "target: follows(account,account).", "setMap: has48(A,B)=follows(A,B).", "source: pageclass50(page,class).", "target: accounttype(account,type).", "setMap: pageclass50(A,B)=accounttype(A,B).", "source: hasanchor51(word,page).", "target: follows(account,account).", "setMap: hasanchor51(A,B)=follows(A,B).", "source: instructorsof54(page,page).", "target: follows(account,account).", "setMap: instructorsof54(A,B)=follows(A,B).", "source: pageclass60(page,class).", "target: accounttype(account,type).", "setMap: pageclass60(A,B)=accounttype(A,B).", "source: hasanchor61(word,page).", "target: follows(account,account).", "setMap: hasanchor61(A,B)=follows(A,B).", "source: has62(word,page).", "target: follows(account,account).", "setMap: has62(A,B)=follows(A,B).", "source: departmentof63(page,page).", "target: follows(account,account).", "setMap: departmentof63(A,B)=follows(A,B).", "source: departmentof64(page,page).", "target: follows(account,account).", "setMap: departmentof64(A,B)=follows(A,B).", "source: has65(word,page).", "target: follows(account,account).", "setMap: has65(A,B)=follows(A,B).", "source: tweetstarget67(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget67(A,B)=tweets(A,B).", "source: tweetstarget68(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget68(A,B)=tweets(A,B).", "source: departmentof69(page,page).", "target: follows(account,account).", "setMap: departmentof69(A,B)=follows(A,B).", "source: pageclass70(page,class).", "target: accounttype(account,type).", "setMap: pageclass70(A,B)=accounttype(A,B).", "source: hasanchor71(word,page).", "target: follows(account,account).", "setMap: hasanchor71(A,B)=follows(A,B).", "source: has72(word,page).", "target: follows(account,account).", "setMap: has72(A,B)=follows(A,B).", "source: departmentof73(page,page).", "target: follows(account,account).", "setMap: departmentof73(A,B)=follows(A,B).", "target: follows(account,account).", "source: recursion_accounttypetarget76(recursionaccounttypetype1,recursionaccounttypetype2).", "target: accounttype(account,type).", "setMap: recursion_accounttypetarget76(A,B)=accounttype(A,B).", "source: tweetstarget77(tweetstype1,tweetstype2).", "target: tweets(account,word).", "setMap: tweetstarget77(A,B)=tweets(A,B).", "source: membersofproject77(page,page).", "target: follows(account,account).", "setMap: membersofproject77(A,B)=follows(A,B).", "source: pageclass80(page,class).", "target: accounttype(account,type).", "setMap: pageclass80(A,B)=accounttype(A,B).", "source: hasanchor81(word,page).", "target: follows(account,account).", "setMap: hasanchor81(A,B)=follows(A,B).", "source: has82(word,page).", "target: follows(account,account).", "setMap: has82(A,B)=follows(A,B).", "source: departmentof83(page,page).", "target: follows(account,account).", "setMap: departmentof83(A,B)=follows(A,B).", "source: has84(word,page).", "target: follows(account,account).", "setMap: has84(A,B)=follows(A,B).", "source: pageclass90(page,class).", "target: accounttype(account,type).", "setMap: pageclass90(A,B)=accounttype(A,B).", "source: hasanchor91(word,page).", "target: follows(account,account).", "setMap: hasanchor91(A,B)=follows(A,B).", "source: departmentof93(page,page).", "target: follows(account,account).", "setMap: departmentof93(A,B)=follows(A,B).", "source: has94(word,page).", "target: follows(account,account).", "setMap: has94(A,B)=follows(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
