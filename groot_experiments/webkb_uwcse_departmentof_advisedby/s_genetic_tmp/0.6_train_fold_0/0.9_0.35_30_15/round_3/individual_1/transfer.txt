["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: student(person).", "setMap: studentpage01(A)=student(A).", "source: coursepage02(page).", "target: professor(person).", "setMap: coursepage02(A)=professor(A).", "source: publicationtarget03(publicationtype1,publicationtype2).", "target: publication(title,person).", "setMap: publicationtarget03(A,B)=publication(A,B).", "source: projectmembertarget04(projectmembertype1,projectmembertype2).", "target: projectmember(project,person).", "setMap: projectmembertarget04(A,B)=projectmember(A,B).", "source: samepersontarget04(samepersontype1,samepersontype2).", "target: advisedby(person,person).", "setMap: samepersontarget04(A,B)=advisedby(A,B).", "source: samepersontarget05(samepersontype1,samepersontype2).", "target: sameperson(person,person).", "setMap: samepersontarget05(A,B)=sameperson(A,B).", "source: pageclass07(page,class).", "target: yearsinprogram(person,year).", "setMap: pageclass07(A,B)=yearsinprogram(A,B).", "source: hasanchor08(word,page).", "target: projectmember(project,person).", "setMap: hasanchor08(A,B)=projectmember(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: student(person).", "setMap: studentpage11(A)=student(A).", "source: yearsinprogramtarget13(yearsinprogramtype1,yearsinprogramtype2).", "target: yearsinprogram(person,year).", "setMap: yearsinprogramtarget13(A,B)=yearsinprogram(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: coursepage22(page).", "target: professor(person).", "setMap: coursepage22(A)=professor(A).", "source: facultypage23(page).", "target: professor(person).", "setMap: facultypage23(A)=professor(A).", "source: studentpage24(page).", "target: student(person).", "setMap: studentpage24(A)=student(A).", "source: facultypage26(page).", "target: professor(person).", "setMap: facultypage26(A)=professor(A).", "source: studentpage27(page).", "target: student(person).", "setMap: studentpage27(A)=student(A).", "source: membersofproject210(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject210(A,B)=tempadvisedby(A,B).", "source: membersofproject211(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject211(A,B)=tempadvisedby(A,B).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: student(person).", "setMap: studentpage31(A)=student(A).", "source: publicationtarget33(publicationtype1,publicationtype2).", "target: publication(title,person).", "setMap: publicationtarget33(A,B)=publication(A,B).", "source: projectmembertarget34(projectmembertype1,projectmembertype2).", "target: projectmember(project,person).", "setMap: projectmembertarget34(A,B)=projectmember(A,B).", "source: coursepage36(page).", "target: professor(person).", "setMap: coursepage36(A)=professor(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: student(person).", "setMap: studentpage41(A)=student(A).", "source: membersofproject43(page,page).", "target: advisedby(person,person).", "setMap: membersofproject43(A,B)=advisedby(A,B).", "source: allwordscapitalized44(id).", "target: student(person).", "setMap: allwordscapitalized44(A)=student(A).", "source: coursepage44(page).", "target: professor(person).", "setMap: coursepage44(A)=professor(A).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: professor(person).", "setMap: studentpage51(A)=professor(A).", "source: facultypage54(page).", "target: student(person).", "setMap: facultypage54(A)=student(A).", "source: pageclass55(page,class).", "target: yearsinprogram(person,year).", "setMap: pageclass55(A,B)=yearsinprogram(A,B).", "source: membersofproject55(page,page).", "target: advisedby(person,person).", "setMap: membersofproject55(A,B)=advisedby(A,B).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: professor(person).", "setMap: studentpage61(A)=professor(A).", "source: studentpage64(page).", "target: student(person).", "setMap: studentpage64(A)=student(A).", "source: facultypage67(page).", "target: student(person).", "setMap: facultypage67(A)=student(A).", "source: pageclass68(page,class).", "target: yearsinprogram(person,year).", "setMap: pageclass68(A,B)=yearsinprogram(A,B).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: professor(person).", "setMap: studentpage71(A)=professor(A).", "source: coursepage72(page).", "target: professor(person).", "setMap: coursepage72(A)=professor(A).", "source: facultypage75(page).", "target: student(person).", "setMap: facultypage75(A)=student(A).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: professor(person).", "setMap: studentpage81(A)=professor(A).", "source: coursepage86(page).", "target: professor(person).", "setMap: coursepage86(A)=professor(A).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: studentpage95(page).", "target: professor(person).", "setMap: studentpage95(A)=professor(A).", "source: membersofproject98(page,page).", "target: advisedby(person,person).", "setMap: membersofproject98(A,B)=advisedby(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
