["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: student(person).", "setMap: studentpage01(A)=student(A).", "source: coursepage02(page).", "target: professor(person).", "setMap: coursepage02(A)=professor(A).", "source: pageclass04(page,class).", "target: sameperson(person,person).", "setMap: pageclass04(A,B)=sameperson(A,B).", "source: hasanchor05(word,page).", "target: tempadvisedby(person,person).", "setMap: hasanchor05(A,B)=tempadvisedby(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: student(person).", "setMap: studentpage11(A)=student(A).", "source: coursepage12(page).", "target: professor(person).", "setMap: coursepage12(A)=professor(A).", "source: pageclass14(page,class).", "target: advisedby(person,person).", "setMap: pageclass14(A,B)=advisedby(A,B).", "source: hasanchor15(word,page).", "target: tempadvisedby(person,person).", "setMap: hasanchor15(A,B)=tempadvisedby(A,B).", "source: pageclass16(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass16(A,B)=tempadvisedby(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: coursepage22(page).", "target: student(person).", "setMap: coursepage22(A)=student(A).", "source: facultypage23(page).", "target: student(person).", "setMap: facultypage23(A)=student(A).", "source: researchprojectpage24(page).", "target: professor(person).", "setMap: researchprojectpage24(A)=professor(A).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: professor(person).", "setMap: studentpage31(A)=professor(A).", "source: tempadvisedbytarget33(tempadvisedbytype1,tempadvisedbytype2).", "target: advisedby(person,person).", "setMap: tempadvisedbytarget33(A,B)=advisedby(A,B).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: professor(person).", "setMap: studentpage41(A)=professor(A).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: student(person).", "setMap: studentpage51(A)=student(A).", "source: facultypage54(page).", "target: student(person).", "setMap: facultypage54(A)=student(A).", "source: pageclass55(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass55(A,B)=tempadvisedby(A,B).", "source: coursepage55(page).", "target: student(person).", "setMap: coursepage55(A)=student(A).", "source: facultypage56(page).", "target: professor(person).", "setMap: facultypage56(A)=professor(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: professor(person).", "setMap: studentpage61(A)=professor(A).", "source: studentpage64(page).", "target: student(person).", "setMap: studentpage64(A)=student(A).", "source: facultypage67(page).", "target: professor(person).", "setMap: facultypage67(A)=professor(A).", "source: coursepage68(page).", "target: professor(person).", "setMap: coursepage68(A)=professor(A).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: student(person).", "setMap: studentpage71(A)=student(A).", "source: samecoursetarget73(samecoursetype1,samecoursetype2).", "target: samecourse(course,course).", "setMap: samecoursetarget73(A,B)=samecourse(A,B).", "source: haspositiontarget74(haspositiontype1,haspositiontype2).", "target: hasposition(person,faculty).", "setMap: haspositiontarget74(A,B)=hasposition(A,B).", "source: membersofproject74(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject74(A,B)=tempadvisedby(A,B).", "source: advisedbytarget75(advisedbytype1,advisedbytype2).", "target: tempadvisedby(person,person).", "setMap: advisedbytarget75(A,B)=tempadvisedby(A,B).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: student(person).", "setMap: studentpage81(A)=student(A).", "source: coursepage86(page).", "target: professor(person).", "setMap: coursepage86(A)=professor(A).", "source: allwordscapitalized87(id).", "target: professor(person).", "setMap: allwordscapitalized87(A)=professor(A).", "source: pageclass88(page,class).", "target: advisedby(person,person).", "setMap: pageclass88(A,B)=advisedby(A,B).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: coursepage93(page).", "target: student(person).", "setMap: coursepage93(A)=student(A).", "source: pageclass95(page,class).", "target: sameperson(person,person).", "setMap: pageclass95(A,B)=sameperson(A,B).", "source: hasanchor96(word,page).", "target: tempadvisedby(person,person).", "setMap: hasanchor96(A,B)=tempadvisedby(A,B).", "source: coursepage96(page).", "target: student(person).", "setMap: coursepage96(A)=student(A).", "source: courseleveltarget97(courseleveltype1,courseleveltype2).", "target: courselevel(course,level).", "setMap: courseleveltarget97(A,B)=courselevel(A,B).", "source: projectmembertarget98(projectmembertype1,projectmembertype2).", "target: projectmember(project,person).", "setMap: projectmembertarget98(A,B)=projectmember(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
