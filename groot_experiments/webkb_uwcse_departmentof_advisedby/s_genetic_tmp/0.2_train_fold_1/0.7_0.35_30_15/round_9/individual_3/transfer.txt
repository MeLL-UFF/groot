["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: professor(person).", "setMap: studentpage01(A)=professor(A).", "source: coursepage02(page).", "target: professor(person).", "setMap: coursepage02(A)=professor(A).", "source: pageclass04(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass04(A,B)=hasposition(A,B).", "source: hasanchor05(word,page).", "target: advisedby(person,person).", "setMap: hasanchor05(A,B)=advisedby(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: professor(person).", "setMap: studentpage11(A)=professor(A).", "source: coursepage12(page).", "target: student(person).", "setMap: coursepage12(A)=student(A).", "source: pageclass14(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass14(A,B)=hasposition(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: professor(person).", "setMap: studentpage21(A)=professor(A).", "source: coursepage22(page).", "target: student(person).", "setMap: coursepage22(A)=student(A).", "source: facultypage23(page).", "target: student(person).", "setMap: facultypage23(A)=student(A).", "source: researchprojectpage24(page).", "target: student(person).", "setMap: researchprojectpage24(A)=student(A).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: student(person).", "setMap: studentpage31(A)=student(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: professor(person).", "setMap: studentpage41(A)=professor(A).", "source: membersofproject43(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject43(A,B)=tempadvisedby(A,B).", "source: allwordscapitalized44(id).", "target: professor(person).", "setMap: allwordscapitalized44(A)=professor(A).", "source: coursepage44(page).", "target: professor(person).", "setMap: coursepage44(A)=professor(A).", "source: pageclass46(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass46(A,B)=hasposition(A,B).", "source: hasanchor47(word,page).", "target: tempadvisedby(person,person).", "setMap: hasanchor47(A,B)=tempadvisedby(A,B).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: professor(person).", "setMap: studentpage51(A)=professor(A).", "source: coursepage54(page).", "target: student(person).", "setMap: coursepage54(A)=student(A).", "source: facultypage55(page).", "target: professor(person).", "setMap: facultypage55(A)=professor(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: student(person).", "setMap: studentpage61(A)=student(A).", "source: studentpage64(page).", "target: student(person).", "setMap: studentpage64(A)=student(A).", "source: facultypage67(page).", "target: professor(person).", "setMap: facultypage67(A)=professor(A).", "source: membersofproject68(page,page).", "target: sameperson(person,person).", "setMap: membersofproject68(A,B)=sameperson(A,B).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: student(person).", "setMap: studentpage71(A)=student(A).", "source: coursepage72(page).", "target: student(person).", "setMap: coursepage72(A)=student(A).", "source: facultypage75(page).", "target: student(person).", "setMap: facultypage75(A)=student(A).", "source: facultypage78(page).", "target: professor(person).", "setMap: facultypage78(A)=professor(A).", "source: membersofproject79(page,page).", "target: advisedby(person,person).", "setMap: membersofproject79(A,B)=advisedby(A,B).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: professor(person).", "setMap: studentpage81(A)=professor(A).", "source: coursepage86(page).", "target: student(person).", "setMap: coursepage86(A)=student(A).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: facultypage92(page).", "target: student(person).", "setMap: facultypage92(A)=student(A).", "source: studentpage93(page).", "target: professor(person).", "setMap: studentpage93(A)=professor(A).", "source: haspositiontarget94(haspositiontype1,haspositiontype2).", "target: hasposition(person,faculty).", "setMap: haspositiontarget94(A,B)=hasposition(A,B).", "source: advisedbytarget95(advisedbytype1,advisedbytype2).", "target: tempadvisedby(person,person).", "setMap: advisedbytarget95(A,B)=tempadvisedby(A,B).", "source: membersofproject97(page,page).", "target: advisedby(person,person).", "setMap: membersofproject97(A,B)=advisedby(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
