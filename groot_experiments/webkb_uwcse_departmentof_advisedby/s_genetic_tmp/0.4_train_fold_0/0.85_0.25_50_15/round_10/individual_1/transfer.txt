["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: student(person).", "setMap: studentpage01(A)=student(A).", "source: coursepage02(page).", "target: student(person).", "setMap: coursepage02(A)=student(A).", "source: researchprojectpage04(page).", "target: professor(person).", "setMap: researchprojectpage04(A)=professor(A).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: student(person).", "setMap: studentpage11(A)=student(A).", "source: coursepage12(page).", "target: professor(person).", "setMap: coursepage12(A)=professor(A).", "source: studenttarget13(studenttype1).", "target: professor(person).", "setMap: studenttarget13(A)=professor(A).", "source: coursepage14(page).", "target: student(person).", "setMap: coursepage14(A)=student(A).", "source: pageclass16(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass16(A,B)=hasposition(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: coursepage22(page).", "target: student(person).", "setMap: coursepage22(A)=student(A).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: professor(person).", "setMap: studentpage31(A)=professor(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: student(person).", "setMap: studentpage41(A)=student(A).", "source: pageclass43(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass43(A,B)=hasposition(A,B).", "source: hasanchor44(word,page).", "target: projectmember(project,person).", "setMap: hasanchor44(A,B)=projectmember(A,B).", "source: pageclass45(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass45(A,B)=hasposition(A,B).", "source: hasanchor46(word,page).", "target: projectmember(project,person).", "setMap: hasanchor46(A,B)=projectmember(A,B).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: student(person).", "setMap: studentpage51(A)=student(A).", "source: allwordscapitalized55(id).", "target: student(person).", "setMap: allwordscapitalized55(A)=student(A).", "source: coursepage57(page).", "target: professor(person).", "setMap: coursepage57(A)=professor(A).", "source: facultypage58(page).", "target: student(person).", "setMap: facultypage58(A)=student(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: professor(person).", "setMap: studentpage61(A)=professor(A).", "source: membersofproject62(page,page).", "target: sameperson(person,person).", "setMap: membersofproject62(A,B)=sameperson(A,B).", "source: allwordscapitalized63(id).", "target: student(person).", "setMap: allwordscapitalized63(A)=student(A).", "source: membersofproject63(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject63(A,B)=tempadvisedby(A,B).", "source: allwordscapitalized64(id).", "target: student(person).", "setMap: allwordscapitalized64(A)=student(A).", "source: facultypage64(page).", "target: professor(person).", "setMap: facultypage64(A)=professor(A).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: student(person).", "setMap: studentpage71(A)=student(A).", "source: coursepage72(page).", "target: student(person).", "setMap: coursepage72(A)=student(A).", "source: facultypage75(page).", "target: student(person).", "setMap: facultypage75(A)=student(A).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: professor(person).", "setMap: studentpage81(A)=professor(A).", "source: coursepage86(page).", "target: professor(person).", "setMap: coursepage86(A)=professor(A).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: yearsinprogramtarget93(yearsinprogramtype1,yearsinprogramtype2).", "target: yearsinprogram(person,year).", "setMap: yearsinprogramtarget93(A,B)=yearsinprogram(A,B).", "source: samecoursetarget94(samecoursetype1,samecoursetype2).", "target: samecourse(course,course).", "setMap: samecoursetarget94(A,B)=samecourse(A,B).", "source: allwordscapitalized94(id).", "target: professor(person).", "setMap: allwordscapitalized94(A)=professor(A).", "source: pageclass95(page,class).", "target: hasposition(person,faculty).", "setMap: pageclass95(A,B)=hasposition(A,B).", "source: studentpage96(page).", "target: professor(person).", "setMap: studentpage96(A)=professor(A).", "source: membersofproject99(page,page).", "target: sameperson(person,person).", "setMap: membersofproject99(A,B)=sameperson(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
