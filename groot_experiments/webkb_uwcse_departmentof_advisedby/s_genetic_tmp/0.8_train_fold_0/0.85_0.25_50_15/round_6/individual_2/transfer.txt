["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: professor(person).", "setMap: studentpage01(A)=professor(A).", "source: coursepage02(page).", "target: student(person).", "setMap: coursepage02(A)=student(A).", "source: pageclass04(page,class).", "target: advisedby(person,person).", "setMap: pageclass04(A,B)=advisedby(A,B).", "source: hasanchor05(word,page).", "target: tempadvisedby(person,person).", "setMap: hasanchor05(A,B)=tempadvisedby(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: professor(person).", "setMap: studentpage11(A)=professor(A).", "source: coursepage12(page).", "target: student(person).", "setMap: coursepage12(A)=student(A).", "source: pageclass14(page,class).", "target: advisedby(person,person).", "setMap: pageclass14(A,B)=advisedby(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: studentpage22(page).", "target: professor(person).", "setMap: studentpage22(A)=professor(A).", "source: inphasetarget23(inphasetype1,inphasetype2).", "target: inphase(person,prequals).", "setMap: inphasetarget23(A,B)=inphase(A,B).", "source: haspositiontarget24(haspositiontype1,haspositiontype2).", "target: hasposition(person,faculty).", "setMap: haspositiontarget24(A,B)=hasposition(A,B).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: student(person).", "setMap: studentpage31(A)=student(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: professor(person).", "setMap: studentpage41(A)=professor(A).", "source: coursepage42(page).", "target: professor(person).", "setMap: coursepage42(A)=professor(A).", "source: sameprojecttarget43(sameprojecttype1,sameprojecttype2).", "target: sameproject(project,project).", "setMap: sameprojecttarget43(A,B)=sameproject(A,B).", "source: courseleveltarget44(courseleveltype1,courseleveltype2).", "target: courselevel(course,level).", "setMap: courseleveltarget44(A,B)=courselevel(A,B).", "source: pageclass45(page,class).", "target: advisedby(person,person).", "setMap: pageclass45(A,B)=advisedby(A,B).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: professor(person).", "setMap: studentpage51(A)=professor(A).", "source: coursepage54(page).", "target: professor(person).", "setMap: coursepage54(A)=professor(A).", "source: facultypage55(page).", "target: student(person).", "setMap: facultypage55(A)=student(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: student(person).", "setMap: studentpage61(A)=student(A).", "source: studentpage64(page).", "target: professor(person).", "setMap: studentpage64(A)=professor(A).", "source: facultypage67(page).", "target: professor(person).", "setMap: facultypage67(A)=professor(A).", "source: membersofproject610(page,page).", "target: sameperson(person,person).", "setMap: membersofproject610(A,B)=sameperson(A,B).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: professor(person).", "setMap: studentpage71(A)=professor(A).", "source: coursepage72(page).", "target: professor(person).", "setMap: coursepage72(A)=professor(A).", "source: pageclass75(page,class).", "target: sameperson(person,person).", "setMap: pageclass75(A,B)=sameperson(A,B).", "source: hasanchor76(word,page).", "target: sameperson(person,person).", "setMap: hasanchor76(A,B)=sameperson(A,B).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: student(person).", "setMap: studentpage81(A)=student(A).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: publicationtarget93(publicationtype1,publicationtype2).", "target: publication(title,person).", "setMap: publicationtarget93(A,B)=publication(A,B).", "source: tempadvisedbytarget94(tempadvisedbytype1,tempadvisedbytype2).", "target: tempadvisedby(person,person).", "setMap: tempadvisedbytarget94(A,B)=tempadvisedby(A,B).", "source: allwordscapitalized94(id).", "target: student(person).", "setMap: allwordscapitalized94(A)=student(A).", "source: pageclass95(page,class).", "target: sameperson(person,person).", "setMap: pageclass95(A,B)=sameperson(A,B).", "source: studentpage96(page).", "target: student(person).", "setMap: studentpage96(A)=student(A).", "source: membersofproject99(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject99(A,B)=tempadvisedby(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
