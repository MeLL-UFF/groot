["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: student(person).", "setMap: studentpage01(A)=student(A).", "source: coursepage02(page).", "target: student(person).", "setMap: coursepage02(A)=student(A).", "source: projectmembertarget03(projectmembertype1,projectmembertype2).", "target: projectmember(project,person).", "setMap: projectmembertarget03(A,B)=projectmember(A,B).", "source: pageclass05(page,class).", "target: sameperson(person,person).", "setMap: pageclass05(A,B)=sameperson(A,B).", "source: hasanchor06(word,page).", "target: sameperson(person,person).", "setMap: hasanchor06(A,B)=sameperson(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: professor(person).", "setMap: studentpage11(A)=professor(A).", "source: pageclass12(page,class).", "target: sameperson(person,person).", "setMap: pageclass12(A,B)=sameperson(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: coursepage22(page).", "target: student(person).", "setMap: coursepage22(A)=student(A).", "source: facultypage23(page).", "target: student(person).", "setMap: facultypage23(A)=student(A).", "source: researchprojectpage24(page).", "target: student(person).", "setMap: researchprojectpage24(A)=student(A).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: student(person).", "setMap: studentpage31(A)=student(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: professor(person).", "setMap: studentpage41(A)=professor(A).", "source: membersofproject43(page,page).", "target: sameperson(person,person).", "setMap: membersofproject43(A,B)=sameperson(A,B).", "source: allwordscapitalized44(id).", "target: student(person).", "setMap: allwordscapitalized44(A)=student(A).", "source: coursepage44(page).", "target: professor(person).", "setMap: coursepage44(A)=professor(A).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: student(person).", "setMap: studentpage51(A)=student(A).", "source: researchprojectpage53(page).", "target: professor(person).", "setMap: researchprojectpage53(A)=professor(A).", "source: coursepage54(page).", "target: student(person).", "setMap: coursepage54(A)=student(A).", "source: coursepage55(page).", "target: student(person).", "setMap: coursepage55(A)=student(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: student(person).", "setMap: studentpage61(A)=student(A).", "source: pageclass64(page,class).", "target: sameperson(person,person).", "setMap: pageclass64(A,B)=sameperson(A,B).", "source: hasanchor65(word,page).", "target: advisedby(person,person).", "setMap: hasanchor65(A,B)=advisedby(A,B).", "source: tatarget65(tatype1,tatype2,tatype3).", "target: ta(course,person,quarter).", "setMap: tatarget65(A,B,C)=ta(A,B,C).", "source: studenttarget66(studenttype1).", "target: student(person).", "setMap: studenttarget66(A)=student(A).", "source: advisedbytarget67(advisedbytype1,advisedbytype2).", "target: tempadvisedby(person,person).", "setMap: advisedbytarget67(A,B)=tempadvisedby(A,B).", "source: facultypage69(page).", "target: student(person).", "setMap: facultypage69(A)=student(A).", "source: membersofproject610(page,page).", "target: advisedby(person,person).", "setMap: membersofproject610(A,B)=advisedby(A,B).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: student(person).", "setMap: studentpage71(A)=student(A).", "source: coursepage72(page).", "target: student(person).", "setMap: coursepage72(A)=student(A).", "source: coursepage73(page).", "target: professor(person).", "setMap: coursepage73(A)=professor(A).", "source: pageclass76(page,class).", "target: sameperson(person,person).", "setMap: pageclass76(A,B)=sameperson(A,B).", "source: hasanchor77(word,page).", "target: sameperson(person,person).", "setMap: hasanchor77(A,B)=sameperson(A,B).", "source: facultypage77(page).", "target: student(person).", "setMap: facultypage77(A)=student(A).", "source: facultypage710(page).", "target: student(person).", "setMap: facultypage710(A)=student(A).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: student(person).", "setMap: studentpage81(A)=student(A).", "source: coursepage86(page).", "target: student(person).", "setMap: coursepage86(A)=student(A).", "source: studenttarget88(studenttype1).", "target: professor(person).", "setMap: studenttarget88(A)=professor(A).", "source: advisedbytarget89(advisedbytype1,advisedbytype2).", "target: tempadvisedby(person,person).", "setMap: advisedbytarget89(A,B)=tempadvisedby(A,B).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: publicationtarget93(publicationtype1,publicationtype2).", "target: publication(title,person).", "setMap: publicationtarget93(A,B)=publication(A,B).", "source: allwordscapitalized94(id).", "target: professor(person).", "setMap: allwordscapitalized94(A)=professor(A).", "source: pageclass95(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass95(A,B)=tempadvisedby(A,B).", "source: studentpage96(page).", "target: student(person).", "setMap: studentpage96(A)=student(A).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
