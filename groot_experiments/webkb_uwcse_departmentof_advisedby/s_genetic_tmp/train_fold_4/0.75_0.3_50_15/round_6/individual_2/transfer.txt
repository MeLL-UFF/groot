["source: departmentof00(page,page).", "target: advisedby(person,person).", "setMap: departmentof00(A,B)=advisedby(A,B).", "source: studentpage01(page).", "target: student(person).", "setMap: studentpage01(A)=student(A).", "source: coursepage02(page).", "target: professor(person).", "setMap: coursepage02(A)=professor(A).", "source: professortarget03(professortype1).", "target: professor(person).", "setMap: professortarget03(A)=professor(A).", "source: pageclass05(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass05(A,B)=tempadvisedby(A,B).", "source: hasanchor06(word,page).", "target: projectmember(project,person).", "setMap: hasanchor06(A,B)=projectmember(A,B).", "source: departmentof10(page,page).", "target: advisedby(person,person).", "setMap: departmentof10(A,B)=advisedby(A,B).", "source: studentpage11(page).", "target: professor(person).", "setMap: studentpage11(A)=professor(A).", "source: coursepage12(page).", "target: student(person).", "setMap: coursepage12(A)=student(A).", "source: pageclass14(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass14(A,B)=tempadvisedby(A,B).", "source: departmentof20(page,page).", "target: advisedby(person,person).", "setMap: departmentof20(A,B)=advisedby(A,B).", "source: studentpage21(page).", "target: student(person).", "setMap: studentpage21(A)=student(A).", "source: coursepage22(page).", "target: professor(person).", "setMap: coursepage22(A)=professor(A).", "source: departmentof30(page,page).", "target: advisedby(person,person).", "setMap: departmentof30(A,B)=advisedby(A,B).", "source: studentpage31(page).", "target: student(person).", "setMap: studentpage31(A)=student(A).", "source: departmentof40(page,page).", "target: advisedby(person,person).", "setMap: departmentof40(A,B)=advisedby(A,B).", "source: studentpage41(page).", "target: student(person).", "setMap: studentpage41(A)=student(A).", "source: membersofproject43(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject43(A,B)=tempadvisedby(A,B).", "source: allwordscapitalized44(id).", "target: student(person).", "setMap: allwordscapitalized44(A)=student(A).", "source: coursepage44(page).", "target: professor(person).", "setMap: coursepage44(A)=professor(A).", "source: departmentof50(page,page).", "target: advisedby(person,person).", "setMap: departmentof50(A,B)=advisedby(A,B).", "source: studentpage51(page).", "target: professor(person).", "setMap: studentpage51(A)=professor(A).", "source: departmentof60(page,page).", "target: advisedby(person,person).", "setMap: departmentof60(A,B)=advisedby(A,B).", "source: studentpage61(page).", "target: student(person).", "setMap: studentpage61(A)=student(A).", "source: studentpage64(page).", "target: professor(person).", "setMap: studentpage64(A)=professor(A).", "source: facultypage68(page).", "target: professor(person).", "setMap: facultypage68(A)=professor(A).", "source: pageclass69(page,class).", "target: sameperson(person,person).", "setMap: pageclass69(A,B)=sameperson(A,B).", "source: coursepage69(page).", "target: professor(person).", "setMap: coursepage69(A)=professor(A).", "source: pageclass611(page,class).", "target: tempadvisedby(person,person).", "setMap: pageclass611(A,B)=tempadvisedby(A,B).", "source: hasanchor612(word,page).", "target: projectmember(project,person).", "setMap: hasanchor612(A,B)=projectmember(A,B).", "source: departmentof70(page,page).", "target: advisedby(person,person).", "setMap: departmentof70(A,B)=advisedby(A,B).", "source: studentpage71(page).", "target: professor(person).", "setMap: studentpage71(A)=professor(A).", "source: coursepage72(page).", "target: student(person).", "setMap: coursepage72(A)=student(A).", "source: facultypage75(page).", "target: student(person).", "setMap: facultypage75(A)=student(A).", "source: coursepage76(page).", "target: student(person).", "setMap: coursepage76(A)=student(A).", "source: facultypage78(page).", "target: student(person).", "setMap: facultypage78(A)=student(A).", "source: membersofproject79(page,page).", "target: sameperson(person,person).", "setMap: membersofproject79(A,B)=sameperson(A,B).", "source: allwordscapitalized710(id).", "target: professor(person).", "setMap: allwordscapitalized710(A)=professor(A).", "source: coursepage710(page).", "target: student(person).", "setMap: coursepage710(A)=student(A).", "source: departmentof80(page,page).", "target: advisedby(person,person).", "setMap: departmentof80(A,B)=advisedby(A,B).", "source: studentpage81(page).", "target: student(person).", "setMap: studentpage81(A)=student(A).", "source: coursepage86(page).", "target: professor(person).", "setMap: coursepage86(A)=professor(A).", "source: departmentof90(page,page).", "target: advisedby(person,person).", "setMap: departmentof90(A,B)=advisedby(A,B).", "source: samepersontarget93(samepersontype1,samepersontype2).", "target: advisedby(person,person).", "setMap: samepersontarget93(A,B)=advisedby(A,B).", "source: facultypage94(page).", "target: student(person).", "setMap: facultypage94(A)=student(A).", "source: studentpage95(page).", "target: professor(person).", "setMap: studentpage95(A)=professor(A).", "source: haspositiontarget96(haspositiontype1,haspositiontype2).", "target: hasposition(person,faculty).", "setMap: haspositiontarget96(A,B)=hasposition(A,B).", "source: membersofproject99(page,page).", "target: tempadvisedby(person,person).", "setMap: membersofproject99(A,B)=tempadvisedby(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
