["source: departmentof00(page,page).", "target: workedunder(person,person).", "setMap: departmentof00(A,B)=workedunder(A,B).", "source: studentpage01(page).", "target: female(person).", "setMap: studentpage01(A)=female(A).", "source: coursepage02(page).", "target: actor(person).", "setMap: coursepage02(A)=actor(A).", "source: workedundertarget03(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget03(A,B)=workedunder(A,B).", "source: genretarget04(genretype1,genretype2).", "target: genre(person,genre).", "setMap: genretarget04(A,B)=genre(A,B).", "source: allwordscapitalized05(id).", "target: actor(person).", "setMap: allwordscapitalized05(A)=actor(A).", "source: pageclass06(page,class).", "target: genre(person,genre).", "setMap: pageclass06(A,B)=genre(A,B).", "source: departmentof10(page,page).", "target: workedunder(person,person).", "setMap: departmentof10(A,B)=workedunder(A,B).", "source: studentpage11(page).", "target: director(person).", "setMap: studentpage11(A)=director(A).", "source: coursepage12(page).", "target: director(person).", "setMap: coursepage12(A)=director(A).", "source: actortarget15(actortype1).", "target: director(person).", "setMap: actortarget15(A)=director(A).", "source: allwordscapitalized16(id).", "target: female(person).", "setMap: allwordscapitalized16(A)=female(A).", "source: pageclass17(page,class).", "target: genre(person,genre).", "setMap: pageclass17(A,B)=genre(A,B).", "source: departmentof20(page,page).", "target: workedunder(person,person).", "setMap: departmentof20(A,B)=workedunder(A,B).", "source: studentpage21(page).", "target: director(person).", "setMap: studentpage21(A)=director(A).", "source: studentpage23(page).", "target: female(person).", "setMap: studentpage23(A)=female(A).", "source: departmentof30(page,page).", "target: workedunder(person,person).", "setMap: departmentof30(A,B)=workedunder(A,B).", "source: studentpage31(page).", "target: director(person).", "setMap: studentpage31(A)=director(A).", "source: departmentof40(page,page).", "target: workedunder(person,person).", "setMap: departmentof40(A,B)=workedunder(A,B).", "source: studentpage41(page).", "target: actor(person).", "setMap: studentpage41(A)=actor(A).", "source: membersofproject43(page,page).", "target: workedunder(person,person).", "setMap: membersofproject43(A,B)=workedunder(A,B).", "source: allwordscapitalized44(id).", "target: director(person).", "setMap: allwordscapitalized44(A)=director(A).", "source: coursepage44(page).", "target: actor(person).", "setMap: coursepage44(A)=actor(A).", "source: directortarget46(directortype1).", "target: director(person).", "setMap: directortarget46(A)=director(A).", "source: movietarget47(movietype1,movietype2).", "target: movie(movie,person).", "setMap: movietarget47(A,B)=movie(A,B).", "source: departmentof50(page,page).", "target: workedunder(person,person).", "setMap: departmentof50(A,B)=workedunder(A,B).", "source: studentpage51(page).", "target: female(person).", "setMap: studentpage51(A)=female(A).", "source: actortarget52(actortype1).", "target: female(person).", "setMap: actortarget52(A)=female(A).", "source: movietarget53(movietype1,movietype2).", "target: movie(movie,person).", "setMap: movietarget53(A,B)=movie(A,B).", "source: workedundertarget53(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget53(A,B)=workedunder(A,B).", "source: genretarget54(genretype1,genretype2).", "target: genre(person,genre).", "setMap: genretarget54(A,B)=genre(A,B).", "source: departmentof60(page,page).", "target: workedunder(person,person).", "setMap: departmentof60(A,B)=workedunder(A,B).", "source: studentpage61(page).", "target: actor(person).", "setMap: studentpage61(A)=actor(A).", "source: studentpage64(page).", "target: director(person).", "setMap: studentpage64(A)=director(A).", "source: facultypage67(page).", "target: actor(person).", "setMap: facultypage67(A)=actor(A).", "source: membersofproject68(page,page).", "target: workedunder(person,person).", "setMap: membersofproject68(A,B)=workedunder(A,B).", "source: departmentof70(page,page).", "target: workedunder(person,person).", "setMap: departmentof70(A,B)=workedunder(A,B).", "source: studentpage71(page).", "target: female(person).", "setMap: studentpage71(A)=female(A).", "source: actortarget72(actortype1).", "target: actor(person).", "setMap: actortarget72(A)=actor(A).", "source: movietarget73(movietype1,movietype2).", "target: movie(movie,person).", "setMap: movietarget73(A,B)=movie(A,B).", "target: movie(movie,person).", "source: actortarget74(actortype1).", "target: director(person).", "setMap: actortarget74(A)=director(A).", "source: workedundertarget74(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget74(A,B)=workedunder(A,B).", "source: genretarget75(genretype1,genretype2).", "target: genre(person,genre).", "setMap: genretarget75(A,B)=genre(A,B).", "source: departmentof80(page,page).", "target: workedunder(person,person).", "setMap: departmentof80(A,B)=workedunder(A,B).", "source: studentpage81(page).", "target: actor(person).", "setMap: studentpage81(A)=actor(A).", "source: allwordscapitalized84(id).", "target: director(person).", "setMap: allwordscapitalized84(A)=director(A).", "source: pageclass85(page,class).", "target: genre(person,genre).", "setMap: pageclass85(A,B)=genre(A,B).", "source: coursepage87(page).", "target: director(person).", "setMap: coursepage87(A)=director(A).", "source: departmentof90(page,page).", "target: workedunder(person,person).", "setMap: departmentof90(A,B)=workedunder(A,B).", "source: allwordscapitalized93(id).", "target: female(person).", "setMap: allwordscapitalized93(A)=female(A).", "source: pageclass94(page,class).", "target: genre(person,genre).", "setMap: pageclass94(A,B)=genre(A,B).", "source: studentpage95(page).", "target: female(person).", "setMap: studentpage95(A)=female(A).", "source: facultypage97(page).", "target: director(person).", "setMap: facultypage97(A)=director(A).", "source: membersofproject98(page,page).", "target: workedunder(person,person).", "setMap: membersofproject98(A,B)=workedunder(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
