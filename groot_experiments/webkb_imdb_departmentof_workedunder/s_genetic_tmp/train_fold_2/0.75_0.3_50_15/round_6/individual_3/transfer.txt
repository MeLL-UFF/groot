["source: departmentof00(page,page).", "target: workedunder(person,person).", "setMap: departmentof00(A,B)=workedunder(A,B).", "source: studentpage01(page).", "target: director(person).", "setMap: studentpage01(A)=director(A).", "source: facultypage05(page).", "target: actor(person).", "setMap: facultypage05(A)=actor(A).", "source: pageclass06(page,class).", "target: workedunder(person,person).", "setMap: pageclass06(A,B)=workedunder(A,B).", "source: coursepage06(page).", "target: actor(person).", "setMap: coursepage06(A)=actor(A).", "source: facultypage07(page).", "target: director(person).", "setMap: facultypage07(A)=director(A).", "source: movietarget08(movietype1,movietype2).", "target: movie(movie,person).", "setMap: movietarget08(A,B)=movie(A,B).", "source: departmentof10(page,page).", "target: workedunder(person,person).", "setMap: departmentof10(A,B)=workedunder(A,B).", "source: studentpage11(page).", "target: director(person).", "setMap: studentpage11(A)=director(A).", "source: coursepage12(page).", "target: director(person).", "setMap: coursepage12(A)=director(A).", "source: facultypage13(page).", "target: actor(person).", "setMap: facultypage13(A)=actor(A).", "source: researchprojectpage14(page).", "target: actor(person).", "setMap: researchprojectpage14(A)=actor(A).", "source: workedundertarget15(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget15(A,B)=workedunder(A,B).", "source: workedundertarget16(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget16(A,B)=workedunder(A,B).", "source: departmentof20(page,page).", "target: workedunder(person,person).", "setMap: departmentof20(A,B)=workedunder(A,B).", "source: studentpage21(page).", "target: female(person).", "setMap: studentpage21(A)=female(A).", "source: coursepage22(page).", "target: director(person).", "setMap: coursepage22(A)=director(A).", "source: directortarget23(directortype1).", "target: female(person).", "setMap: directortarget23(A)=female(A).", "source: facultypage24(page).", "target: female(person).", "setMap: facultypage24(A)=female(A).", "source: researchprojectpage25(page).", "target: director(person).", "setMap: researchprojectpage25(A)=director(A).", "source: workedundertarget26(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget26(A,B)=workedunder(A,B).", "source: workedundertarget27(workedundertype1,workedundertype2).", "target: workedunder(person,person).", "setMap: workedundertarget27(A,B)=workedunder(A,B).", "source: departmentof30(page,page).", "target: workedunder(person,person).", "setMap: departmentof30(A,B)=workedunder(A,B).", "source: studentpage31(page).", "target: actor(person).", "setMap: studentpage31(A)=actor(A).", "source: departmentof40(page,page).", "target: workedunder(person,person).", "setMap: departmentof40(A,B)=workedunder(A,B).", "source: studentpage41(page).", "target: actor(person).", "setMap: studentpage41(A)=actor(A).", "source: membersofproject43(page,page).", "target: workedunder(person,person).", "setMap: membersofproject43(A,B)=workedunder(A,B).", "source: allwordscapitalized44(id).", "target: female(person).", "setMap: allwordscapitalized44(A)=female(A).", "source: coursepage44(page).", "target: director(person).", "setMap: coursepage44(A)=director(A).", "source: departmentof50(page,page).", "target: workedunder(person,person).", "setMap: departmentof50(A,B)=workedunder(A,B).", "source: studentpage51(page).", "target: director(person).", "setMap: studentpage51(A)=director(A).", "source: coursepage56(page).", "target: actor(person).", "setMap: coursepage56(A)=actor(A).", "source: movietarget57(movietype1,movietype2).", "target: movie(movie,person).", "setMap: movietarget57(A,B)=movie(A,B).", "source: facultypage58(page).", "target: female(person).", "setMap: facultypage58(A)=female(A).", "source: departmentof60(page,page).", "target: workedunder(person,person).", "setMap: departmentof60(A,B)=workedunder(A,B).", "source: studentpage61(page).", "target: director(person).", "setMap: studentpage61(A)=director(A).", "source: studentpage65(page).", "target: female(person).", "setMap: studentpage65(A)=female(A).", "source: coursepage66(page).", "target: female(person).", "setMap: coursepage66(A)=female(A).", "source: facultypage611(page).", "target: director(person).", "setMap: facultypage611(A)=director(A).", "source: membersofproject612(page,page).", "target: workedunder(person,person).", "setMap: membersofproject612(A,B)=workedunder(A,B).", "source: departmentof70(page,page).", "target: workedunder(person,person).", "setMap: departmentof70(A,B)=workedunder(A,B).", "source: studentpage71(page).", "target: director(person).", "setMap: studentpage71(A)=director(A).", "source: coursepage72(page).", "target: female(person).", "setMap: coursepage72(A)=female(A).", "source: facultypage75(page).", "target: director(person).", "setMap: facultypage75(A)=director(A).", "source: departmentof80(page,page).", "target: workedunder(person,person).", "setMap: departmentof80(A,B)=workedunder(A,B).", "source: studentpage81(page).", "target: director(person).", "setMap: studentpage81(A)=director(A).", "source: coursepage86(page).", "target: actor(person).", "setMap: coursepage86(A)=actor(A).", "source: departmentof90(page,page).", "target: workedunder(person,person).", "setMap: departmentof90(A,B)=workedunder(A,B).", "source: genretarget93(genretype1,genretype2).", "target: genre(person,genre).", "setMap: genretarget93(A,B)=genre(A,B).", "source: allwordscapitalized94(id).", "target: actor(person).", "setMap: allwordscapitalized94(A)=actor(A).", "source: pageclass95(page,class).", "target: workedunder(person,person).", "setMap: pageclass95(A,B)=workedunder(A,B).", "source: coursepage96(page).", "target: female(person).", "setMap: coursepage96(A)=female(A).", "source: pageclass99(page,class).", "target: workedunder(person,person).", "setMap: pageclass99(A,B)=workedunder(A,B).", "source: hasanchor910(word,page).", "target: workedunder(person,person).", "setMap: hasanchor910(A,B)=workedunder(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]
