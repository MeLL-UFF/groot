["source: teamplayssport00(sportsteam,sport).", "target: recursion_companyeconomicsector(company,sector).", "setMap: teamplayssport00(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport01(athlete,sport).", "setMap: athleteplayssport01(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam01(athlete,sportsteam).", "target: acquired(company,company).", "setMap: athleteledsportsteam01(A,B)=acquired(A,B).", "source: teamplaysinleague02(sportsteam,sportsleague).", "setMap: teamplaysinleague02(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague03(athlete,sportsleague).", "setMap: athleteplaysinleague03(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysinleague03(sportsteam,sportsleague).", "target: companyeconomicsector(company,sector).", "setMap: teamplaysinleague03(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas04(sportsteam,sportsteam).", "target: companyalsoknownas(company,company).", "setMap: teamalsoknownas04(A,B)=companyalsoknownas(A,B).", "source: teamplaysagainstteam04(sportsteam,sportsteam).", "target: bankboughtbank(company,company).", "setMap: teamplaysagainstteam04(A,B)=bankboughtbank(A,B).", "source: athleteledsportsteam05(athlete,sportsteam).", "setMap: athleteledsportsteam05(A,B)=acquired(A,B).", "source: teamplaysinleague05(sportsteam,sportsleague).", "setMap: teamplaysinleague05(A,B)=companyeconomicsector(A,B).", "source: athleteplaysinleague06(athlete,sportsleague).", "setMap: athleteplaysinleague06(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysforteam06(athlete,sportsteam).", "setMap: athleteplaysforteam06(A,B)=bankboughtbank(A,B).", "source: teamalsoknownas07(sportsteam,sportsteam).", "setMap: teamalsoknownas07(A,B)=bankboughtbank(A,B).", "source: athleteplayssport07(athlete,sport).", "setMap: athleteplayssport07(A,B)=companyeconomicsector(A,B).", "source: teamplaysagainstteam08(sportsteam,sportsteam).", "setMap: teamplaysagainstteam08(A,B)=acquired(A,B).", "source: athleteplaysinleague08(athlete,sportsleague).", "setMap: athleteplaysinleague08(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplayssport10(sportsteam,sport).", "setMap: teamplayssport10(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport11(athlete,sport).", "setMap: athleteplayssport11(A,B)=companyeconomicsector(A,B).", "source: athleteledsportsteam11(athlete,sportsteam).", "setMap: athleteledsportsteam11(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam12(athlete,sportsteam).", "setMap: athleteplaysforteam12(A,B)=acquired(A,B).", "source: athleteplayssport13(athlete,sport).", "setMap: athleteplayssport13(A,B)=companyeconomicsector(A,B).", "source: athleteplaysforteam13(athlete,sportsteam).", "setMap: athleteplaysforteam13(A,B)=acquired(A,B).", "source: athleteplayssport14(athlete,sport).", "setMap: athleteplayssport14(A,B)=companyeconomicsector(A,B).", "source: teamplaysagainstteam14(sportsteam,sportsteam).", "setMap: teamplaysagainstteam14(A,B)=companyalsoknownas(A,B).", "source: teamalsoknownas15(sportsteam,sportsteam).", "setMap: teamalsoknownas15(A,B)=acquired(A,B).", "source: teamplaysinleague15(sportsteam,sportsleague).", "setMap: teamplaysinleague15(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague16(athlete,sportsleague).", "setMap: athleteplaysinleague16(A,B)=companyeconomicsector(A,B).", "source: athleteplayssport16(athlete,sport).", "setMap: athleteplayssport16(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague17(athlete,sportsleague).", "setMap: athleteplaysinleague17(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysinleague17(sportsteam,sportsleague).", "setMap: teamplaysinleague17(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysagainstteam18(sportsteam,sportsteam).", "setMap: teamplaysagainstteam18(A,B)=acquired(A,B).", "source: teamplayssport20(sportsteam,sport).", "setMap: teamplayssport20(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport21(athlete,sport).", "setMap: athleteplayssport21(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam21(athlete,sportsteam).", "setMap: athleteledsportsteam21(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam22(athlete,sportsteam).", "setMap: athleteplaysforteam22(A,B)=companyalsoknownas(A,B).", "source: teamalsoknownas23(sportsteam,sportsteam).", "setMap: teamalsoknownas23(A,B)=acquired(A,B).", "source: teamplaysagainstteam23(sportsteam,sportsteam).", "setMap: teamplaysagainstteam23(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam24(sportsteam,sportsteam).", "setMap: teamplaysagainstteam24(A,B)=bankboughtbank(A,B).", "source: athleteledsportsteam24(athlete,sportsteam).", "setMap: athleteledsportsteam24(A,B)=companyalsoknownas(A,B).", "source: teamplaysagainstteam25(sportsteam,sportsteam).", "setMap: teamplaysagainstteam25(A,B)=acquired(A,B).", "source: teamalsoknownas25(sportsteam,sportsteam).", "setMap: teamalsoknownas25(A,B)=companyalsoknownas(A,B).", "source: teamalsoknownas26(sportsteam,sportsteam).", "setMap: teamalsoknownas26(A,B)=companyalsoknownas(A,B).", "source: teamplaysagainstteam26(sportsteam,sportsteam).", "setMap: teamplaysagainstteam26(A,B)=companyalsoknownas(A,B).", "source: teamplaysagainstteam27(sportsteam,sportsteam).", "setMap: teamplaysagainstteam27(A,B)=companyalsoknownas(A,B).", "source: athleteplaysforteam27(athlete,sportsteam).", "setMap: athleteplaysforteam27(A,B)=companyalsoknownas(A,B).", "source: athleteplayssport28(athlete,sport).", "setMap: athleteplayssport28(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague29(athlete,sportsleague).", "setMap: athleteplaysinleague29(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplayssport30(sportsteam,sport).", "setMap: teamplayssport30(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport31(athlete,sport).", "setMap: athleteplayssport31(A,B)=companyeconomicsector(A,B).", "source: athleteplaysinleague31(athlete,sportsleague).", "setMap: athleteplaysinleague31(A,B)=companyeconomicsector(A,B).", "source: athleteledsportsteam32(athlete,sportsteam).", "setMap: athleteledsportsteam32(A,B)=acquired(A,B).", "source: teamplaysinleague33(sportsteam,sportsleague).", "setMap: teamplaysinleague33(A,B)=companyeconomicsector(A,B).", "source: teamplaysinleague34(sportsteam,sportsleague).", "setMap: teamplaysinleague34(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas34(sportsteam,sportsteam).", "setMap: teamalsoknownas34(A,B)=bankboughtbank(A,B).", "source: teamplaysinleague35(sportsteam,sportsleague).", "setMap: teamplaysinleague35(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysinleague36(sportsteam,sportsleague).", "setMap: teamplaysinleague36(A,B)=companyeconomicsector(A,B).", "source: athleteplaysforteam36(athlete,sportsteam).", "setMap: athleteplaysforteam36(A,B)=companyalsoknownas(A,B).", "source: athleteplaysinleague37(athlete,sportsleague).", "setMap: athleteplaysinleague37(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysagainstteam37(sportsteam,sportsteam).", "setMap: teamplaysagainstteam37(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague38(sportsteam,sportsleague).", "setMap: teamplaysinleague38(A,B)=companyeconomicsector(A,B).", "source: teamplayssport40(sportsteam,sport).", "setMap: teamplayssport40(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport41(athlete,sport).", "setMap: athleteplayssport41(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague41(athlete,sportsleague).", "setMap: athleteplaysinleague41(A,B)=companyeconomicsector(A,B).", "source: athleteplaysforteam42(athlete,sportsteam).", "setMap: athleteplaysforteam42(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam43(sportsteam,sportsteam).", "setMap: teamplaysagainstteam43(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague43(sportsteam,sportsleague).", "setMap: teamplaysinleague43(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam44(athlete,sportsteam).", "setMap: athleteledsportsteam44(A,B)=acquired(A,B).", "source: athleteplaysforteam44(athlete,sportsteam).", "setMap: athleteplaysforteam44(A,B)=bankboughtbank(A,B).", "source: athleteplaysinleague45(athlete,sportsleague).", "setMap: athleteplaysinleague45(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam45(athlete,sportsteam).", "setMap: athleteledsportsteam45(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam46(sportsteam,sportsteam).", "setMap: teamplaysagainstteam46(A,B)=acquired(A,B).", "setMap: teamplaysagainstteam46(A,B)=bankboughtbank(A,B).", "source: athleteledsportsteam47(athlete,sportsteam).", "setMap: athleteledsportsteam47(A,B)=companyalsoknownas(A,B).", "source: athleteplaysinleague47(athlete,sportsleague).", "setMap: athleteplaysinleague47(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysinleague48(sportsteam,sportsleague).", "setMap: teamplaysinleague48(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas48(sportsteam,sportsteam).", "setMap: teamalsoknownas48(A,B)=companyalsoknownas(A,B).", "source: athleteplaysforteam49(athlete,sportsteam).", "setMap: athleteplaysforteam49(A,B)=companyalsoknownas(A,B).", "source: teamplayssport50(sportsteam,sport).", "setMap: teamplayssport50(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport51(athlete,sport).", "setMap: athleteplayssport51(A,B)=companyeconomicsector(A,B).", "source: athleteplaysinleague51(athlete,sportsleague).", "setMap: athleteplaysinleague51(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysforteam52(athlete,sportsteam).", "setMap: athleteplaysforteam52(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague53(sportsteam,sportsleague).", "setMap: teamplaysinleague53(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysagainstteam54(sportsteam,sportsteam).", "setMap: teamplaysagainstteam54(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam54(athlete,sportsteam).", "setMap: athleteplaysforteam54(A,B)=acquired(A,B).", "source: athleteplaysinleague55(athlete,sportsleague).", "setMap: athleteplaysinleague55(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas55(sportsteam,sportsteam).", "setMap: teamalsoknownas55(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam56(athlete,sportsteam).", "setMap: athleteplaysforteam56(A,B)=acquired(A,B).", "setMap: athleteplaysforteam56(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam57(sportsteam,sportsteam).", "setMap: teamplaysagainstteam57(A,B)=bankboughtbank(A,B).", "source: teamalsoknownas57(sportsteam,sportsteam).", "setMap: teamalsoknownas57(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam58(athlete,sportsteam).", "setMap: athleteplaysforteam58(A,B)=bankboughtbank(A,B).", "source: athleteledsportsteam58(athlete,sportsteam).", "setMap: athleteledsportsteam58(A,B)=acquired(A,B).", "source: teamplayssport60(sportsteam,sport).", "setMap: teamplayssport60(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport61(athlete,sport).", "setMap: athleteplayssport61(A,B)=companyeconomicsector(A,B).", "source: athleteledsportsteam61(athlete,sportsteam).", "setMap: athleteledsportsteam61(A,B)=companyalsoknownas(A,B).", "source: athleteplaysforteam62(athlete,sportsteam).", "setMap: athleteplaysforteam62(A,B)=acquired(A,B).", "source: athleteplayssport63(athlete,sport).", "setMap: athleteplayssport63(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas63(sportsteam,sportsteam).", "setMap: teamalsoknownas63(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam64(sportsteam,sportsteam).", "setMap: teamplaysagainstteam64(A,B)=bankboughtbank(A,B).", "source: teamalsoknownas64(sportsteam,sportsteam).", "setMap: teamalsoknownas64(A,B)=companyalsoknownas(A,B).", "source: athleteledsportsteam65(athlete,sportsteam).", "setMap: athleteledsportsteam65(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam65(sportsteam,sportsteam).", "setMap: teamplaysagainstteam65(A,B)=acquired(A,B).", "source: athleteplaysforteam66(athlete,sportsteam).", "setMap: athleteplaysforteam66(A,B)=bankboughtbank(A,B).", "source: teamalsoknownas66(sportsteam,sportsteam).", "setMap: teamalsoknownas66(A,B)=acquired(A,B).", "source: teamplaysagainstteam67(sportsteam,sportsteam).", "setMap: teamplaysagainstteam67(A,B)=bankboughtbank(A,B).", "setMap: teamplaysagainstteam67(A,B)=companyalsoknownas(A,B).", "source: athleteplaysforteam68(athlete,sportsteam).", "setMap: athleteplaysforteam68(A,B)=companyalsoknownas(A,B).", "source: athleteledsportsteam68(athlete,sportsteam).", "setMap: athleteledsportsteam68(A,B)=bankboughtbank(A,B).", "source: athleteplaysinleague69(athlete,sportsleague).", "setMap: athleteplaysinleague69(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplayssport70(sportsteam,sport).", "setMap: teamplayssport70(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport71(athlete,sport).", "setMap: athleteplayssport71(A,B)=companyeconomicsector(A,B).", "source: athleteplaysinleague71(athlete,sportsleague).", "setMap: athleteplaysinleague71(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam72(athlete,sportsteam).", "setMap: athleteledsportsteam72(A,B)=bankboughtbank(A,B).", "source: teamplaysinleague73(sportsteam,sportsleague).", "setMap: teamplaysinleague73(A,B)=recursion_companyeconomicsector(A,B).", "setMap: teamplaysinleague73(A,B)=companyeconomicsector(A,B).", "source: teamalsoknownas74(sportsteam,sportsteam).", "setMap: teamalsoknownas74(A,B)=companyalsoknownas(A,B).", "source: teamalsoknownas75(sportsteam,sportsteam).", "setMap: teamalsoknownas75(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam76(sportsteam,sportsteam).", "setMap: teamplaysagainstteam76(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague76(sportsteam,sportsleague).", "setMap: teamplaysinleague76(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague77(athlete,sportsleague).", "setMap: athleteplaysinleague77(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam77(athlete,sportsteam).", "setMap: athleteledsportsteam77(A,B)=companyalsoknownas(A,B).", "source: teamplaysagainstteam78(sportsteam,sportsteam).", "setMap: teamplaysagainstteam78(A,B)=bankboughtbank(A,B).", "source: athleteplaysforteam79(athlete,sportsteam).", "setMap: athleteplaysforteam79(A,B)=companyalsoknownas(A,B).", "source: teamplayssport80(sportsteam,sport).", "setMap: teamplayssport80(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport81(athlete,sport).", "setMap: athleteplayssport81(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague81(athlete,sportsleague).", "setMap: athleteplaysinleague81(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysforteam82(athlete,sportsteam).", "setMap: athleteplaysforteam82(A,B)=acquired(A,B).", "source: teamplaysagainstteam83(sportsteam,sportsteam).", "setMap: teamplaysagainstteam83(A,B)=acquired(A,B).", "source: athleteplaysforteam83(athlete,sportsteam).", "setMap: athleteplaysforteam83(A,B)=companyalsoknownas(A,B).", "source: athleteplaysinleague84(athlete,sportsleague).", "setMap: athleteplaysinleague84(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam84(athlete,sportsteam).", "setMap: athleteledsportsteam84(A,B)=companyalsoknownas(A,B).", "source: teamalsoknownas85(sportsteam,sportsteam).", "setMap: teamalsoknownas85(A,B)=bankboughtbank(A,B).", "source: teamplaysinleague85(sportsteam,sportsleague).", "setMap: teamplaysinleague85(A,B)=companyeconomicsector(A,B).", "source: teamplaysinleague86(sportsteam,sportsleague).", "setMap: teamplaysinleague86(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam86(athlete,sportsteam).", "setMap: athleteledsportsteam86(A,B)=acquired(A,B).", "source: athleteplaysinleague87(athlete,sportsleague).", "setMap: athleteplaysinleague87(A,B)=recursion_companyeconomicsector(A,B).", "source: teamplaysagainstteam87(sportsteam,sportsteam).", "setMap: teamplaysagainstteam87(A,B)=companyalsoknownas(A,B).", "source: athleteplaysforteam88(athlete,sportsteam).", "setMap: athleteplaysforteam88(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague88(sportsteam,sportsleague).", "setMap: teamplaysinleague88(A,B)=companyeconomicsector(A,B).", "source: teamplayssport90(sportsteam,sport).", "setMap: teamplayssport90(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplayssport91(athlete,sport).", "setMap: athleteplayssport91(A,B)=companyeconomicsector(A,B).", "source: athleteplaysinleague91(athlete,sportsleague).", "setMap: athleteplaysinleague91(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam92(athlete,sportsteam).", "setMap: athleteledsportsteam92(A,B)=companyalsoknownas(A,B).", "source: teamplaysinleague93(sportsteam,sportsleague).", "setMap: teamplaysinleague93(A,B)=companyeconomicsector(A,B).", "setMap: teamplaysinleague93(A,B)=recursion_companyeconomicsector(A,B).", "source: teamalsoknownas94(sportsteam,sportsteam).", "setMap: teamalsoknownas94(A,B)=companyalsoknownas(A,B).", "setMap: teamalsoknownas94(A,B)=acquired(A,B).", "source: teamalsoknownas95(sportsteam,sportsteam).", "setMap: teamalsoknownas95(A,B)=bankboughtbank(A,B).", "source: teamplaysagainstteam96(sportsteam,sportsteam).", "setMap: teamplaysagainstteam96(A,B)=bankboughtbank(A,B).", "source: teamplaysinleague96(sportsteam,sportsleague).", "setMap: teamplaysinleague96(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteplaysinleague97(athlete,sportsleague).", "setMap: athleteplaysinleague97(A,B)=recursion_companyeconomicsector(A,B).", "source: athleteledsportsteam97(athlete,sportsteam).", "setMap: athleteledsportsteam97(A,B)=bankboughtbank(A,B).", "source: teamalsoknownas98(sportsteam,sportsteam).", "setMap: teamalsoknownas98(A,B)=acquired(A,B).", "source: athleteplaysforteam99(athlete,sportsteam).", "setMap: athleteplaysforteam99(A,B)=companyalsoknownas(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]