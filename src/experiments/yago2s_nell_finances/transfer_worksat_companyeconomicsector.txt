["source: worksat00(person,institution).", "target: companyeconomicsector(company,sector).", "setMap: worksat00(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom01(person,institution).", "setMap: graduatedfrom01(A,B)=companyeconomicsector(A,B).", "source: influences01(person,person).", "target: bankboughtbank(company,company).", "setMap: influences01(A,B)=bankboughtbank(A,B).", "source: worksat10(person,institution).", "setMap: worksat10(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom11(person,institution).", "setMap: graduatedfrom11(A,B)=companyeconomicsector(A,B).", "source: influences11(person,person).", "target: acquired(company,company).", "setMap: influences11(A,B)=acquired(A,B).", "source: hasacademicadvisor12(person,person).", "setMap: hasacademicadvisor12(A,B)=bankboughtbank(A,B).", "source: influences13(person,person).", "setMap: influences13(A,B)=bankboughtbank(A,B).", "source: bankchiefexecutiveceotarget13(bankchiefexecutiveceotype1,bankchiefexecutiveceotype2).", "target: bankchiefexecutiveceo(company,person).", "setMap: bankchiefexecutiveceotarget13(A,B)=bankchiefexecutiveceo(A,B).", "source: companyceotarget14(companyceotype1,companyceotype2).", "target: companyceo(company,person).", "setMap: companyceotarget14(A,B)=companyceo(A,B).", "source: worksat20(person,institution).", "setMap: worksat20(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom21(person,institution).", "target: recursion_companyeconomicsector(company,sector).", "setMap: graduatedfrom21(A,B)=recursion_companyeconomicsector(A,B).", "source: actedin21(person,media).", "setMap: actedin21(A,B)=companyeconomicsector(A,B).", "source: worksat30(person,institution).", "setMap: worksat30(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom31(person,institution).", "setMap: graduatedfrom31(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor31(person,person).", "setMap: hasacademicadvisor31(A,B)=bankboughtbank(A,B).", "source: graduatedfrom32(person,institution).", "setMap: graduatedfrom32(A,B)=companyeconomicsector(A,B).", "source: countryhascompanyofficetarget33(countryhascompanyofficetype1,countryhascompanyofficetype2).", "target: countryhascompanyoffice(country,company).", "setMap: countryhascompanyofficetarget33(A,B)=countryhascompanyoffice(A,B).", "source: wasbornin35(person,place).", "target: companyalsoknownas(company,company).", "setMap: wasbornin35(A,B)=companyalsoknownas(A,B).", "source: companyalsoknownastarget35(companyalsoknownastype1,companyalsoknownastype2).", "setMap: companyalsoknownastarget35(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom36(person,institution).", "setMap: graduatedfrom36(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor37(person,person).", "setMap: hasacademicadvisor37(A,B)=bankboughtbank(A,B).", "source: hasgender38(person,genre).", "setMap: hasgender38(A,B)=acquired(A,B).", "source: hasacademicadvisor38(person,person).", "setMap: hasacademicadvisor38(A,B)=bankboughtbank(A,B).", "source: graduatedfrom39(person,institution).", "setMap: graduatedfrom39(A,B)=recursion_companyeconomicsector(A,B).", "source: bankchiefexecutiveceotarget39(bankchiefexecutiveceotype1,bankchiefexecutiveceotype2).", "setMap: bankchiefexecutiveceotarget39(A,B)=bankchiefexecutiveceo(A,B).", "source: cityhascompanyofficetarget310(cityhascompanyofficetype1,cityhascompanyofficetype2).", "target: cityhascompanyoffice(city,company).", "setMap: cityhascompanyofficetarget310(A,B)=cityhascompanyoffice(A,B).", "source: worksat40(person,institution).", "setMap: worksat40(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom41(person,institution).", "setMap: graduatedfrom41(A,B)=companyeconomicsector(A,B).", "source: actedin41(person,media).", "setMap: actedin41(A,B)=companyeconomicsector(A,B).", "source: edited42(person,media).", "setMap: edited42(A,B)=companyeconomicsector(A,B).", "source: directed43(person,media).", "setMap: directed43(A,B)=recursion_companyeconomicsector(A,B).", "source: iscitizenof44(person,place).", "setMap: iscitizenof44(A,B)=acquired(A,B).", "source: islocatedin45(place,place).", "setMap: islocatedin45(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom45(person,institution).", "setMap: graduatedfrom45(A,B)=companyeconomicsector(A,B).", "source: bankbankincountrytarget46(bankbankincountrytype1,bankbankincountrytype2).", "target: bankbankincountry(person,country).", "setMap: bankbankincountrytarget46(A,B)=bankbankincountry(A,B).", "source: companyeconomicsectortarget47(companyeconomicsectortype1,companyeconomicsectortype2).", "setMap: companyeconomicsectortarget47(A,B)=companyeconomicsector(A,B).", "source: cityhascompanyofficetarget47(cityhascompanyofficetype1,cityhascompanyofficetype2).", "setMap: cityhascompanyofficetarget47(A,B)=cityhascompanyoffice(A,B).", "source: recursion_companyeconomicsectortarget48(recursioncompanyeconomicsectortype1,recursioncompanyeconomicsectortype2).", "setMap: recursion_companyeconomicsectortarget48(A,B)=recursion_companyeconomicsector(A,B).", "source: bankboughtbanktarget48(bankboughtbanktype1,bankboughtbanktype2).", "setMap: bankboughtbanktarget48(A,B)=bankboughtbank(A,B).", "source: countryhascompanyofficetarget49(countryhascompanyofficetype1,countryhascompanyofficetype2).", "setMap: countryhascompanyofficetarget49(A,B)=countryhascompanyoffice(A,B).", "source: graduatedfrom49(person,institution).", "setMap: graduatedfrom49(A,B)=companyeconomicsector(A,B).", "source: bankchiefexecutiveceotarget410(bankchiefexecutiveceotype1,bankchiefexecutiveceotype2).", "setMap: bankchiefexecutiveceotarget410(A,B)=bankchiefexecutiveceo(A,B).", "source: worksat50(person,institution).", "setMap: worksat50(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom51(person,institution).", "setMap: graduatedfrom51(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom52(person,institution).", "setMap: graduatedfrom52(A,B)=companyeconomicsector(A,B).", "source: actedin53(person,media).", "setMap: actedin53(A,B)=recursion_companyeconomicsector(A,B).", "source: haschild53(person,person).", "setMap: haschild53(A,B)=companyalsoknownas(A,B).", "source: wasbornin54(person,place).", "setMap: wasbornin54(A,B)=bankboughtbank(A,B).", "source: livesin54(person,place).", "setMap: livesin54(A,B)=acquired(A,B).", "source: hasgender55(person,genre).", "setMap: hasgender55(A,B)=companyalsoknownas(A,B).", "source: wrotemusicfor55(person,media).", "setMap: wrotemusicfor55(A,B)=recursion_companyeconomicsector(A,B).", "source: ismarriedto56(person,person).", "setMap: ismarriedto56(A,B)=companyalsoknownas(A,B).", "source: worksat60(person,institution).", "setMap: worksat60(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom61(person,institution).", "setMap: graduatedfrom61(A,B)=recursion_companyeconomicsector(A,B).", "source: influences61(person,person).", "setMap: influences61(A,B)=companyalsoknownas(A,B).", "source: worksat70(person,institution).", "setMap: worksat70(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor71(person,person).", "setMap: hasacademicadvisor71(A,B)=bankboughtbank(A,B).", "source: graduatedfrom71(person,institution).", "setMap: graduatedfrom71(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom72(person,institution).", "setMap: graduatedfrom72(A,B)=recursion_companyeconomicsector(A,B).", "source: wrotemusicfor73(person,media).", "setMap: wrotemusicfor73(A,B)=companyeconomicsector(A,B).", "source: directed73(person,media).", "setMap: directed73(A,B)=recursion_companyeconomicsector(A,B).", "source: islocatedin74(place,place).", "setMap: islocatedin74(A,B)=acquired(A,B).", "source: diedin74(person,place).", "setMap: diedin74(A,B)=acquired(A,B).", "source: hascurrency75(place,currency).", "setMap: hascurrency75(A,B)=acquired(A,B).", "source: bankchiefexecutiveceotarget75(bankchiefexecutiveceotype1,bankchiefexecutiveceotype2).", "setMap: bankchiefexecutiveceotarget75(A,B)=bankchiefexecutiveceo(A,B).", "source: acquiredtarget76(acquiredtype1,acquiredtype2).", "setMap: acquiredtarget76(A,B)=acquired(A,B).", "source: companyeconomicsectortarget76(companyeconomicsectortype1,companyeconomicsectortype2).", "setMap: companyeconomicsectortarget76(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor77(person,person).", "setMap: hasacademicadvisor77(A,B)=bankboughtbank(A,B).", "source: haswebsite78(person,website).", "setMap: haswebsite78(A,B)=bankboughtbank(A,B).", "source: graduatedfrom78(person,institution).", "setMap: graduatedfrom78(A,B)=recursion_companyeconomicsector(A,B).", "source: haschild79(person,person).", "setMap: haschild79(A,B)=bankboughtbank(A,B).", "source: iscitizenof79(person,place).", "setMap: iscitizenof79(A,B)=acquired(A,B).", "source: iscitizenof710(person,place).", "setMap: iscitizenof710(A,B)=companyalsoknownas(A,B).", "source: acquiredtarget710(acquiredtype1,acquiredtype2).", "setMap: acquiredtarget710(A,B)=acquired(A,B).", "source: countryhascompanyofficetarget711(countryhascompanyofficetype1,countryhascompanyofficetype2).", "setMap: countryhascompanyofficetarget711(A,B)=countryhascompanyoffice(A,B).", "source: cityhascompanyofficetarget712(cityhascompanyofficetype1,cityhascompanyofficetype2).", "setMap: cityhascompanyofficetarget712(A,B)=cityhascompanyoffice(A,B).", "source: graduatedfrom713(person,institution).", "setMap: graduatedfrom713(A,B)=recursion_companyeconomicsector(A,B).", "source: economicsectorcompanytarget714(economicsectorcompanytype1,economicsectorcompanytype2).", "target: economicsectorcompany(sector,company).", "setMap: economicsectorcompanytarget714(A,B)=economicsectorcompany(A,B).", "source: worksat80(person,institution).", "setMap: worksat80(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom81(person,institution).", "setMap: graduatedfrom81(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom82(person,institution).", "setMap: graduatedfrom82(A,B)=companyeconomicsector(A,B).", "source: haschild83(person,person).", "setMap: haschild83(A,B)=acquired(A,B).", "source: iscitizenof83(person,place).", "setMap: iscitizenof83(A,B)=companyalsoknownas(A,B).", "source: iscitizenof84(person,place).", "setMap: iscitizenof84(A,B)=bankboughtbank(A,B).", "setMap: iscitizenof84(A,B)=companyalsoknownas(A,B).", "source: hasgender85(person,genre).", "setMap: hasgender85(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom85(person,institution).", "setMap: graduatedfrom85(A,B)=recursion_companyeconomicsector(A,B).", "source: companyalsoknownastarget87(companyalsoknownastype1,companyalsoknownastype2).", "setMap: companyalsoknownastarget87(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom88(person,institution).", "setMap: graduatedfrom88(A,B)=companyeconomicsector(A,B).", "source: worksat90(person,institution).", "setMap: worksat90(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom91(person,institution).", "setMap: graduatedfrom91(A,B)=companyeconomicsector(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]