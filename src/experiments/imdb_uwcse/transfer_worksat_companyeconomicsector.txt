["source: worksat00(person,institution).", "target: companyeconomicsector(company,sector).", "setMap: worksat00(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom01(person,institution).", "target: recursion_companyeconomicsector(company,sector).", "setMap: graduatedfrom01(A,B)=recursion_companyeconomicsector(A,B).", "source: influences01(person,person).", "target: acquired(company,company).", "setMap: influences01(A,B)=acquired(A,B).", "source: hasacademicadvisor02(person,person).", "target: companyalsoknownas(company,company).", "setMap: hasacademicadvisor02(A,B)=companyalsoknownas(A,B).", "source: hasacademicadvisor03(person,person).", "setMap: hasacademicadvisor03(A,B)=acquired(A,B).", "setMap: hasacademicadvisor03(A,B)=companyalsoknownas(A,B).", "source: hasgender04(person,genre).", "target: companyceo(company,person).", "setMap: hasgender04(A,B)=companyceo(A,B).", "source: graduatedfrom04(person,institution).", "setMap: graduatedfrom04(A,B)=companyeconomicsector(A,B).", "source: livesin05(person,place).", "setMap: livesin05(A,B)=companyceo(A,B).", "source: iscitizenof05(person,place).", "target: bankchiefexecutiveceo(company,person).", "setMap: iscitizenof05(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof06(person,place).", "setMap: iscitizenof06(A,B)=bankchiefexecutiveceo(A,B).", "source: hasacademicadvisor06(person,person).", "setMap: hasacademicadvisor06(A,B)=acquired(A,B).", "source: graduatedfrom07(person,institution).", "setMap: graduatedfrom07(A,B)=companyeconomicsector(A,B).", "source: worksat10(person,institution).", "setMap: worksat10(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom11(person,institution).", "setMap: graduatedfrom11(A,B)=companyeconomicsector(A,B).", "source: influences11(person,person).", "setMap: influences11(A,B)=acquired(A,B).", "source: hasacademicadvisor12(person,person).", "target: bankboughtbank(company,company).", "setMap: hasacademicadvisor12(A,B)=bankboughtbank(A,B).", "source: influences13(person,person).", "setMap: influences13(A,B)=companyalsoknownas(A,B).", "source: iscitizenof13(person,place).", "setMap: iscitizenof13(A,B)=companyceo(A,B).", "source: iscitizenof14(person,place).", "setMap: iscitizenof14(A,B)=companyceo(A,B).", "source: exports15(place,material).", "target: bankbankincountry(person,country).", "setMap: exports15(A,B)=bankbankincountry(A,B).", "source: hasacademicadvisor15(person,person).", "setMap: hasacademicadvisor15(A,B)=bankboughtbank(A,B).", "source: hasgender16(person,genre).", "setMap: hasgender16(A,B)=companyceo(A,B).", "source: graduatedfrom16(person,institution).", "setMap: graduatedfrom16(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor17(person,person).", "setMap: hasacademicadvisor17(A,B)=bankboughtbank(A,B).", "source: graduatedfrom17(person,institution).", "setMap: graduatedfrom17(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor18(person,person).", "setMap: hasacademicadvisor18(A,B)=bankboughtbank(A,B).", "source: hasacademicadvisor19(person,person).", "setMap: hasacademicadvisor19(A,B)=companyalsoknownas(A,B).", "setMap: hasacademicadvisor19(A,B)=acquired(A,B).", "source: hasgender110(person,genre).", "setMap: hasgender110(A,B)=companyceo(A,B).", "source: hasacademicadvisor110(person,person).", "setMap: hasacademicadvisor110(A,B)=bankboughtbank(A,B).", "source: graduatedfrom111(person,institution).", "setMap: graduatedfrom111(A,B)=companyeconomicsector(A,B).", "source: haschild112(person,person).", "setMap: haschild112(A,B)=companyalsoknownas(A,B).", "source: worksat20(person,institution).", "setMap: worksat20(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom21(person,institution).", "setMap: graduatedfrom21(A,B)=companyeconomicsector(A,B).", "source: actedin21(person,media).", "setMap: actedin21(A,B)=acquired(A,B).", "source: graduatedfrom22(person,institution).", "setMap: graduatedfrom22(A,B)=recursion_companyeconomicsector(A,B).", "source: iscitizenof23(person,place).", "setMap: iscitizenof23(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof24(person,place).", "setMap: iscitizenof24(A,B)=bankchiefexecutiveceo(A,B).", "source: graduatedfrom24(person,institution).", "setMap: graduatedfrom24(A,B)=recursion_companyeconomicsector(A,B).", "source: haschild25(person,person).", "setMap: haschild25(A,B)=bankboughtbank(A,B).", "source: iscitizenof25(person,place).", "setMap: iscitizenof25(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof26(person,place).", "setMap: iscitizenof26(A,B)=bankchiefexecutiveceo(A,B).", "source: graduatedfrom26(person,institution).", "setMap: graduatedfrom26(A,B)=recursion_companyeconomicsector(A,B).", "source: graduatedfrom27(person,institution).", "setMap: graduatedfrom27(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor28(person,person).", "setMap: hasacademicadvisor28(A,B)=acquired(A,B).", "source: influences28(person,person).", "setMap: influences28(A,B)=bankboughtbank(A,B).", "source: graduatedfrom29(person,institution).", "setMap: graduatedfrom29(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor29(person,person).", "setMap: hasacademicadvisor29(A,B)=bankboughtbank(A,B).", "source: hasgender210(person,genre).", "setMap: hasgender210(A,B)=bankchiefexecutiveceo(A,B).", "source: hasacademicadvisor210(person,person).", "setMap: hasacademicadvisor210(A,B)=companyalsoknownas(A,B).", "source: hasgender211(person,genre).", "setMap: hasgender211(A,B)=companyceo(A,B).", "source: worksat30(person,institution).", "setMap: worksat30(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom31(person,institution).", "setMap: graduatedfrom31(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor31(person,person).", "setMap: hasacademicadvisor31(A,B)=bankboughtbank(A,B).", "source: graduatedfrom32(person,institution).", "setMap: graduatedfrom32(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor34(person,person).", "setMap: hasacademicadvisor34(A,B)=bankboughtbank(A,B).", "source: graduatedfrom35(person,institution).", "setMap: graduatedfrom35(A,B)=companyeconomicsector(A,B).", "setMap: graduatedfrom35(A,B)=recursion_companyeconomicsector(A,B).", "source: wrotemusicfor36(person,media).", "setMap: wrotemusicfor36(A,B)=companyalsoknownas(A,B).", "source: directed37(person,media).", "setMap: directed37(A,B)=bankboughtbank(A,B).", "source: worksat40(person,institution).", "setMap: worksat40(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom41(person,institution).", "setMap: graduatedfrom41(A,B)=companyeconomicsector(A,B).", "source: actedin41(person,media).", "setMap: actedin41(A,B)=acquired(A,B).", "source: graduatedfrom42(person,institution).", "setMap: graduatedfrom42(A,B)=recursion_companyeconomicsector(A,B).", "source: wrotemusicfor43(person,media).", "setMap: wrotemusicfor43(A,B)=bankboughtbank(A,B).", "source: edited43(person,media).", "setMap: edited43(A,B)=companyalsoknownas(A,B).", "source: directed44(person,media).", "setMap: directed44(A,B)=bankboughtbank(A,B).", "source: iscitizenof45(person,place).", "setMap: iscitizenof45(A,B)=bankchiefexecutiveceo(A,B).", "source: haswebsite46(person,website).", "setMap: haswebsite46(A,B)=recursion_companyeconomicsector(A,B).", "source: diedin47(person,place).", "setMap: diedin47(A,B)=companyceo(A,B).", "source: graduatedfrom47(person,institution).", "setMap: graduatedfrom47(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom48(person,institution).", "setMap: graduatedfrom48(A,B)=recursion_companyeconomicsector(A,B).", "source: graduatedfrom410(person,institution).", "setMap: graduatedfrom410(A,B)=companyeconomicsector(A,B).", "source: isknownfor411(person,theory).", "setMap: isknownfor411(A,B)=bankchiefexecutiveceo(A,B).", "source: worksat50(person,institution).", "setMap: worksat50(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom51(person,institution).", "setMap: graduatedfrom51(A,B)=recursion_companyeconomicsector(A,B).", "source: hasgender52(person,genre).", "setMap: hasgender52(A,B)=companyceo(A,B).", "source: graduatedfrom53(person,institution).", "setMap: graduatedfrom53(A,B)=recursion_companyeconomicsector(A,B).", "source: actedin54(person,media).", "setMap: actedin54(A,B)=acquired(A,B).", "source: haschild54(person,person).", "setMap: haschild54(A,B)=acquired(A,B).", "source: wasbornin55(person,place).", "setMap: wasbornin55(A,B)=bankchiefexecutiveceo(A,B).", "source: livesin55(person,place).", "setMap: livesin55(A,B)=bankchiefexecutiveceo(A,B).", "source: hasgender56(person,genre).", "setMap: hasgender56(A,B)=bankchiefexecutiveceo(A,B).", "source: wrotemusicfor56(person,media).", "setMap: wrotemusicfor56(A,B)=acquired(A,B).", "source: ismarriedto57(person,person).", "setMap: ismarriedto57(A,B)=acquired(A,B).", "source: hasacademicadvisor57(person,person).", "setMap: hasacademicadvisor57(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom58(person,institution).", "setMap: graduatedfrom58(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor58(person,person).", "setMap: hasacademicadvisor58(A,B)=bankboughtbank(A,B).", "source: graduatedfrom59(person,institution).", "setMap: graduatedfrom59(A,B)=recursion_companyeconomicsector(A,B).", "source: worksat60(person,institution).", "setMap: worksat60(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom61(person,institution).", "setMap: graduatedfrom61(A,B)=companyeconomicsector(A,B).", "source: influences61(person,person).", "setMap: influences61(A,B)=companyalsoknownas(A,B).", "source: livesin62(person,place).", "setMap: livesin62(A,B)=companyceo(A,B).", "source: hasacademicadvisor63(person,person).", "setMap: hasacademicadvisor63(A,B)=acquired(A,B).", "source: iscitizenof63(person,place).", "setMap: iscitizenof63(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof64(person,place).", "setMap: iscitizenof64(A,B)=bankchiefexecutiveceo(A,B).", "setMap: iscitizenof64(A,B)=companyceo(A,B).", "source: exports65(place,material).", "setMap: exports65(A,B)=bankbankincountry(A,B).", "source: directed65(person,media).", "setMap: directed65(A,B)=acquired(A,B).", "source: diedin66(person,place).", "setMap: diedin66(A,B)=bankchiefexecutiveceo(A,B).", "source: hascurrency67(place,currency).", "setMap: hascurrency67(A,B)=bankbankincountry(A,B).", "source: hasacademicadvisor67(person,person).", "setMap: hasacademicadvisor67(A,B)=bankboughtbank(A,B).", "source: haswebsite68(person,website).", "setMap: haswebsite68(A,B)=recursion_companyeconomicsector(A,B).", "source: worksat70(person,institution).", "setMap: worksat70(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor71(person,person).", "setMap: hasacademicadvisor71(A,B)=acquired(A,B).", "source: graduatedfrom71(person,institution).", "setMap: graduatedfrom71(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor72(person,person).", "setMap: hasacademicadvisor72(A,B)=acquired(A,B).", "source: hasacademicadvisor73(person,person).", "setMap: hasacademicadvisor73(A,B)=companyalsoknownas(A,B).", "source: graduatedfrom73(person,institution).", "setMap: graduatedfrom73(A,B)=recursion_companyeconomicsector(A,B).", "source: livesin74(person,place).", "setMap: livesin74(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof75(person,place).", "setMap: iscitizenof75(A,B)=bankchiefexecutiveceo(A,B).", "source: hasacademicadvisor75(person,person).", "setMap: hasacademicadvisor75(A,B)=bankboughtbank(A,B).", "source: graduatedfrom76(person,institution).", "setMap: graduatedfrom76(A,B)=recursion_companyeconomicsector(A,B).", "source: hasacademicadvisor76(person,person).", "setMap: hasacademicadvisor76(A,B)=companyalsoknownas(A,B).", "source: iscitizenof77(person,place).", "setMap: iscitizenof77(A,B)=bankchiefexecutiveceo(A,B).", "source: worksat80(person,institution).", "setMap: worksat80(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom81(person,institution).", "setMap: graduatedfrom81(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom82(person,institution).", "setMap: graduatedfrom82(A,B)=companyeconomicsector(A,B).", "source: haschild83(person,person).", "setMap: haschild83(A,B)=bankboughtbank(A,B).", "source: iscitizenof83(person,place).", "setMap: iscitizenof83(A,B)=companyceo(A,B).", "source: iscitizenof84(person,place).", "setMap: iscitizenof84(A,B)=companyceo(A,B).", "source: hascurrency84(place,currency).", "setMap: hascurrency84(A,B)=bankbankincountry(A,B).", "source: ismarriedto85(person,person).", "setMap: ismarriedto85(A,B)=companyalsoknownas(A,B).", "source: iscitizenof85(person,place).", "setMap: iscitizenof85(A,B)=bankchiefexecutiveceo(A,B).", "source: hasgender86(person,genre).", "setMap: hasgender86(A,B)=bankchiefexecutiveceo(A,B).", "source: graduatedfrom86(person,institution).", "setMap: graduatedfrom86(A,B)=recursion_companyeconomicsector(A,B).", "source: graduatedfrom88(person,institution).", "setMap: graduatedfrom88(A,B)=companyeconomicsector(A,B).", "source: worksat90(person,institution).", "setMap: worksat90(A,B)=companyeconomicsector(A,B).", "source: graduatedfrom91(person,institution).", "setMap: graduatedfrom91(A,B)=companyeconomicsector(A,B).", "source: hasacademicadvisor92(person,person).", "setMap: hasacademicadvisor92(A,B)=bankboughtbank(A,B).", "source: graduatedfrom93(person,institution).", "setMap: graduatedfrom93(A,B)=companyeconomicsector(A,B).", "source: iscitizenof93(person,place).", "setMap: iscitizenof93(A,B)=bankchiefexecutiveceo(A,B).", "source: iscitizenof94(person,place).", "setMap: iscitizenof94(A,B)=bankchiefexecutiveceo(A,B).", "source: hasacademicadvisor95(person,person).", "setMap: hasacademicadvisor95(A,B)=bankboughtbank(A,B).", "source: hasacademicadvisor96(person,person).", "setMap: hasacademicadvisor96(A,B)=bankboughtbank(A,B).", "source: graduatedfrom96(person,institution).", "setMap: graduatedfrom96(A,B)=recursion_companyeconomicsector(A,B).", "source: isknownfor97(person,theory).", "setMap: isknownfor97(A,B)=bankchiefexecutiveceo(A,B).", "source: influences97(person,person).", "setMap: influences97(A,B)=companyalsoknownas(A,B).", "source: influences98(person,person).", "setMap: influences98(A,B)=bankboughtbank(A,B).", "source: graduatedfrom98(person,institution).", "setMap: graduatedfrom98(A,B)=recursion_companyeconomicsector(A,B).", "setParam: searchArgPermutation=true.", "setParam: searchEmpty=false.", "setParam: allowSameTargetMap=false."]