% Running on host: C02DX2QHML7H

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=0: args[N]=train/train_pos.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=1: args[N]=train/train_neg.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=2: args[N]=train/train_bk.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=3: args[N]=train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../background.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 1.078 facts.
% Have read 382 examples from 'train' [train/train*].
% Have read 764 examples from 'train' [train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 workedunder(D, E)
%  targetPred:                workedunder/2
%  targetArgTypes:            signature = [const, const], types = [+person, +person]
%  targets:                   [workedunder(D, E)]
%  targetPredicates:          [workedunder/2]
%  targetArgSpecs:            [[D[+person], E[+person]]]
%  variablesInTargets:        [[D, E]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 20 milliseconds
% Time to collect examples: 0 seconds

% Read 382 pos examples and 764 neg examples.
% Time to init learnOneClause: 26 milliseconds
% Old dirnull
Setting model dir

% Have 382 'raw' positive examples and kept 382.
% Have 764 'raw' negative examples and kept 764.

% processing backup's for workedunder
%  POS EX = 382
%  NEG EX = 764

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
train/models/
File: train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for workedunder

% Learn model for: workedunder
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Dataset size: 1.146
Computing probabilities
prob time:2 milliseconds
No hidden examples for : workedunder
Time to build dataset: 5 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222054
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 101 236 292 313 385 390 611 620 646 778
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% LearnOneClause Parameters:
%   Targets (3):
%    workedunder(+person, +person),
%    workedunder(+person, -person),
%    workedunder(-person, +person)
%  Modes (43):
%    female(+person),
%    actor(+person),
%    director(+person),
%    movie(+movie, +person),
%    movie(+movie, -person),
%    movie(-movie, +person),
%    genre(+person, +genre),
%    addList(+willList, #willNumber),
%    multiplyList(+willList, #willNumber),
%    abs(+willNumber, &willNumber),
%    minus(+willNumber, &willNumber),
%    minus(+willNumber, +willNumber, &willNumber),
%    plus(+willNumber, +willNumber, &willNumber),
%    mult(+willNumber, +willNumber, &willNumber),
%    div(+willNumber, +willNumber, &willNumber),
%    allNumbers(+willList),
%    positiveNumber(+willNumber),
%    negativeNumber(+willNumber),
%    in0toDot001(+willNumber),
%    in0toDot01(+willNumber),
%    in0toDot1(+willNumber),
%    in0to1(+willNumber),
%    in0to10(+willNumber),
%    in0to100(+willNumber),
%    in0to1000(+willNumber),
%    equalWithTolerance(+willNumber, +willNumber, &willNumber),
%    greaterOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    smallerOrEqualDifference(+willNumber, +willNumber, &willNumber),
%    isaEqualTolerance(+willNumber),
%    lessThan(+willNumber, +willNumber),
%    greaterThan(+willNumber, +willNumber),
%    lessThanOrEqual(+willNumber, +willNumber),
%    greaterThanOrEqual(+willNumber, +willNumber),
%    inBetweenOO(+willNumber, +willNumber, +willNumber),
%    inBetweenCO(+willNumber, +willNumber, +willNumber),
%    inBetweenOC(+willNumber, +willNumber, +willNumber),
%    inBetweenCC(+willNumber, +willNumber, +willNumber),
%    memberOfList(+willAnything, +willList),
%    firstInList(+willList, &willAnything),
%    restOfList(+willList, &willList),
%    positionInList(+willAnything, +willList, &willNumber),
%    nthInList(+willNumber, +willList, &willAnything),
%    lengthOfList(+willList, &willNumber)

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for female/1 with 95 assertions.
% [ LazyGroundClauseIndex ]  Building full index for actor/1 with 236 assertions.
% [ LazyGroundClauseIndex ]  Building full index for director/1 with 32 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for movie/2.
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -253,316592 (regressionFit = 253,316591, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -253,316592): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447800 (regressionFit = 198,447799, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -198,447800): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343138 (regressionFit = 24,343137, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24,343138): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343138 (regressionFit = 24,343137, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-24.343138374902846
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -190,247045 (regressionFit = 190,247043, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-24.343138374902846
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -178,215450 (regressionFit = 178,215448, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-198.4477998621291
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -230,626558 (regressionFit = 230,626556, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-253.31659229976154
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -230,626558 (regressionFit = 230,626556, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -190,247045 (regressionFit = 190,247043, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -178,215450 (regressionFit = 178,215448, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
% [ LazyGroundClauseIndex ]  Building full index for movie/2 with 286 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for movie/2.
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -136,336702 (regressionFit = 136,336700, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -253,316593 (regressionFit = 253,316591, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -198,447801 (regressionFit = 198,447799, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -24,343139 (regressionFit = 24,343137, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -136,336702 (regressionFit = 136,336700, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 0;
Comparing variance: -6.883984499572786E-16 to score=0.0025 #egs=738.0
Comparing variance: 0.059664552095351354 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,059665)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,059665) into the LAST position (#1) in the search queue.

% Time for loop #1: 493 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 25 48 83 103 109 112 226 272 273 322
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291927 (regressionFit = 24,291925, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -24,291927): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-24.291926585840933
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -24,291927 (regressionFit = 24,291925, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291927 (regressionFit = 24,291925, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 2,04681e-12, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -24,291928 (regressionFit = 24,291925, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 2,04681e-12, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,060.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 0;false
Comparing variance: 5.3569714109662005E-15 to score=0.0025 #egs=382.0
Comparing variance: 1.708035422500241E-17 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 159 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 21:04:53 6/7/21.  [Using 4.696.336 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1418510649004894;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.8581489350995083;  // std dev = 1,43e-06, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.1418510649004877;  // std dev = 2,11e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.1418510649004894) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.8581489350995083) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.1418510649004877) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.1418510649004894) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.8581489350995083) :-  /* #pos=382 */ 
   movie(uniqueVar1, a),
   movie(uniqueVar1, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.1418510649004877) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   actor(a)
%   movie(uniqueVar1, b)
%   movie(uniqueVar1, a)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 1 trees is 732 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.059664552095351264
Set score:0.0025
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:8 milliseconds
No hidden examples for : workedunder
Time to build dataset: 37 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.1586414472144888
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 127 186 580 632 857 1060
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -180,839299 (regressionFit = 180,839298, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -180,839299): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669208 (regressionFit = 141,669207, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -141,669208): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378238 (regressionFit = 17,378237, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17,378238): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378238 (regressionFit = 17,378237, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-17.37823847736112
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -135,814800 (regressionFit = 135,814798, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378240 (regressionFit = 17,378237, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-17.37823847736112
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 3 items to OPEN for evaluation and possible insertion.
% Have created 3 valid-on-seeds descendants and have picked up 4 bad extensions.
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378240 (regressionFit = 17,378237, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-141.66920807041907
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-180.83929894687978
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -135,814800 (regressionFit = 135,814798, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378239 (regressionFit = 17,378237, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -97,328933 (regressionFit = 97,328932, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -180,839300 (regressionFit = 180,839298, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -141,669209 (regressionFit = 141,669207, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378240 (regressionFit = 17,378237, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -17,378240 (regressionFit = 17,378237, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -97,328933 (regressionFit = 97,328932, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 1;
Comparing variance: -4.188158401837989E-16 to score=0.0025 #egs=738.0
Comparing variance: 0.042593719013140754 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,042594)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,042594) into the LAST position (#1) in the search queue.

% Time for loop #1: 357 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 112 148 167 178 203 220 249 256 285 321
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341679 (regressionFit = 17,341678, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -17,341679): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-17.341679071870125
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -1,98963e-12, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -17,341680 (regressionFit = 17,341678, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -1,98963e-12, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,043.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 1;false
Comparing variance: -5.2081666495504725E-15 to score=0.0025 #egs=382.0
Comparing variance: -4.270088556250602E-18 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 92 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 21:04:54 6/7/21.  [Using 4.913.424 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.1254446385283924;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.7194734122109581;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.12544463852839138;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.1254446385283924) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.7194734122109581) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.12544463852839138) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.1254446385283924) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.7194734122109581) :-  /* #pos=382 */ 
   movie(uniqueVar2, a),
   movie(uniqueVar2, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.12544463852839138) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar2, b)
%   actor(a)
%   movie(uniqueVar2, a)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 2 trees is 1,259 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.04259371901314074
Set score:0.0025
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:12 milliseconds
No hidden examples for : workedunder
Time to build dataset: 34 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.09906674252578708
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 69 313 377 387 515 579 604 743 791 994
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -112,928624 (regressionFit = 112,928623, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -112,928624): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468098 (regressionFit = 88,468096, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -88,468098): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852180 (regressionFit = 10,852179, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,852180): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852180 (regressionFit = 10,852179, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-10.852180018155446
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -84,812199 (regressionFit = 84,812197, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-10.852180018155446
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -79,448510 (regressionFit = 79,448508, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-88.46809754258584
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -102,813399 (regressionFit = 102,813397, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468098 (regressionFit = 88,468096, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-112.92862394162215
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -102,813399 (regressionFit = 102,813397, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -84,812199 (regressionFit = 84,812197, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -79,448510 (regressionFit = 79,448508, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468098 (regressionFit = 88,468096, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -60,778949 (regressionFit = 60,778948, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -112,928625 (regressionFit = 112,928623, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -88,468099 (regressionFit = 88,468096, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -10,852181 (regressionFit = 10,852179, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -60,778949 (regressionFit = 60,778948, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 2;
Comparing variance: -2.2866382079000515E-16 to score=0.0025 #egs=738.0
Comparing variance: 0.02659847769155788 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,026598)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,026598) into the LAST position (#1) in the search queue.

% Time for loop #1: 292 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 5 24 85 120 125 131 147 199 206 212
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829350 (regressionFit = 10,829349, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -10,829350): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-10.829349785110395
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -3,97959e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -10,829351 (regressionFit = 10,829349, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -3,97959e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,027.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 2;false
Comparing variance: -1.0416333299100944E-15 to score=0.0025 #egs=382.0
Comparing variance: -2.135044278125301E-18 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 57 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 21:04:54 6/7/21.  [Using 5.100.880 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.11231637819360694;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.555366436746283;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.11231637819360639;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.11231637819360694) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.555366436746283) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.11231637819360639) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.11231637819360694) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.555366436746283) :-  /* #pos=382 */ 
   movie(uniqueVar3, a),
   movie(uniqueVar3, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.11231637819360639) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   actor(a)
%   movie(uniqueVar3, a)
%   movie(uniqueVar3, b)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 3 trees is 1,678 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.02659847769155782
Set score:0.0025
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:10 milliseconds
No hidden examples for : workedunder
Time to build dataset: 26 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.059883356099042113
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 63 83 129 242 345 731 770 854 916 924
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -68,262515 (regressionFit = 68,262514, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -68,262515): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476742 (regressionFit = 53,476741, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -53,476742): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,559871): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-6.559870525614475
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -51,266844 (regressionFit = 51,266842, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-6.559870525614475
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -48,024628 (regressionFit = 48,024626, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-53.476742016161154
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -62,148117 (regressionFit = 62,148115, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-68.26251547936322
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -62,148117 (regressionFit = 62,148115, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -68,262516 (regressionFit = 68,262514, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -51,266844 (regressionFit = 51,266842, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -48,024628 (regressionFit = 48,024626, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -68,262517 (regressionFit = 68,262514, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -68,262516 (regressionFit = 68,262514, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -68,262516 (regressionFit = 68,262514, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559871 (regressionFit = 6,559869, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -68,262517 (regressionFit = 68,262514, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -36,739348 (regressionFit = 36,739346, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -68,262516 (regressionFit = 68,262514, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -53,476743 (regressionFit = 53,476741, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,559872 (regressionFit = 6,559869, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -36,739348 (regressionFit = 36,739346, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 3;
Comparing variance: 3.995599394856932E-16 to score=0.0025 #egs=738.0
Comparing variance: 0.01607811128827005 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,016078)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,016078) into the LAST position (#1) in the search queue.

% Time for loop #1: 169 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 6 58 64 80 104 106 143 167 181 188
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546070 (regressionFit = 6,546069, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -6,546070): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-6.546070223510519
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -5,82701e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -6,546071 (regressionFit = 6,546069, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -5,82701e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,016.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 3;false
Comparing variance: -1.5252488045112099E-15 to score=0.0025 #egs=382.0
Comparing variance: -2.135044278125301E-18 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 58 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 21:04:54 6/7/21.  [Using 5.118.128 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.10159632948783469;  // std dev = 5,43e-07, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.417513584158312;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.10159632948783635;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.10159632948783469) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.417513584158312) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.10159632948783635) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.10159632948783469) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.417513584158312) :-  /* #pos=382 */ 
   movie(uniqueVar4, a),
   movie(uniqueVar4, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.10159632948783635) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar4, b)
%   actor(a)
%   movie(uniqueVar4, a)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 4 trees is 1,964 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.016078111288270025
Set score:0.0025
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:10 milliseconds
No hidden examples for : workedunder
Time to build dataset: 22 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0379782538655678
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 73 77 134 158 283 355 375 408 533 650
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -43,292349 (regressionFit = 43,292348, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -43,292349): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915155 (regressionFit = 33,915154, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -33,915155): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160295 (regressionFit = 4,160294, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,160295): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160295 (regressionFit = 4,160294, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-4.16029542947891
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -32,513629 (regressionFit = 32,513627, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160297 (regressionFit = 4,160294, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-4.16029542947891
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -30,457404 (regressionFit = 30,457402, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160297 (regressionFit = 4,160294, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-33.91515507861336
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -39,414574 (regressionFit = 39,414573, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-43.29234925683091
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -39,414574 (regressionFit = 39,414573, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -32,513629 (regressionFit = 32,513627, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -30,457404 (regressionFit = 30,457402, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160296 (regressionFit = 4,160294, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -23,300236 (regressionFit = 23,300234, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -43,292350 (regressionFit = 43,292348, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -33,915156 (regressionFit = 33,915154, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160297 (regressionFit = 4,160294, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -4,160297 (regressionFit = 4,160294, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -23,300236 (regressionFit = 23,300234, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 4;
Comparing variance: -6.378517106247512E-17 to score=0.0025 #egs=738.0
Comparing variance: 0.010196799778134697 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,010197)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,010197) into the LAST position (#1) in the search queue.

% Time for loop #1: 126 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 8 positive seeds: 4 92 113 155 162 232 253 308
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151543 (regressionFit = 4,151542, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -4,151543): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-4.15154322501283
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -5,47062e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -4,151544 (regressionFit = 4,151542, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -5,47062e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,010.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 4;false
Comparing variance: -1.4322458286263799E-15 to score=0.0025 #egs=382.0
Comparing variance: 2.135044278125301E-18 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 40 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 21:04:55 6/7/21.  [Using 5.122.384 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.09269127618926172;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.32071184716015166;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.09269127618926096;  // std dev = 7,45e-09, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.09269127618926172) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.32071184716015166) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.09269127618926096) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.09269127618926172) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.32071184716015166) :-  /* #pos=382 */ 
   movie(uniqueVar5, a),
   movie(uniqueVar5, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.09269127618926096) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar5, a)
%   actor(a)
%   movie(uniqueVar5, b)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 5 trees is 2,183 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.010196799778134674
Set score:0.0025
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:18 milliseconds
No hidden examples for : workedunder
Time to build dataset: 43 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.025742862963566236
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 315 330 378 432 446 593 626 811 853 868
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -29,344925 (regressionFit = 29,344924, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -29,344925): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988766 (regressionFit = 22,988765, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -22,988766): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819980 (regressionFit = 2,819979, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,819980): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819980 (regressionFit = 2,819979, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-2.8199803290532137
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -22,038768 (regressionFit = 22,038766, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-2.8199803290532137
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -20,644993 (regressionFit = 20,644991, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-22.988766317981124
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-29.34492543912219
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -29,344926 (regressionFit = 29,344924, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,038768 (regressionFit = 22,038766, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -20,644993 (regressionFit = 20,644991, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -29,344927 (regressionFit = 29,344924, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -29,344926 (regressionFit = 29,344924, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -29,344926 (regressionFit = 29,344924, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -29,344927 (regressionFit = 29,344924, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,793638 (regressionFit = 15,793636, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -29,344926 (regressionFit = 29,344924, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -22,988767 (regressionFit = 22,988765, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,819981 (regressionFit = 2,819979, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,793638 (regressionFit = 15,793636, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 5;
Comparing variance: 3.610481380894818E-17 to score=0.0025 #egs=738.0
Comparing variance: 0.00691171374767938 to score=0.0025 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,006912)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,006912) into the LAST position (#1) in the search queue.

% Time for loop #1: 166 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 3 positive seeds: 79 237 358
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814048 (regressionFit = 2,814047, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,814048): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-2.8140478077471687
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 1,95705e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,814049 (regressionFit = 2,814047, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 1,95705e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,007.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 5;false
Comparing variance: 5.115163673665643E-16 to score=0.0025 #egs=382.0
Comparing variance: 1.1742743529689156E-17 to score=0.0025 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0025
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #2: 50 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 21:04:55 6/7/21.  [Using 5.139.840 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.08518475138839675;  // std dev = 1,63e-07, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.25517224256948734;  // std dev = 4,42e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.08518475138839682;  // std dev = 1,75e-08, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.08518475138839675) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.25517224256948734) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.08518475138839682) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.08518475138839675) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.25517224256948734) :-  /* #pos=382 */ 
   movie(uniqueVar6, a),
   movie(uniqueVar6, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.08518475138839682) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar6, a)
%   actor(a)
%   movie(uniqueVar6, b)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 6 trees is 2,479 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.006911713747679377
Set score:0.0017279284369198442
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:16 milliseconds
No hidden examples for : workedunder
Time to build dataset: 28 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.018500475686226793
Set score:0.0017279284369198442
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 56 68 172 188 190 202 227 406 558 734
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -21,089150 (regressionFit = 21,089148, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -21,089150): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521205 (regressionFit = 16,521204, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -16,521205): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026619 (regressionFit = 2,026618, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,026619): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026619 (regressionFit = 2,026618, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-2.02661940509848
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -15,838476 (regressionFit = 15,838474, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026621 (regressionFit = 2,026618, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-2.02661940509848
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -14,836820 (regressionFit = 14,836818, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026621 (regressionFit = 2,026618, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-16.521205160263733
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -19,200156 (regressionFit = 19,200154, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-21.089149582175374
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -19,200156 (regressionFit = 19,200154, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,838476 (regressionFit = 15,838474, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -14,836820 (regressionFit = 14,836818, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026620 (regressionFit = 2,026618, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -11,350324 (regressionFit = 11,350322, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -21,089151 (regressionFit = 21,089148, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -16,521206 (regressionFit = 16,521204, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026621 (regressionFit = 2,026618, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -2,026621 (regressionFit = 2,026618, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -11,350324 (regressionFit = 11,350322, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 6;
Comparing variance: -2.0820442629826784E-16 to score=0.0017279284369198442 #egs=738.0
Comparing variance: 0.004967201679163318 to score=0.0017279284369198442 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0017279284369198442
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,004967)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,004967) into the LAST position (#1) in the search queue.

% Time for loop #1: 125 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 28 33 64 80 173 178 181 182 196 272
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022356 (regressionFit = 2,022355, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -2,022356): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-2.022355914035822
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,38933e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -2,022357 (regressionFit = 2,022355, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,38933e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,005.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 6;false
Comparing variance: 1.6740535659269377E-16 to score=0.0017279284369198442 #egs=382.0
Comparing variance: -2.135044278125301E-18 to score=0.0017279284369198442 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0017279284369198442
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0017279284369198442

% Time for loop #2: 40 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 21:04:55 6/7/21.  [Using 5.142.848 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07877675473109298;  // std dev = 0,000, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.20975771563253462;  // std dev = 2,53e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07877675473109175;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.07877675473109298) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.20975771563253462) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.07877675473109175) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.07877675473109298) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.20975771563253462) :-  /* #pos=382 */ 
   movie(uniqueVar7, a),
   movie(uniqueVar7, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.07877675473109175) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar7, b)
%   actor(a)
%   movie(uniqueVar7, a)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 7 trees is 2,709 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.004967201679163313
Set score:0.0012418004197908283
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:16 milliseconds
No hidden examples for : workedunder
Time to build dataset: 29 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.013926995380823967
Set score:0.0012418004197908283
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 7 positive seeds: 184 253 311 370 646 756 1059
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -15,875727 (regressionFit = 15,875725, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -15,875727): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437018 (regressionFit = 12,437017, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12,437018): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,525622): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-1.525621540467281
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,923066 (regressionFit = 11,923064, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-1.525621540467281
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -11,169028 (regressionFit = 11,169026, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-12.437018213874115
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -14,453709 (regressionFit = 14,453707, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-15.87572659861015
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -14,453709 (regressionFit = 14,453707, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -11,923066 (regressionFit = 11,923064, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -11,169028 (regressionFit = 11,169026, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525622 (regressionFit = 1,525620, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -8,544425 (regressionFit = 8,544423, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 8 items to OPEN for evaluation and possible insertion.
% Have created 8 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -15,875728 (regressionFit = 15,875725, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,437019 (regressionFit = 12,437017, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,525623 (regressionFit = 1,525620, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -8,544425 (regressionFit = 8,544423, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 7;
Comparing variance: 1.5705594006892458E-16 to score=0.0012418004197908283 #egs=738.0
Comparing variance: 0.00373926573643913 to score=0.0012418004197908283 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0012418004197908283
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,003739)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,003739) into the LAST position (#1) in the search queue.

% Time for loop #1: 121 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 6 positive seeds: 86 238 272 293 312 355
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522412 (regressionFit = 1,522411, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,522412): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-1.5224120218932613
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,74738e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,522413 (regressionFit = 1,522411, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = 6,74738e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,004.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 7;false
Comparing variance: 1.7670565418117674E-16 to score=0.0012418004197908283 #egs=382.0
Comparing variance: -1.0675221390626506E-18 to score=0.0012418004197908283 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 0.0012418004197908283
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0012418004197908283

% Time for loop #2: 35 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 21:04:55 6/7/21.  [Using 5.166.768 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.07324622576333607;  // std dev = 3,40e-07, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.17709649774527667;  // std dev = 2,60e-07, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.07324622576333704;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.07324622576333607) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.17709649774527667) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.07324622576333704) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.07324622576333607) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.17709649774527667) :-  /* #pos=382 */ 
   movie(uniqueVar8, a),
   movie(uniqueVar8, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.07324622576333704) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   actor(a)
%   movie(uniqueVar8, a)
%   movie(uniqueVar8, b)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 8 trees is 2,931 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.003739265736439134
Set score:9.348164341097835E-4
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:13 milliseconds
No hidden examples for : workedunder
Time to build dataset: 24 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.010870341926546559
Set score:9.348164341097835E-4
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 7 68 318 335 433 483 570 600 667 806
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -12,391372 (regressionFit = 12,391371, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -12,391372): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707381 (regressionFit = 9,707379, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,707381): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190783 (regressionFit = 1,190782, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,190783): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190783 (regressionFit = 1,190782, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-1.1907831348652975
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -9,306229 (regressionFit = 9,306227, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-1.1907831348652975
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -8,717685 (regressionFit = 8,717683, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-9.707380541038868
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -11,281455 (regressionFit = 11,281453, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707381 (regressionFit = 9,707379, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-12.391371948059685
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -11,281455 (regressionFit = 11,281453, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,306229 (regressionFit = 9,306227, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -8,717685 (regressionFit = 8,717683, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707381 (regressionFit = 9,707379, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,669121 (regressionFit = 6,669119, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -12,391373 (regressionFit = 12,391371, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,707382 (regressionFit = 9,707379, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -1,190784 (regressionFit = 1,190782, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -6,669121 (regressionFit = 6,669119, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 8;
Comparing variance: 4.03170420866588E-17 to score=9.348164341097835E-4 #egs=738.0
Comparing variance: 0.002918583369767813 to score=9.348164341097835E-4 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 9.348164341097835E-4
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,002919)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,002919) into the LAST position (#1) in the search queue.

% Time for loop #1: 83 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 5 119 124 127 188 202 226 227 231 260
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188278 (regressionFit = 1,188277, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -1,188278): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-1.1882780314052621
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -9,78245e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -1,188279 (regressionFit = 1,188277, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -9,78245e-14, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,003.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 8;false
Comparing variance: -2.5575818368328216E-16 to score=9.348164341097835E-4 #egs=382.0
Comparing variance: -4.803849625781927E-18 to score=9.348164341097835E-4 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 9.348164341097835E-4
%   Creating a FALSE-branch leaf because good enough fit since score < 9.348164341097835E-4

% Time for loop #2: 27 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 21:04:56 6/7/21.  [Using 5.170.600 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06842697784420268;  // std dev = 1,72e-07, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.15274385809367164;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06842697784420276;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.06842697784420268) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.15274385809367164) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.06842697784420276) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.06842697784420268) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.15274385809367164) :-  /* #pos=382 */ 
   movie(uniqueVar9, a),
   movie(uniqueVar9, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.06842697784420276) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   movie(uniqueVar9, a)
%   actor(a)
%   movie(uniqueVar9, b)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Time taken to learn 9 trees is 3,095 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.0029185833697678194
Set score:7.296458424419549E-4
% Only 1146 out of 1146 converged.
% Kept 382 of the 382 positive examples.
% Kept 764 of the 764 negative examples.
% Dataset size: 1.146
Computing probabilities
prob time:15 milliseconds
No hidden examples for : workedunder
Time to build dataset: 27 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.008729509356659301
Set score:7.296458424419549E-4
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 61 212 253 285 405 524 533 584 586 999
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #1, bodyLen=0] 'workedunder(_, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -9,950984 (regressionFit = 9,950983, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -9,950984): workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795585 (regressionFit = 7,795584, penalties=1.12E-6) for clause:  workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -7,795585): workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=1.12E-6) for clause:  workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,956268): workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]' score=-0.95626751996695
%  At # nodes expanded = 2, |OPEN| = 6.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -7,473437 (regressionFit = 7,473435, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(B), female(A).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- actor(A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(B), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(B), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- actor(A), movie(_, A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]' score=-0.95626751996695
%  At # nodes expanded = 3, |OPEN| = 5.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -7,000802 (regressionFit = 7,000800, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]' score=-7.795584741675719
%  At # nodes expanded = 4, |OPEN| = 4.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 2 bad extensions.
%     Score = -9,059657 (regressionFit = 9,059655, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(B), female(A).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(B), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.1200000000000005E-6) for clause:  workedunder(_, A) :- female(A), actor(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(B), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- female(A), movie(_, A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]' score=-9.95098410805333
%  At # nodes expanded = 5, |OPEN| = 3.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -9,059657 (regressionFit = 9,059655, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- female(A), female(B).  [covers 182,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,473437 (regressionFit = 7,473435, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), actor(B).  [covers 385,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,000802 (regressionFit = 7,000800, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 2.  Pruned 0 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=1.9200000000000003E-6) for clause:  workedunder(A, B) :- actor(A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956268 (regressionFit = 0,956266, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#7 of outerLoop #1, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 7, |OPEN| = 1.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), female(B).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), actor(B).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -5,355688 (regressionFit = 5,355686, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(A, _) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% Consider expanding [#8 of outerLoop #1, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 8, |OPEN| = 0.  Pruned 2 variant children.  Sending 9 items to OPEN for evaluation and possible insertion.
% Have created 9 valid-on-seeds descendants and have picked up 1 bad extensions.
%     Score = -9,950985 (regressionFit = 9,950983, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 569,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -7,795586 (regressionFit = 7,795584, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), female(A).  [covers 351,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -0,956269 (regressionFit = 0,956266, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -5,355688 (regressionFit = 5,355686, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 594,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 1.146,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% Path: 9;
Comparing variance: 9.086378141918625E-17 to score=7.296458424419549E-4 #egs=738.0
Comparing variance: 0.0023437901959972624 to score=7.296458424419549E-4 #egs=408.0
%   Creating a TRUE-branch leaf because good enough fit since score < 7.296458424419549E-4
%   Creating a FALSE-branch interior node with wgtedCountFalseBranchPos = 408,0
%      addToQueueOfTreeStructuredLearningTasks (level=1; score=-0,002344)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 1 and with score = -0,002344) into the LAST position (#1) in the search queue.

% Time for loop #1: 84 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      workedunder(_, A) :- actor(A).  [covers 738,0/1.146,0 pos, 0,0/0,0 neg]
% This clause covers 738 positive examples, of which 738 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% Have these 10 positive seeds: 4 12 35 51 91 127 168 176 219 222
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% target           = workedunder(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
% Most-general root: workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]  score = -Infinity

% Consider expanding [#1 of outerLoop #2, bodyLen=0] 'workedunder(_, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 1, |OPEN| = 0.  Pruned 0 variant children.  Sending 5 items to OPEN for evaluation and possible insertion.
% Have created 5 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954256 (regressionFit = 0,954255, penalties=1.12E-6) for clause:  workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,954256): workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.12E-6) for clause:  workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#2 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]' score=-0.9542557779039026
%  At # nodes expanded = 2, |OPEN| = 4.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- female(A), actor(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- female(A), director(B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- female(A), movie(_, A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- female(A), movie(_, B).  [covers 184,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#3 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 3, |OPEN| = 3.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.1200000000000005E-6) for clause:  workedunder(A, _) :- actor(A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- actor(A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- actor(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- actor(A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#4 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 4, |OPEN| = 2.  Pruned 0 variant children.  Sending 4 items to OPEN for evaluation and possible insertion.
% Have created 4 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.0200000000000006E-6) for clause:  workedunder(A, B) :- director(B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- director(B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- director(A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#5 of outerLoop #2, bodyLen=1] 'workedunder(A, _) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 5, |OPEN| = 1.  Pruned 2 variant children.  Sending 6 items to OPEN for evaluation and possible insertion.
% Have created 6 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(A, _) :- movie(_, A), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, A), director(B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -1,12840e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Gleaner: New best node found (score = -0,000002): workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, _) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, A), movie(_, B).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% Consider expanding [#6 of outerLoop #2, bodyLen=1] 'workedunder(_, A) :- movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]' score=-Infinity
%  At # nodes expanded = 6, |OPEN| = 0.  Pruned 2 variant children.  Sending 7 items to OPEN for evaluation and possible insertion.
% Have created 7 valid-on-seeds descendants and have picked up 3 bad extensions.
%     Score = -0,954257 (regressionFit = 0,954255, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), female(A).  [covers 184,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1300000000000004E-6) for clause:  workedunder(A, B) :- movie(_, B), actor(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2300000000000002E-6) for clause:  workedunder(_, A) :- movie(_, A), director(A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -0,000002 (regressionFit = -1,12840e-13, penalties=1.93E-6) for clause:  workedunder(A, B) :- movie(C, B), movie(C, A).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(_, A) :- movie(B, A), movie(B, _).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.1400000000000003E-6) for clause:  workedunder(A, B) :- movie(_, B), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=2.24E-6) for clause:  workedunder(_, A) :- movie(_, A), movie(_, A).  [covers 408,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% The best node found: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]

% Expanding node at Level 1 with score = -0,002.
% Will extend: workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% Path: 9;false
Comparing variance: -2.952844484343348E-16 to score=7.296458424419549E-4 #egs=382.0
Comparing variance: -1.6012832085939759E-18 to score=7.296458424419549E-4 #egs=26.0
%   Creating a TRUE-branch leaf because good enough fit since score < 7.296458424419549E-4
%   Creating a FALSE-branch leaf because good enough fit since score < 7.296458424419549E-4

% Time for loop #2: 26 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #2, the best clause found is:
%      workedunder(A, B) :- movie(C, A), movie(C, B).  [covers 382,0/408,0 pos, 0,0/0,0 neg]
% This clause covers 382 positive examples, of which 382 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 21:04:56 6/7/21.  [Using 5.178.336 memory cells.]  %%%%%


% FOR workedunder(A, B):
%   if ( actor(B) )
%   then return -0.06419184008202508;  // std dev = 2,59e-07, 738,000 (wgt'ed) examples reached here.  /* #neg=738 */
%   else if ( movie(C, A), movie(C, B) )
%   | then return 0.13400703000801212;  // std dev = 0,000, 382,000 (wgt'ed) examples reached here.  /* #pos=382 */
%   | else return -0.06419184008202622;  // std dev = 0,000, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */


% Clauses:

workedunder(A, B, -0.06419184008202508) :- 
     actor(B), 
     !. // Clause #1.

workedunder(A, B, 0.13400703000801212) :- 
     movie(C, A), 
     movie(C, B), 
     !. // Clause #2.

workedunder(A, B, -0.06419184008202622) :- !. // Clause #3.


% The flattened versions of these clauses:

flattened_workedunder(underscore, a, -0.06419184008202508) :-  /* #neg=738 */ 
   actor(a),
   !. // Flattened version of clause #1.

flattened_workedunder(a, b, 0.13400703000801212) :-  /* #pos=382 */ 
   movie(uniqueVar10, a),
   movie(uniqueVar10, b),
   !. // Flattened version of clause #2.

flattened_workedunder(underscore, underscore, -0.06419184008202622) :-  /* #neg=26 */ 
   !. // Flattened version of clause #3.


% The unique flattened literals:
%   actor(a)
%   movie(uniqueVar10, b)
%   movie(uniqueVar10, a)

% Saving model in: train/models/bRDNs/workedunder.model.ckpt
% Saving model in: train/models/bRDNs/workedunder.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for workedunder.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
workedunder(D, E, Total) :- // A general accessor. 
   workedunder(D, E, 1000000, Total), !.
workedunder(D, E, Total) :- waitHere("This should not fail", workedunder(D, E, Total)).

workedunder(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_workedunder_tree1(D, E, TreesToUse, Total1),
   getScore_workedunder_tree2(D, E, TreesToUse, Total2),
   getScore_workedunder_tree3(D, E, TreesToUse, Total3),
   getScore_workedunder_tree4(D, E, TreesToUse, Total4),
   getScore_workedunder_tree5(D, E, TreesToUse, Total5),
   getScore_workedunder_tree6(D, E, TreesToUse, Total6),
   getScore_workedunder_tree7(D, E, TreesToUse, Total7),
   getScore_workedunder_tree8(D, E, TreesToUse, Total8),
   getScore_workedunder_tree9(D, E, TreesToUse, Total9),
   getScore_workedunder_tree10(D, E, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
workedunder(D, E, TreesToUse, Total) :- waitHere("This should not fail", workedunder(D, E, TreesToUse, Total)).

getScore_workedunder_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_workedunder_tree1(D, E, TreesToUse, Total1) :- workedunder_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_workedunder_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_workedunder_tree2(D, E, TreesToUse, Total2) :- workedunder_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_workedunder_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_workedunder_tree3(D, E, TreesToUse, Total3) :- workedunder_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_workedunder_tree4(D, E, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_workedunder_tree4(D, E, TreesToUse, Total4) :- workedunder_tree4(D, E, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_workedunder_tree5(D, E, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_workedunder_tree5(D, E, TreesToUse, Total5) :- workedunder_tree5(D, E, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_workedunder_tree6(D, E, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_workedunder_tree6(D, E, TreesToUse, Total6) :- workedunder_tree6(D, E, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_workedunder_tree7(D, E, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_workedunder_tree7(D, E, TreesToUse, Total7) :- workedunder_tree7(D, E, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_workedunder_tree8(D, E, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_workedunder_tree8(D, E, TreesToUse, Total8) :- workedunder_tree8(D, E, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_workedunder_tree9(D, E, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_workedunder_tree9(D, E, TreesToUse, Total9) :- workedunder_tree9(D, E, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_workedunder_tree10(D, E, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_workedunder_tree10(D, E, TreesToUse, Total10) :- workedunder_tree10(D, E, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(workedunder, 21, [
   movie(uniqueVar4, b),
   movie(uniqueVar9, a),
   movie(uniqueVar5, b),
   movie(uniqueVar1, a),
   movie(uniqueVar2, b),
   movie(uniqueVar6, a),
   movie(uniqueVar10, b),
   actor(a),
   movie(uniqueVar1, b),
   movie(uniqueVar2, a),
   movie(uniqueVar3, b),
   movie(uniqueVar9, b),
   movie(uniqueVar3, a),
   movie(uniqueVar7, b),
   movie(uniqueVar6, b),
   movie(uniqueVar10, a),
   movie(uniqueVar8, b),
   movie(uniqueVar5, a),
   movie(uniqueVar4, a),
   movie(uniqueVar7, a),
   movie(uniqueVar8, a)]).
% Time taken to learn model for 'workedunder': 3,273 seconds.
% Saving model in: train/models/bRDNs/workedunder.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 3,559 seconds.
