digraph RDN{
0[style="filled" label="<=()" color="gray92"];
1[style="filled" label="memberOfList(willAnything,willList)" color="gray82"];
7 -> 1[label="" style=dashed];
2[style="filled" label="number()" color="gray92"];
3[style="filled" label="intersection()" color="gray82"];
3 -> 3[label="" style=dashed];
4[style="filled" label="different()" color="gray82"];
19 -> 4[label="" style=dashed];
5[style="filled" label="=<()" color="gray92"];
6[style="filled" label="var()" color="gray92"];
7[style="filled" label="list()" color="gray92"];
8[style="filled" label="equalWithSmallTolerance()" color="gray82"];
13 -> 8[label="" style=dashed];
2 -> 8[label="" style=dashed];
9[style="filled" label="fail()" color="gray92"];
10[style="filled" label="contains()" color="gray82"];
10 -> 10[label="" style=dashed];
11[style="filled" label="true()" color="gray92"];
12[style="filled" label="ground()" color="gray92"];
13[style="filled" label="<()" color="gray92"];
14[style="filled" label="multiplyListOfNumbers()" color="gray92"];
15[style="filled" label=">=()" color="gray92"];
16[style="filled" label="venue(class,venue)" color="gray92"];
17[style="filled" label="allNumbers(willList)" color="gray82"];
2 -> 17[label="" style=dashed];
17 -> 17[label="" style=dashed];
18[style="filled" label="isaInterestingNumber()" color="gray82"];
18 -> 18[label="" style=dashed];
8 -> 18[label="" style=dashed];
19[style="filled" label="\+()" color="gray92"];
20[style="filled" label="samevenue(venue,venue)" color="gray52"];
16 -> 20[label="" style=solid];
21[style="filled" label="isaInterestingSymbol()" color="gray82"];
21 -> 21[label="" style=dashed];
22[style="filled" label="isaEqualTolerance(willNumber)" color="gray82"];
15 -> 22[label="" style=dashed];
2 -> 22[label="" style=dashed];
23[style="filled" label="addListOfNumbers()" color="gray92"];
24[style="filled" label="false()" color="gray92"];
25[style="filled" label="union()" color="gray82"];
25 -> 25[label="" style=dashed];
19 -> 25[label="" style=dashed];
26[style="filled" label="call()" color="gray92"];
27[style="filled" label="sameAs()" color="gray82"];
2 -> 27[label="" style=dashed];
27 -> 27[label="" style=dashed];
8 -> 27[label="" style=dashed];
}
