args[0] = -l
args[1] = -refine
args[3] = -transfer
args[5] = -train
args[7] = -target
args[9] = -trees

% Starting a LEARNING run of bRDN.

% Calling SETUP.
% Running on host: C02DX2QHML7H

% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.

Resetting the LazyGroundNthArgumentClauseIndex.

% Calling ILPouterLoop from createRegressionOuterLooper.

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=0: args[N]=train/train_pos.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=1: args[N]=train/train_neg.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=2: args[N]=train/train_bk.txt

% getInputArgWithDefaultValue: args=[train/train_pos.txt, train/train_neg.txt, train/train_bk.txt, train/train_facts.txt]
%  for N=3: args[N]=train/train_facts.txt

% Welcome to the WILL ILP/SRL systems.


% Switching to VarIndicator = uppercase.

% Unset'ing VarIndicator.
% Reading background theory from dir: null
% Load '../background.txt'.

% Switching to VarIndicator = uppercase.

***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****


***** Warning: % Since this is the first setting of the notation for variables, will keep:
%   variableIndicator = uppercase *****

% [ LazyGroundClauseIndex ]  Building full index for mode/1 with 1 assertions.
% LoadAllModes() called.  Currently loaded modes: []
% [ LazyGroundClauseIndex ]  Building full index for sameAs/2 with 2 assertions.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for exp/3.
% [ LazyGroundNthArgumentClauseIndex ]  Argument 0:  Building full index for log/3.
% LoadAllLibraries() called.  Currently loaded libraries: [listsInLogic, differentInLogic, modes_arithmeticInLogic, inlines_comparisonInLogic, modes_listsInLogic, inlines_differentInLogic, modes_differentInLogic, arithmeticInLogic, inlines_listsInLogic, modes_comparisonInLogic, comparisonInLogic, inlines_arithmeticInLogic]

%  Read the facts.
%  Have read 9.016 facts.
% Have read 771 examples from 'train' [train/train*].
% Have read 1.542 examples from 'train' [train/train*].

%  LearnOneClause initialized.

% The outer looper has been created.

% Initializing the ILP inner looper.

% NEW target:                 samevenue(D, E)
%  targetPred:                samevenue/2
%  targetArgTypes:            signature = [const, const], types = [+venue, +venue]
%  targets:                   [samevenue(D, E)]
%  targetPredicates:          [samevenue/2]
%  targetArgSpecs:            [[D[+venue], E[+venue]]]
%  variablesInTargets:        [[D, E]]

% Started collecting constants

% Collecting the types of constants.

% Looking at the training examples to see if any types of new constants can be inferred.
% Time to collect constants: 76 milliseconds
% Time to collect examples: 0 seconds

% Read 771 pos examples and 1.542 neg examples.
% Time to init learnOneClause: 93 milliseconds
% Old dirnull
Setting model dir

% Have 771 'raw' positive examples and kept 771.
% Have 1.542 'raw' negative examples and kept 1.542.

% processing backup's for samevenue
%  POS EX = 771
%  NEG EX = 1.542

% Memory usage by WILLSetup (just counts # targets?):
%  |backupPosExamples| = 1
%  |backupNegExamples| = 1
%  |predicatesAsFacts| = 0
%  |addedToFactBase|   = 0
train/models/
File: train/advice.txt doesnt exist.Hence no advice loaded
% Learning 10 trees in this iteration for samevenue

% Learn model for: samevenue
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222222
Set score:0.0025
% Dataset size: 2.313
Computing probabilities
prob time:5 milliseconds
No hidden examples for : samevenue
Time to build dataset: 8 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222224683
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 32 114 116 445 451 460 543 545 557 729

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor01, director01]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 0;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222224686 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 142 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #1 @ 23:42:51 6/16/21.  [Using 6.234.248 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1914822684328406;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.1914822684328406) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar1, a),
   samevenue(uniqueVar1, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.1914822684328406) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar1, a)
%   samevenue(uniqueVar1, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 1 trees is 258 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222224683
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:22 milliseconds
No hidden examples for : samevenue
Time to build dataset: 132 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223964
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 171 208 878 1100 1625 1699 1830 2057 2189 2247

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor11, director11]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 1;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.2222222222222396 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 41 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #2 @ 23:42:51 6/16/21.  [Using 6.725.576 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.16653882456486124;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.16653882456486124) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar2, a),
   samevenue(uniqueVar2, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.16653882456486124) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar2, b)
%   samevenue(uniqueVar2, a)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 2 trees is 516 milliseconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223964
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:25 milliseconds
No hidden examples for : samevenue
Time to build dataset: 109 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222224214
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 9 positive seeds: 409 437 521 528 541 679 1676 2038 2285

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor21, director21]
% Number of legal mappings: 1
% [ LazyGroundNthArgumentClauseIndex ]  Argument 1:  Building full index for recursion_samevenue/2.
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  samevenue(A, _) :- recursion_samevenue(_, A).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  samevenue(A, B) :- recursion_samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- recursion_samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- recursion_samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- recursion_samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 2;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222224217 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 449 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- recursion_samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #3 @ 23:42:52 6/16/21.  [Using 7.200.208 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( recursion_samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.14209424281557156;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     recursion_samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.14209424281557156) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   recursion_samevenue(uniqueVar3, a),
   samevenue(uniqueVar3, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.14209424281557156) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   recursion_samevenue(uniqueVar3, a)
%   samevenue(uniqueVar3, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 3 trees is 1,153 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222224214
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:106 milliseconds
No hidden examples for : samevenue
Time to build dataset: 227 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222220542
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 783 821 977 1189 1191 1355 2308 2312

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor31, director31]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 3;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222220542 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 54 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #4 @ 23:42:52 6/16/21.  [Using 7.610.080 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.1191489049074691;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.1191489049074691) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar4, a),
   samevenue(uniqueVar4, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.1191489049074691) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar4, b)
%   samevenue(uniqueVar4, a)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 4 trees is 1,575 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222220542
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:112 milliseconds
No hidden examples for : samevenue
Time to build dataset: 209 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222222027
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 6 positive seeds: 512 544 549 1149 1294 2273

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor41, director41]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 4;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222222027 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 88 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #5 @ 23:42:52 6/16/21.  [Using 8.006.496 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.09841340278402057;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.09841340278402057) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar5, a),
   samevenue(uniqueVar5, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.09841340278402057) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar5, a)
%   samevenue(uniqueVar5, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 5 trees is 1,997 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222222027
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:112 milliseconds
No hidden examples for : samevenue
Time to build dataset: 165 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222093
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 72 88 194 302 311 369 403 674 1006 1836

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor51, director51]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 5;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.2222222222222093 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 44 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #6 @ 23:42:53 6/16/21.  [Using 8.425.144 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.08026654944252314;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.08026654944252314) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar6, a),
   samevenue(uniqueVar6, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.08026654944252314) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar6, a)
%   samevenue(uniqueVar6, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 6 trees is 2,339 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.2222222222222093
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:96 milliseconds
No hidden examples for : samevenue
Time to build dataset: 141 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.222222222222214
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 77 436 940 1068 1086 1221 1301 1363 1435 1532

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [actor61, director61]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 6;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222221402 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 20 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #7 @ 23:42:53 6/16/21.  [Using 8.820.248 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), recursion_samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.06479591611328821;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     recursion_samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.06479591611328821) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar7, a),
   recursion_samevenue(uniqueVar7, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.06479591611328821) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar7, a)
%   recursion_samevenue(uniqueVar7, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 7 trees is 2,637 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.222222222222214
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:65 milliseconds
No hidden examples for : samevenue
Time to build dataset: 128 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223093
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 358 723 732 788 1039 1095 1367 1654 1664 1727

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [director71, actor71]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.93E-6) for clause:  samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 7;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222223093 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 16 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), recursion_samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #8 @ 23:42:53 6/16/21.  [Using 9.250.480 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), recursion_samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.051879169344046294;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     recursion_samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.051879169344046294) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar8, a),
   recursion_samevenue(uniqueVar8, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.051879169344046294) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar8, a)
%   recursion_samevenue(uniqueVar8, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 8 trees is 2,957 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223093
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:57 milliseconds
No hidden examples for : samevenue
Time to build dataset: 97 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223167
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 10 positive seeds: 3 363 1080 1518 1777 1787 1848 1918 2073 2259

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [director81, actor81]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.13E-6) for clause:  samevenue(A, _) :- samevenue(_, A).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
%     Score = -Infinity (regressionFit = Infinity, penalties=1.8300000000000003E-6) for clause:  samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]

***** Warning: Have a bestNode that covers no positive examples.  That shouldn't happen.  Best node = samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg] *****


% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 8;
Comparing variance: NaN to score=0.0025 #egs=0.0
Comparing variance: 0.22222222222223165 to score=0.0025 #egs=2313.0
%   Creating a TRUE-branch leaf because wgtedCountTrueBranchPos = 0,0 < 2.1 * minPosCov = 6,3

% Time for loop #1: 15 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- samevenue(C, A), samevenue(C, B).  [covers 0,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 0 positive examples, of which 0 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #9 @ 23:42:54 6/16/21.  [Using 9.645.912 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( samevenue(C, A), samevenue(C, B) )
%   then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.04126932998425056;  // std dev = 22,672, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=771 */


% Clauses:

samevenue(A, B, 0) :- 
     samevenue(C, A), 
     samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, 0.04126932998425056) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0) :- 
   samevenue(uniqueVar9, a),
   samevenue(uniqueVar9, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, 0.04126932998425056) :-  /* #neg=1.542 #pos=771 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   samevenue(uniqueVar9, a)
%   samevenue(uniqueVar9, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Time taken to learn 9 trees is 3,192 seconds.

%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222223167
Set score:0.0025
% Only 2313 out of 2313 converged.
% Kept 771 of the 771 positive examples.
% Kept 1.542 of the 1.542 negative examples.
% Dataset size: 2.313
Computing probabilities
prob time:100 milliseconds
No hidden examples for : samevenue
Time to build dataset: 148 milliseconds
%      addToQueueOfTreeStructuredLearningTasks (level=0; score=1,797693135e+308)
%         ILP node to extend: null
%      Insert tree-structured search node (@ level = 0 and with score = 1,797693135e+308) into the LAST position (#1) in the search queue.
Variance:0.22222222222222662
Set score:0.0025
% [AdviceProcessor]  Generated 0 clauses at relevance level STRONGLY_IRRELEVANT.

% Have these 8 positive seeds: 100 338 711 856 1088 1844 2035 2105

% The best node found: null

% target           = samevenue(D, E)
%     Score = -Infinity (regressionFit = Infinity, penalties=2.2E-7) for clause:  samevenue(_, _).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]

% Finding mapping for predicates: [director91, actor91]
% Number of legal mappings: 1
%     Score = -Infinity (regressionFit = Infinity, penalties=1.23E-6) for clause:  samevenue(A, _) :- recursion_samevenue(_, A).  [covers 2.313,0/2.313,0 pos, 0,0/0,0 neg]
% [ LazyGroundClauseIndex ]  Building full index for recursion_samevenue/2 with 771 assertions.
%     Score = -1,994827 (regressionFit = 1,994825, penalties=1.93E-6) for clause:  samevenue(A, B) :- recursion_samevenue(C, A), recursion_samevenue(C, B).  [covers 773,0/2.313,0 pos, 0,0/0,0 neg]

% The best node found: samevenue(A, B) :- recursion_samevenue(C, A), recursion_samevenue(C, B).  [covers 773,0/2.313,0 pos, 0,0/0,0 neg]

% Expanding node at Level 0 with score = 1,797693e+308.
% Will extend: samevenue(A, B) :- recursion_samevenue(C, A), recursion_samevenue(C, B).  [covers 773,0/2.313,0 pos, 0,0/0,0 neg]
% Path: 9;
Comparing variance: 0.0025806278858384315 to score=0.0025 #egs=773.0
Comparing variance: 5.924265407246549E-15 to score=0.0025 #egs=1540.0
%   Creating a FALSE-branch leaf because good enough fit since score < 0.0025

% Time for loop #1: 171 milliseconds.
% Internal node max length = 2
% Max tree depth in lits   = 12
% Max tree depth in nodes  = 3
% Max number of clauses    = 8

% On cycle #1, the best clause found is:
%      samevenue(A, B) :- recursion_samevenue(C, A), recursion_samevenue(C, B).  [covers 773,0/2.313,0 pos, 0,0/0,0 neg]
% This clause covers 773 positive examples, of which 773 are newly covered.
% It also covers 0 negative examples, of which 0 are newly covered.

% ******************************************

%  Have stopped ILP's outer loop because the tree-structured queue is empty.

% ******************************************

%%%%%  WILL-Produced Tree #10 @ 23:42:54 6/16/21.  [Using 10.081.728 memory cells.]  %%%%%


% FOR samevenue(A, B):
%   if ( recursion_samevenue(C, A), recursion_samevenue(C, B) )
%   then return 0.6967430932798999;  // std dev = 1,412, 773,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=771 */
%   else return -0.300669584598496;  // std dev = 3,02e-06, 1.540,000 (wgt'ed) examples reached here.  /* #neg=1.540 */


% Clauses:

samevenue(A, B, 0.6967430932798999) :- 
     recursion_samevenue(C, A), 
     recursion_samevenue(C, B), 
     !. // Clause #1.

samevenue(A, B, -0.300669584598496) :- !. // Clause #2.


% The flattened versions of these clauses:

flattened_samevenue(a, b, 0.6967430932798999) :-  /* #neg=2 #pos=771 */ 
   recursion_samevenue(uniqueVar10, a),
   recursion_samevenue(uniqueVar10, b),
   !. // Flattened version of clause #1.

flattened_samevenue(underscore, underscore, -0.300669584598496) :-  /* #neg=1.540 */ 
   !. // Flattened version of clause #2.


% The unique flattened literals:
%   recursion_samevenue(uniqueVar10, a)
%   recursion_samevenue(uniqueVar10, b)

% Saving model in: train/models/bRDNs/samevenue.model.ckpt
% Saving model in: train/models/bRDNs/samevenue.model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%  Final call for computing score for samevenue.  %%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

stepLength_tree1(1.0).
stepLength_tree2(1.0).
stepLength_tree3(1.0).
stepLength_tree4(1.0).
stepLength_tree5(1.0).
stepLength_tree6(1.0).
stepLength_tree7(1.0).
stepLength_tree8(1.0).
stepLength_tree9(1.0).
stepLength_tree10(1.0).

logPrior(-1.8).
samevenue(D, E, Total) :- // A general accessor. 
   samevenue(D, E, 1000000, Total), !.
samevenue(D, E, Total) :- waitHere("This should not fail", samevenue(D, E, Total)).

samevenue(D, E, TreesToUse, Total) :- // A tree-limited accessor (e.g., for tuning the number of trees to use).
   logPrior(LogPrior),
   getScore_samevenue_tree1(D, E, TreesToUse, Total1),
   getScore_samevenue_tree2(D, E, TreesToUse, Total2),
   getScore_samevenue_tree3(D, E, TreesToUse, Total3),
   getScore_samevenue_tree4(D, E, TreesToUse, Total4),
   getScore_samevenue_tree5(D, E, TreesToUse, Total5),
   getScore_samevenue_tree6(D, E, TreesToUse, Total6),
   getScore_samevenue_tree7(D, E, TreesToUse, Total7),
   getScore_samevenue_tree8(D, E, TreesToUse, Total8),
   getScore_samevenue_tree9(D, E, TreesToUse, Total9),
   getScore_samevenue_tree10(D, E, TreesToUse, Total10),
   Total is LogPrior + Total1 + Total2 + Total3 + Total4 + Total5 + Total6 + Total7 + Total8 + Total9 + Total10,
   !.
samevenue(D, E, TreesToUse, Total) :- waitHere("This should not fail", samevenue(D, E, TreesToUse, Total)).

getScore_samevenue_tree1(D, E, TreesToUse, 0.0) :- 1 > TreesToUse, !.
getScore_samevenue_tree1(D, E, TreesToUse, Total1) :- samevenue_tree1(D, E, Total), stepLength_tree1(StepLen), Total1 is Total * StepLen.

getScore_samevenue_tree2(D, E, TreesToUse, 0.0) :- 2 > TreesToUse, !.
getScore_samevenue_tree2(D, E, TreesToUse, Total2) :- samevenue_tree2(D, E, Total), stepLength_tree2(StepLen), Total2 is Total * StepLen.

getScore_samevenue_tree3(D, E, TreesToUse, 0.0) :- 3 > TreesToUse, !.
getScore_samevenue_tree3(D, E, TreesToUse, Total3) :- samevenue_tree3(D, E, Total), stepLength_tree3(StepLen), Total3 is Total * StepLen.

getScore_samevenue_tree4(D, E, TreesToUse, 0.0) :- 4 > TreesToUse, !.
getScore_samevenue_tree4(D, E, TreesToUse, Total4) :- samevenue_tree4(D, E, Total), stepLength_tree4(StepLen), Total4 is Total * StepLen.

getScore_samevenue_tree5(D, E, TreesToUse, 0.0) :- 5 > TreesToUse, !.
getScore_samevenue_tree5(D, E, TreesToUse, Total5) :- samevenue_tree5(D, E, Total), stepLength_tree5(StepLen), Total5 is Total * StepLen.

getScore_samevenue_tree6(D, E, TreesToUse, 0.0) :- 6 > TreesToUse, !.
getScore_samevenue_tree6(D, E, TreesToUse, Total6) :- samevenue_tree6(D, E, Total), stepLength_tree6(StepLen), Total6 is Total * StepLen.

getScore_samevenue_tree7(D, E, TreesToUse, 0.0) :- 7 > TreesToUse, !.
getScore_samevenue_tree7(D, E, TreesToUse, Total7) :- samevenue_tree7(D, E, Total), stepLength_tree7(StepLen), Total7 is Total * StepLen.

getScore_samevenue_tree8(D, E, TreesToUse, 0.0) :- 8 > TreesToUse, !.
getScore_samevenue_tree8(D, E, TreesToUse, Total8) :- samevenue_tree8(D, E, Total), stepLength_tree8(StepLen), Total8 is Total * StepLen.

getScore_samevenue_tree9(D, E, TreesToUse, 0.0) :- 9 > TreesToUse, !.
getScore_samevenue_tree9(D, E, TreesToUse, Total9) :- samevenue_tree9(D, E, Total), stepLength_tree9(StepLen), Total9 is Total * StepLen.

getScore_samevenue_tree10(D, E, TreesToUse, 0.0) :- 10 > TreesToUse, !.
getScore_samevenue_tree10(D, E, TreesToUse, Total10) :- samevenue_tree10(D, E, Total), stepLength_tree10(StepLen), Total10 is Total * StepLen.

flattenedLiteralsInThisSetOfTrees(samevenue, 20, [
   samevenue(uniqueVar6, a),
   samevenue(uniqueVar6, b),
   samevenue(uniqueVar7, a),
   recursion_samevenue(uniqueVar10, a),
   recursion_samevenue(uniqueVar10, b),
   samevenue(uniqueVar3, b),
   samevenue(uniqueVar5, a),
   samevenue(uniqueVar5, b),
   samevenue(uniqueVar1, b),
   samevenue(uniqueVar2, a),
   samevenue(uniqueVar4, a),
   recursion_samevenue(uniqueVar3, a),
   recursion_samevenue(uniqueVar7, b),
   samevenue(uniqueVar9, a),
   samevenue(uniqueVar9, b),
   samevenue(uniqueVar8, a),
   recursion_samevenue(uniqueVar8, b),
   samevenue(uniqueVar1, a),
   samevenue(uniqueVar4, b),
   samevenue(uniqueVar2, b)]).
% Time taken to learn model for 'samevenue': 3,698 seconds.
% Saving model in: train/models/bRDNs/samevenue.model
cached groundings hit: 0
Misses: 0

% Total learning time (10 trees): 4,291 seconds.
