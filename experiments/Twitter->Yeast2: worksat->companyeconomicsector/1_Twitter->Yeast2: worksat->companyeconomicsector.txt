******************************************
Performing Parameter Learning
******************************************
Refine
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(C, D)', 'true': 'hasacademicadvisor(E, C), hasacademicadvisor(C, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'haswebsite(D, H), diedin(C, I)', 'false': 'hasacademicadvisor(A, J), hasgender(J, K)', 'false,false': 'graduatedfrom(L, B), livesin(L, M)', 'false,false,true': 'iscitizenof(A, M), iscitizenof(L, M)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.388, 273, 1209], 'true,false,true': [0.37, 69, 352], 'true,false,false,true': [7.829, 88, 202], 'true,false,false,false': [18.136, 687, 631], 'false,true': [0.451, 865, 344], 'false,false,true,true': [4.969, 33, 98], 'false,false,true,false': [17.103, 703, 501], 'false,false,false,true': [3.67, 85, 16], 'false,false,false,false': [24.03, 1492, 942]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'hasacademicadvisor(C, E), influences(F, D)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(J, A), hasgender(A, K)', 'false,true': 'graduatedfrom(L, B), hasacademicadvisor(M, L)', 'false,false': 'graduatedfrom(A, B)', 'false,false,false': 'hasacademicadvisor(A, N), hasacademicadvisor(N, P)'}, {'true,true': [0.378, 283, 1305], 'true,false,true': [0.385, 79, 353], 'true,false,false,true': [11.994, 386, 242], 'true,false,false,false': [17.15, 545, 655], 'false,true,true': [0.493, 44, 49], 'false,true,false': [0.36, 417, 76], 'false,false,true': [0.272, 0, 95], 'false,false,false,true': [8.587, 290, 100], 'false,false,false,false': [29.462, 2251, 1420]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'graduatedfrom(A, B)', 'true,false': 'wrotemusicfor(E, D), directed(F, D)', 'false': 'graduatedfrom(G, B), hasacademicadvisor(G, H)', 'false,true': 'hasacademicadvisor(I, A), graduatedfrom(I, B)', 'false,true,false': 'livesin(G, J), iscitizenof(A, J)', 'false,false': 'hasacademicadvisor(K, A), hasgender(A, L)', 'false,false,false': 'hasacademicadvisor(A, M), hasgender(M, N)'}, {'true,true': [0.153, 4, 184], 'true,false,true': [0.414, 433, 1308], 'true,false,false': [0.49, 77, 67], 'false,true,true': [0.064, 0, 141], 'false,true,false,true': [6.93, 67, 220], 'false,true,false,false': [20.31, 918, 826], 'false,false,true': [0.362, 427, 79], 'false,false,false,true': [11.452, 486, 182], 'false,false,false,false': [27.442, 1883, 1288]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), hasacademicadvisor(D, C)', 'true': 'graduatedfrom(A, B)', 'true,false': 'owns(B, E), wasbornin(D, F)', 'true,false,false': 'hasacademicadvisor(G, A), graduatedfrom(G, B)', 'false': 'graduatedfrom(A, B)', 'false,false': 'hasacademicadvisor(A, H), hasgender(H, I)', 'false,false,true': 'hasacademicadvisor(J, A), graduatedfrom(A, K)', 'false,false,false': 'graduatedfrom(L, B), haschild(M, L)'}, {'true,true': [0.146, 5, 384], 'true,false,true': [0.4, 322, 1131], 'true,false,false,true': [0.635, 0, 98], 'true,false,false,false': [18.546, 781, 735], 'false,true': [0.129, 1, 106], 'false,false,true,true': [5.613, 243, 38], 'false,false,true,false': [13.303, 627, 258], 'false,false,false,true': [10.404, 225, 233], 'false,false,false,false': [28.122, 2091, 1312]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'edited(E, D), directed(E, F)', 'true,false': 'owns(B, G), wasbornin(C, H)', 'true,false,true': 'iscitizenof(A, I), islocatedin(D, I)', 'false': 'graduatedfrom(A, B)', 'false,false': 'graduatedfrom(A, J)', 'false,false,true': 'owns(B, K), owns(J, L)', 'false,false,false': 'graduatedfrom(M, B), isknownfor(M, N)'}, {'true,true': [0.361, 154, 706], 'true,false,true,true': [3.41, 16, 66], 'true,false,true,false': [8.413, 145, 170], 'true,false,false': [0.397, 199, 617], 'false,true': [0.118, 2, 306], 'false,false,true,true': [11.773, 283, 306], 'false,false,true,false': [26.388, 2214, 1128], 'false,false,false,true': [3.653, 19, 72], 'false,false,false,false': [22.516, 1263, 924]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'true': 'hasgender(A, C), owns(B, D)', 'false': 'graduatedfrom(E, B), actedin(E, F)', 'false,true': 'haschild(G, E), wasbornin(E, H)', 'false,true,true': 'livesin(I, H), hasgender(A, J)', 'false,true,false': 'wrotemusicfor(K, F), ismarriedto(K, L)', 'false,false': 'hasacademicadvisor(M, A), graduatedfrom(M, B)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.163, 4, 183], 'true,false': [0.111, 2, 307], 'false,true,true,true': [5.377, 36, 271], 'false,true,true,false': [1.339, 5, 4], 'false,true,false,true': [12.385, 220, 730], 'false,true,false,false': [11.418, 249, 370], 'false,false,true': [0.096, 0, 95], 'false,false,false,true': [8.864, 426, 113], 'false,false,false,false': [35.62, 3353, 2222]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'livesin(D, E), hasacademicadvisor(D, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(A, J), hasacademicadvisor(J, K)', 'false,false': 'graduatedfrom(A, L), owns(L, M)', 'false,false,true': 'hasacademicadvisor(N, A), iscitizenof(A, P)', 'false,false,false': 'influences(A, Q), graduatedfrom(R, B)'}, {'true,true': [0.345, 223, 1101], 'true,false,true': [0.367, 90, 443], 'true,false,false,true': [11.432, 399, 242], 'true,false,false,false': [17.013, 581, 769], 'false,true': [0.4, 500, 155], 'false,false,true,true': [2.32, 41, 6], 'false,false,true,false': [16.611, 802, 459], 'false,false,false,true': [2.891, 47, 13], 'false,false,false,false': [24.898, 1612, 1107]}]
['worksat(A, B)', {'': 'hasacademicadvisor(C, A), graduatedfrom(C, B)', 'false': 'graduatedfrom(D, B), wrotemusicfor(D, E)', 'false,true': 'directed(F, E), islocatedin(E, G)', 'false,true,true': 'diedin(A, H), hascurrency(G, I)', 'false,true,false': 'hasacademicadvisor(A, J), haswebsite(D, K)', 'false,false': 'graduatedfrom(L, B), haschild(L, M)', 'false,false,true': 'iscitizenof(L, N), iscitizenof(A, N)', 'false,false,false': 'graduatedfrom(A, B)'}, {'true': [0.085, 0, 241], 'false,true,true,true': [2.65, 13, 35], 'false,true,true,false': [6.432, 51, 415], 'false,true,false,true': [2.016, 5, 50], 'false,true,false,false': [6.758, 75, 167], 'false,false,true,true': [4.937, 28, 239], 'false,false,true,false': [19.173, 777, 1057], 'false,false,false,true': [1.365, 1, 161], 'false,false,false,false': [34.069, 3345, 1930]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'graduatedfrom(C, B), haschild(D, C)', 'false,true': 'iscitizenof(C, E), iscitizenof(A, E)', 'false,true,true': 'hascurrency(E, F), ismarriedto(G, D)', 'false,true,false': 'iscitizenof(D, H), hasgender(A, I)', 'false,false': 'graduatedfrom(A, J), owns(J, K)', 'false,false,true': 'owns(B, L)', 'false,false,false': 'graduatedfrom(M, B), owns(B, N)'}, {'true': [0.13, 6, 490], 'false,true,true,true': [3.882, 19, 112], 'false,true,true,false': [5.293, 35, 297], 'false,true,false,true': [9.176, 133, 478], 'false,true,false,false': [17.117, 624, 748], 'false,false,true,true': [10.951, 245, 269], 'false,false,true,false': [15.82, 927, 360], 'false,false,false,true': [11.022, 334, 241], 'false,false,false,false': [26.87, 1972, 1300]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'hasacademicadvisor(A, C), graduatedfrom(D, B)', 'false,true': 'iscitizenof(D, E), iscitizenof(A, E)', 'false,true,true': 'dealswith(E, F)', 'false,true,false': 'hasacademicadvisor(D, G), hasacademicadvisor(G, H)', 'false,false': 'graduatedfrom(I, B), isknownfor(I, J)', 'false,false,true': 'influences(K, I), influences(L, A)', 'false,false,false': 'graduatedfrom(A, M)'}, {'true': [0.126, 6, 490], 'false,true,true,true': [3.795, 10, 149], 'false,true,true,false': [6.43, 75, 199], 'false,true,false,true': [10.456, 216, 395], 'false,true,false,false': [8.926, 398, 107], 'false,false,true,true': [1.073, 1, 39], 'false,false,true,false': [7.528, 83, 313], 'false,false,false,true': [27.948, 2231, 1502], 'false,false,false,false': [23.126, 1275, 1101]}]


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, C), companyalsoknownas(C, F) )
%   | then return 0.7973522893972019;  // std dev = 5,219, 477,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=448 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(H, D), bankchiefexecutiveceo(C, I) )
%   | | | then return 0.6581489350995122;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3844647245731957;  // std dev = 3,770, 57,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   else if ( companyalsoknownas(A, J), countryhascompanyoffice(K, J) )
%   | then return -0.14185106490048774;  // std dev = 1,49e-08, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( economicsectorcompany(B, L) )
%   | | then if ( companyceo(A, M), companyceo(L, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3338770904393189;  // std dev = 5,068, 103,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=49 */
%   | | else if ( companyalsoknownas(N, A), economicsectorcompany(P, N) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.14185106490048977;  // std dev = 0,000, 897,000 (wgt'ed) examples reached here.  /* #neg=897 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(C, E), acquired(F, D) )
%   | then return 0.6961806014594819;  // std dev = 1,964, 113,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=109 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.7353363595413607;  // std dev = 0,074, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyceo(A, H), bankbankincountry(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6476669447309118;  // std dev = 5,436, 377,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=342 */
%   else if ( companyalsoknownas(J, A), countryhascompanyoffice(K, A) )
%   | then if ( economicsectorcompany(B, L), companyalsoknownas(M, L) )
%   | | then return 0.7267366638131675;  // std dev = 0,013, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1254446385283913;  // std dev = 7,45e-09, 22,000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( economicsectorcompany(B, A) )
%   | | then return 0.7880808072804681;  // std dev = 0,317, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( companyalsoknownas(A, N), companyalsoknownas(N, P) )
%   | | | then return -0.12983661642827218;  // std dev = 0,179, 99,000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | | else return -0.13178678748409234;  // std dev = 0,679, 952,000 (wgt'ed) examples reached here.  /* #neg=952 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.5873695123760332;  // std dev = 0,045, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else return -0.2966652472259585;  // std dev = 0,073, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( economicsectorcompany(B, E), companyalsoknownas(E, F) )
%   | then if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return 0.5813267269912427;  // std dev = 0,033, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.5440223181164591;  // std dev = 1,197, 54,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return 0.4610413607320923;  // std dev = 4,832, 219,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=188 */
%   | else if ( companyalsoknownas(I, A), countryhascompanyoffice(J, A) )
%   | | then return -0.1201865332412074;  // std dev = 0,201, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( companyalsoknownas(A, K), countryhascompanyoffice(L, K) )
%   | | | then return -0.11833337497097836;  // std dev = 0,100, 16,000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.06910120178636521;  // std dev = 6,070, 1.056,000 (wgt'ed) examples reached here.  /* #neg=990 #pos=66 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(D, C) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.4561336615264095;  // std dev = 0,624, 473,000 (wgt'ed) examples reached here.  /* #pos=473 */
%   | else if ( companyalsoknownas(E, A), economicsectorcompany(B, E) )
%   | | then return -0.5563461326974316;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.42596734065883174;  // std dev = 0,827, 52,000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.6473732885169204;  // std dev = 0,603, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | then if ( companyalsoknownas(H, A), economicsectorcompany(I, A) )
%   | | | then return -0.10074604019411175;  // std dev = 0,000556, 24,000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, J) )
%   | | | then return -0.17670194079008195;  // std dev = 0,364, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.10497729577401411;  // std dev = 0,014, 967,000 (wgt'ed) examples reached here.  /* #neg=967 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.2944298139676193;  // std dev = 0,567, 18,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else return 0.32577222422151597;  // std dev = 0,939, 209,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=206 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.38969795241457666;  // std dev = 1,267, 321,000 (wgt'ed) examples reached here.  /* #pos=321 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return -0.10929447333718816;  // std dev = 0,055, 1.118,000 (wgt'ed) examples reached here.  /* #neg=1.118 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then if ( countryhascompanyoffice(C, A) )
%   | then return 0.26855054527634575;  // std dev = 0,193, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return 0.29000606961889175;  // std dev = 1,220, 492,000 (wgt'ed) examples reached here.  /* #pos=492 */
%   else if ( economicsectorcompany(B, D), bankboughtbank(D, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return -0.31363416627099133;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.2943454830039396;  // std dev = 0,040, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return -0.391909054078731;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( companyalsoknownas(H, A), economicsectorcompany(I, H) )
%   | | | then return -0.09050574716471511;  // std dev = 0,179, 66,000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.0999200694978287;  // std dev = 1,681, 1.002,000 (wgt'ed) examples reached here.  /* #neg=1.002 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.19638199905351433;  // std dev = 2,247, 438,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=422 */
%   | else if ( companyceo(C, F), companyceo(A, F) )
%   | | then return 0.23034193608755793;  // std dev = 0,058, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, G), bankbankincountry(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15661360797884857;  // std dev = 1,728, 48,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, J) )
%   | then return -0.05738602468829519;  // std dev = 1,082, 156,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=13 */
%   | else if ( economicsectorcompany(K, A) )
%   | | then if ( companyalsoknownas(L, A), companyceo(A, M) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.054750221220992566;  // std dev = 3,193, 971,000 (wgt'ed) examples reached here.  /* #neg=904 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), economicsectorcompany(B, C) )
%   then return 0.14462979380445817;  // std dev = 0,498, 17,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.08230954082578779;  // std dev = 1,167, 27,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, D) )
%   | | | then return 0.15481898971042052;  // std dev = 0,663, 38,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return 0.14370591141128888;  // std dev = 3,876, 573,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=474 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07495529051376484;  // std dev = 0,017, 984,000 (wgt'ed) examples reached here.  /* #neg=984 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.18621862070567058;  // std dev = 1,248, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( economicsectorcompany(B, C) )
%   | then if ( companyceo(C, D), companyceo(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(E, F), countryhascompanyoffice(G, A) )
%   | | | then return -0.20027580801498257;  // std dev = 0,254, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.21804151167406682;  // std dev = 1,331, 113,000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( economicsectorcompany(H, A) )
%   | | then return -0.0699447546545801;  // std dev = 0,000463, 923,000 (wgt'ed) examples reached here.  /* #neg=923 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.16008302003273114;  // std dev = 1,127, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( companyalsoknownas(A, C), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F), companyalsoknownas(F, G) )
%   | | | then return -0.3560902084260792;  // std dev = 0,249, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10601993700468712;  // std dev = 0,159, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( acquired(I, H), acquired(J, A) )
%   | | | then return -0.3722292159488744;  // std dev = 0,093, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1826500813822513;  // std dev = 1,161, 107,000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( economicsectorcompany(K, A) )
%   | | | then return -0.06548039721598976;  // std dev = 0,016, 982,000 (wgt'ed) examples reached here.  /* #neg=982 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


******************************************
Performing Parameter Learning
******************************************
Refine
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(C, D)', 'true': 'hasacademicadvisor(E, C), hasacademicadvisor(C, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'haswebsite(D, H), diedin(C, I)', 'false': 'hasacademicadvisor(A, J), hasgender(J, K)', 'false,false': 'graduatedfrom(L, B), livesin(L, M)', 'false,false,true': 'iscitizenof(A, M), iscitizenof(L, M)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.388, 273, 1209], 'true,false,true': [0.37, 69, 352], 'true,false,false,true': [7.829, 88, 202], 'true,false,false,false': [18.136, 687, 631], 'false,true': [0.451, 865, 344], 'false,false,true,true': [4.969, 33, 98], 'false,false,true,false': [17.103, 703, 501], 'false,false,false,true': [3.67, 85, 16], 'false,false,false,false': [24.03, 1492, 942]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'hasacademicadvisor(C, E), influences(F, D)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(J, A), hasgender(A, K)', 'false,true': 'graduatedfrom(L, B), hasacademicadvisor(M, L)', 'false,false': 'graduatedfrom(A, B)', 'false,false,false': 'hasacademicadvisor(A, N), hasacademicadvisor(N, P)'}, {'true,true': [0.378, 283, 1305], 'true,false,true': [0.385, 79, 353], 'true,false,false,true': [11.994, 386, 242], 'true,false,false,false': [17.15, 545, 655], 'false,true,true': [0.493, 44, 49], 'false,true,false': [0.36, 417, 76], 'false,false,true': [0.272, 0, 95], 'false,false,false,true': [8.587, 290, 100], 'false,false,false,false': [29.462, 2251, 1420]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'graduatedfrom(A, B)', 'true,false': 'wrotemusicfor(E, D), directed(F, D)', 'false': 'graduatedfrom(G, B), hasacademicadvisor(G, H)', 'false,true': 'hasacademicadvisor(I, A), graduatedfrom(I, B)', 'false,true,false': 'livesin(G, J), iscitizenof(A, J)', 'false,false': 'hasacademicadvisor(K, A), hasgender(A, L)', 'false,false,false': 'hasacademicadvisor(A, M), hasgender(M, N)'}, {'true,true': [0.153, 4, 184], 'true,false,true': [0.414, 433, 1308], 'true,false,false': [0.49, 77, 67], 'false,true,true': [0.064, 0, 141], 'false,true,false,true': [6.93, 67, 220], 'false,true,false,false': [20.31, 918, 826], 'false,false,true': [0.362, 427, 79], 'false,false,false,true': [11.452, 486, 182], 'false,false,false,false': [27.442, 1883, 1288]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), hasacademicadvisor(D, C)', 'true': 'graduatedfrom(A, B)', 'true,false': 'owns(B, E), wasbornin(D, F)', 'true,false,false': 'hasacademicadvisor(G, A), graduatedfrom(G, B)', 'false': 'graduatedfrom(A, B)', 'false,false': 'hasacademicadvisor(A, H), hasgender(H, I)', 'false,false,true': 'hasacademicadvisor(J, A), graduatedfrom(A, K)', 'false,false,false': 'graduatedfrom(L, B), haschild(M, L)'}, {'true,true': [0.146, 5, 384], 'true,false,true': [0.4, 322, 1131], 'true,false,false,true': [0.635, 0, 98], 'true,false,false,false': [18.546, 781, 735], 'false,true': [0.129, 1, 106], 'false,false,true,true': [5.613, 243, 38], 'false,false,true,false': [13.303, 627, 258], 'false,false,false,true': [10.404, 225, 233], 'false,false,false,false': [28.122, 2091, 1312]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'edited(E, D), directed(E, F)', 'true,false': 'owns(B, G), wasbornin(C, H)', 'true,false,true': 'iscitizenof(A, I), islocatedin(D, I)', 'false': 'graduatedfrom(A, B)', 'false,false': 'graduatedfrom(A, J)', 'false,false,true': 'owns(B, K), owns(J, L)', 'false,false,false': 'graduatedfrom(M, B), isknownfor(M, N)'}, {'true,true': [0.361, 154, 706], 'true,false,true,true': [3.41, 16, 66], 'true,false,true,false': [8.413, 145, 170], 'true,false,false': [0.397, 199, 617], 'false,true': [0.118, 2, 306], 'false,false,true,true': [11.773, 283, 306], 'false,false,true,false': [26.388, 2214, 1128], 'false,false,false,true': [3.653, 19, 72], 'false,false,false,false': [22.516, 1263, 924]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'true': 'hasgender(A, C), owns(B, D)', 'false': 'graduatedfrom(E, B), actedin(E, F)', 'false,true': 'haschild(G, E), wasbornin(E, H)', 'false,true,true': 'livesin(I, H), hasgender(A, J)', 'false,true,false': 'wrotemusicfor(K, F), ismarriedto(K, L)', 'false,false': 'hasacademicadvisor(M, A), graduatedfrom(M, B)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.163, 4, 183], 'true,false': [0.111, 2, 307], 'false,true,true,true': [5.377, 36, 271], 'false,true,true,false': [1.339, 5, 4], 'false,true,false,true': [12.385, 220, 730], 'false,true,false,false': [11.418, 249, 370], 'false,false,true': [0.096, 0, 95], 'false,false,false,true': [8.864, 426, 113], 'false,false,false,false': [35.62, 3353, 2222]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'livesin(D, E), hasacademicadvisor(D, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(A, J), hasacademicadvisor(J, K)', 'false,false': 'graduatedfrom(A, L), owns(L, M)', 'false,false,true': 'hasacademicadvisor(N, A), iscitizenof(A, P)', 'false,false,false': 'influences(A, Q), graduatedfrom(R, B)'}, {'true,true': [0.345, 223, 1101], 'true,false,true': [0.367, 90, 443], 'true,false,false,true': [11.432, 399, 242], 'true,false,false,false': [17.013, 581, 769], 'false,true': [0.4, 500, 155], 'false,false,true,true': [2.32, 41, 6], 'false,false,true,false': [16.611, 802, 459], 'false,false,false,true': [2.891, 47, 13], 'false,false,false,false': [24.898, 1612, 1107]}]
['worksat(A, B)', {'': 'hasacademicadvisor(C, A), graduatedfrom(C, B)', 'false': 'graduatedfrom(D, B), wrotemusicfor(D, E)', 'false,true': 'directed(F, E), islocatedin(E, G)', 'false,true,true': 'diedin(A, H), hascurrency(G, I)', 'false,true,false': 'hasacademicadvisor(A, J), haswebsite(D, K)', 'false,false': 'graduatedfrom(L, B), haschild(L, M)', 'false,false,true': 'iscitizenof(L, N), iscitizenof(A, N)', 'false,false,false': 'graduatedfrom(A, B)'}, {'true': [0.085, 0, 241], 'false,true,true,true': [2.65, 13, 35], 'false,true,true,false': [6.432, 51, 415], 'false,true,false,true': [2.016, 5, 50], 'false,true,false,false': [6.758, 75, 167], 'false,false,true,true': [4.937, 28, 239], 'false,false,true,false': [19.173, 777, 1057], 'false,false,false,true': [1.365, 1, 161], 'false,false,false,false': [34.069, 3345, 1930]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'graduatedfrom(C, B), haschild(D, C)', 'false,true': 'iscitizenof(C, E), iscitizenof(A, E)', 'false,true,true': 'hascurrency(E, F), ismarriedto(G, D)', 'false,true,false': 'iscitizenof(D, H), hasgender(A, I)', 'false,false': 'graduatedfrom(A, J), owns(J, K)', 'false,false,true': 'owns(B, L)', 'false,false,false': 'graduatedfrom(M, B), owns(B, N)'}, {'true': [0.13, 6, 490], 'false,true,true,true': [3.882, 19, 112], 'false,true,true,false': [5.293, 35, 297], 'false,true,false,true': [9.176, 133, 478], 'false,true,false,false': [17.117, 624, 748], 'false,false,true,true': [10.951, 245, 269], 'false,false,true,false': [15.82, 927, 360], 'false,false,false,true': [11.022, 334, 241], 'false,false,false,false': [26.87, 1972, 1300]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'hasacademicadvisor(A, C), graduatedfrom(D, B)', 'false,true': 'iscitizenof(D, E), iscitizenof(A, E)', 'false,true,true': 'dealswith(E, F)', 'false,true,false': 'hasacademicadvisor(D, G), hasacademicadvisor(G, H)', 'false,false': 'graduatedfrom(I, B), isknownfor(I, J)', 'false,false,true': 'influences(K, I), influences(L, A)', 'false,false,false': 'graduatedfrom(A, M)'}, {'true': [0.126, 6, 490], 'false,true,true,true': [3.795, 10, 149], 'false,true,true,false': [6.43, 75, 199], 'false,true,false,true': [10.456, 216, 395], 'false,true,false,false': [8.926, 398, 107], 'false,false,true,true': [1.073, 1, 39], 'false,false,true,false': [7.528, 83, 313], 'false,false,false,true': [27.948, 2231, 1502], 'false,false,false,false': [23.126, 1275, 1101]}]


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, C), companyalsoknownas(C, F) )
%   | then return 0.7799596346879853;  // std dev = 5,919, 486,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=448 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(H, D), bankchiefexecutiveceo(C, I) )
%   | | | then return 0.8581489350995122;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4036034805540569;  // std dev = 3,693, 55,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=30 */
%   else if ( companyalsoknownas(A, J), countryhascompanyoffice(K, J) )
%   | then return -0.1418510649004877;  // std dev = 2,98e-08, 32,000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( economicsectorcompany(B, L) )
%   | | then if ( companyceo(A, M), companyceo(L, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3160928603331579;  // std dev = 5,154, 107,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=49 */
%   | | else if ( companyalsoknownas(N, A), economicsectorcompany(P, N) )
%   | | | then return -0.14185106490048768;  // std dev = 5,37e-08, 50,000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return -0.14185106490048957;  // std dev = 0,000, 839,000 (wgt'ed) examples reached here.  /* #neg=839 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(C, E), acquired(F, D) )
%   | then return 0.682806549021916;  // std dev = 2,385, 115,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=109 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.7377202225363851;  // std dev = 0,069, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyceo(A, H), bankbankincountry(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.638914437981439;  // std dev = 5,789, 382,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=342 */
%   else if ( companyalsoknownas(J, A), countryhascompanyoffice(K, A) )
%   | then if ( economicsectorcompany(B, L), companyalsoknownas(M, L) )
%   | | then return 0.7287776421236188;  // std dev = 0,017, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12544463852839136;  // std dev = 0,000, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( economicsectorcompany(B, A) )
%   | | then return 0.7877416520842611;  // std dev = 0,342, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( companyalsoknownas(A, N), companyalsoknownas(N, P) )
%   | | | then return -0.13043654605390614;  // std dev = 0,156, 86,000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | | else return -0.13074191753606773;  // std dev = 0,610, 937,000 (wgt'ed) examples reached here.  /* #neg=937 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.5926294927025734;  // std dev = 0,121, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else return -0.35555000566513667;  // std dev = 0,071, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   else if ( economicsectorcompany(B, E), companyalsoknownas(E, F) )
%   | then if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return 0.5873594748612919;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.44343652303162817;  // std dev = 2,507, 62,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=52 */
%   | | | else return 0.4520797861399935;  // std dev = 5,056, 224,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=188 */
%   | else if ( companyalsoknownas(I, A), countryhascompanyoffice(J, A) )
%   | | then return -0.11775260338413351;  // std dev = 0,073, 20,000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( companyalsoknownas(A, K), countryhascompanyoffice(L, K) )
%   | | | then return -0.11181964033655754;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.06878328182642704;  // std dev = 6,108, 1.027,000 (wgt'ed) examples reached here.  /* #neg=961 #pos=66 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(D, C) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.4654192543396399;  // std dev = 0,618, 473,000 (wgt'ed) examples reached here.  /* #pos=473 */
%   | else if ( companyalsoknownas(E, A), economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.41600202586654916;  // std dev = 0,618, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.6459738194650507;  // std dev = 0,681, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | then if ( companyalsoknownas(H, A), economicsectorcompany(I, A) )
%   | | | then return -0.10770731404062794;  // std dev = 0,122, 33,000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, J) )
%   | | | then return -0.18338378233647734;  // std dev = 0,442, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.10507848069529453;  // std dev = 0,016, 949,000 (wgt'ed) examples reached here.  /* #neg=949 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.32859544673813573;  // std dev = 0,061, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.32447353298258236;  // std dev = 1,140, 210,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=206 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.3978208467879886;  // std dev = 1,200, 321,000 (wgt'ed) examples reached here.  /* #pos=321 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return -0.11245313870137495;  // std dev = 0,060, 1.041,000 (wgt'ed) examples reached here.  /* #neg=1.041 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then if ( countryhascompanyoffice(C, A) )
%   | then return 0.27156632272699616;  // std dev = 0,202, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return 0.29377111220511926;  // std dev = 1,188, 492,000 (wgt'ed) examples reached here.  /* #pos=492 */
%   else if ( economicsectorcompany(B, D), bankboughtbank(D, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return -0.274493522680206;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return -0.30446130620850603;  // std dev = 0,000436, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), economicsectorcompany(I, H) )
%   | | | then return -0.08807520289594414;  // std dev = 0,115, 81,000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | | else return -0.09778820598314006;  // std dev = 1,375, 977,000 (wgt'ed) examples reached here.  /* #neg=977 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.18610673927149451;  // std dev = 2,883, 449,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=422 */
%   | else if ( companyceo(C, F), companyceo(A, F) )
%   | | then return 0.23141071490913753;  // std dev = 0,050, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, G), bankbankincountry(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09949467524428003;  // std dev = 1,977, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, J) )
%   | then return -0.05476575452758964;  // std dev = 1,181, 130,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=13 */
%   | else if ( economicsectorcompany(K, A) )
%   | | then if ( companyalsoknownas(L, A), companyceo(A, M) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.054356944553816886;  // std dev = 3,189, 944,000 (wgt'ed) examples reached here.  /* #neg=877 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), economicsectorcompany(B, C) )
%   then return 0.17636866301867873;  // std dev = 0,038, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.13665398780201227;  // std dev = 0,817, 24,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, D) )
%   | | | then return 0.11713770132473243;  // std dev = 1,207, 42,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=34 */
%   | | | else return 0.1373199401664851;  // std dev = 4,174, 589,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=474 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07503277297075936;  // std dev = 0,015, 983,000 (wgt'ed) examples reached here.  /* #neg=983 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.19081560879555165;  // std dev = 1,235, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( economicsectorcompany(B, C) )
%   | then if ( companyceo(C, D), companyceo(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(E, F), countryhascompanyoffice(G, A) )
%   | | | then return -0.253308853700723;  // std dev = 0,263, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.20809725711668903;  // std dev = 1,155, 105,000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( economicsectorcompany(H, A) )
%   | | then return -0.06996916769904443;  // std dev = 0,000512, 946,000 (wgt'ed) examples reached here.  /* #neg=946 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.16352761376104577;  // std dev = 1,114, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( companyalsoknownas(A, C), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F), companyalsoknownas(F, G) )
%   | | | then return -0.19394543259695782;  // std dev = 0,231, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.11476121085802697;  // std dev = 0,153, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( acquired(I, H), acquired(J, A) )
%   | | | then return -0.2958647749014485;  // std dev = 0,151, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.16328240022945448;  // std dev = 0,938, 104,000 (wgt'ed) examples reached here.  /* #neg=104 */
%   | | else if ( economicsectorcompany(K, A) )
%   | | | then return -0.06554449209687077;  // std dev = 0,014, 937,000 (wgt'ed) examples reached here.  /* #neg=937 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


******************************************
Performing Parameter Learning
******************************************
Refine
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(C, D)', 'true': 'hasacademicadvisor(E, C), hasacademicadvisor(C, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'haswebsite(D, H), diedin(C, I)', 'false': 'hasacademicadvisor(A, J), hasgender(J, K)', 'false,false': 'graduatedfrom(L, B), livesin(L, M)', 'false,false,true': 'iscitizenof(A, M), iscitizenof(L, M)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.388, 273, 1209], 'true,false,true': [0.37, 69, 352], 'true,false,false,true': [7.829, 88, 202], 'true,false,false,false': [18.136, 687, 631], 'false,true': [0.451, 865, 344], 'false,false,true,true': [4.969, 33, 98], 'false,false,true,false': [17.103, 703, 501], 'false,false,false,true': [3.67, 85, 16], 'false,false,false,false': [24.03, 1492, 942]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'hasacademicadvisor(C, E), influences(F, D)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(J, A), hasgender(A, K)', 'false,true': 'graduatedfrom(L, B), hasacademicadvisor(M, L)', 'false,false': 'graduatedfrom(A, B)', 'false,false,false': 'hasacademicadvisor(A, N), hasacademicadvisor(N, P)'}, {'true,true': [0.378, 283, 1305], 'true,false,true': [0.385, 79, 353], 'true,false,false,true': [11.994, 386, 242], 'true,false,false,false': [17.15, 545, 655], 'false,true,true': [0.493, 44, 49], 'false,true,false': [0.36, 417, 76], 'false,false,true': [0.272, 0, 95], 'false,false,false,true': [8.587, 290, 100], 'false,false,false,false': [29.462, 2251, 1420]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'graduatedfrom(A, B)', 'true,false': 'wrotemusicfor(E, D), directed(F, D)', 'false': 'graduatedfrom(G, B), hasacademicadvisor(G, H)', 'false,true': 'hasacademicadvisor(I, A), graduatedfrom(I, B)', 'false,true,false': 'livesin(G, J), iscitizenof(A, J)', 'false,false': 'hasacademicadvisor(K, A), hasgender(A, L)', 'false,false,false': 'hasacademicadvisor(A, M), hasgender(M, N)'}, {'true,true': [0.153, 4, 184], 'true,false,true': [0.414, 433, 1308], 'true,false,false': [0.49, 77, 67], 'false,true,true': [0.064, 0, 141], 'false,true,false,true': [6.93, 67, 220], 'false,true,false,false': [20.31, 918, 826], 'false,false,true': [0.362, 427, 79], 'false,false,false,true': [11.452, 486, 182], 'false,false,false,false': [27.442, 1883, 1288]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), hasacademicadvisor(D, C)', 'true': 'graduatedfrom(A, B)', 'true,false': 'owns(B, E), wasbornin(D, F)', 'true,false,false': 'hasacademicadvisor(G, A), graduatedfrom(G, B)', 'false': 'graduatedfrom(A, B)', 'false,false': 'hasacademicadvisor(A, H), hasgender(H, I)', 'false,false,true': 'hasacademicadvisor(J, A), graduatedfrom(A, K)', 'false,false,false': 'graduatedfrom(L, B), haschild(M, L)'}, {'true,true': [0.146, 5, 384], 'true,false,true': [0.4, 322, 1131], 'true,false,false,true': [0.635, 0, 98], 'true,false,false,false': [18.546, 781, 735], 'false,true': [0.129, 1, 106], 'false,false,true,true': [5.613, 243, 38], 'false,false,true,false': [13.303, 627, 258], 'false,false,false,true': [10.404, 225, 233], 'false,false,false,false': [28.122, 2091, 1312]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'edited(E, D), directed(E, F)', 'true,false': 'owns(B, G), wasbornin(C, H)', 'true,false,true': 'iscitizenof(A, I), islocatedin(D, I)', 'false': 'graduatedfrom(A, B)', 'false,false': 'graduatedfrom(A, J)', 'false,false,true': 'owns(B, K), owns(J, L)', 'false,false,false': 'graduatedfrom(M, B), isknownfor(M, N)'}, {'true,true': [0.361, 154, 706], 'true,false,true,true': [3.41, 16, 66], 'true,false,true,false': [8.413, 145, 170], 'true,false,false': [0.397, 199, 617], 'false,true': [0.118, 2, 306], 'false,false,true,true': [11.773, 283, 306], 'false,false,true,false': [26.388, 2214, 1128], 'false,false,false,true': [3.653, 19, 72], 'false,false,false,false': [22.516, 1263, 924]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'true': 'hasgender(A, C), owns(B, D)', 'false': 'graduatedfrom(E, B), actedin(E, F)', 'false,true': 'haschild(G, E), wasbornin(E, H)', 'false,true,true': 'livesin(I, H), hasgender(A, J)', 'false,true,false': 'wrotemusicfor(K, F), ismarriedto(K, L)', 'false,false': 'hasacademicadvisor(M, A), graduatedfrom(M, B)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.163, 4, 183], 'true,false': [0.111, 2, 307], 'false,true,true,true': [5.377, 36, 271], 'false,true,true,false': [1.339, 5, 4], 'false,true,false,true': [12.385, 220, 730], 'false,true,false,false': [11.418, 249, 370], 'false,false,true': [0.096, 0, 95], 'false,false,false,true': [8.864, 426, 113], 'false,false,false,false': [35.62, 3353, 2222]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'livesin(D, E), hasacademicadvisor(D, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(A, J), hasacademicadvisor(J, K)', 'false,false': 'graduatedfrom(A, L), owns(L, M)', 'false,false,true': 'hasacademicadvisor(N, A), iscitizenof(A, P)', 'false,false,false': 'influences(A, Q), graduatedfrom(R, B)'}, {'true,true': [0.345, 223, 1101], 'true,false,true': [0.367, 90, 443], 'true,false,false,true': [11.432, 399, 242], 'true,false,false,false': [17.013, 581, 769], 'false,true': [0.4, 500, 155], 'false,false,true,true': [2.32, 41, 6], 'false,false,true,false': [16.611, 802, 459], 'false,false,false,true': [2.891, 47, 13], 'false,false,false,false': [24.898, 1612, 1107]}]
['worksat(A, B)', {'': 'hasacademicadvisor(C, A), graduatedfrom(C, B)', 'false': 'graduatedfrom(D, B), wrotemusicfor(D, E)', 'false,true': 'directed(F, E), islocatedin(E, G)', 'false,true,true': 'diedin(A, H), hascurrency(G, I)', 'false,true,false': 'hasacademicadvisor(A, J), haswebsite(D, K)', 'false,false': 'graduatedfrom(L, B), haschild(L, M)', 'false,false,true': 'iscitizenof(L, N), iscitizenof(A, N)', 'false,false,false': 'graduatedfrom(A, B)'}, {'true': [0.085, 0, 241], 'false,true,true,true': [2.65, 13, 35], 'false,true,true,false': [6.432, 51, 415], 'false,true,false,true': [2.016, 5, 50], 'false,true,false,false': [6.758, 75, 167], 'false,false,true,true': [4.937, 28, 239], 'false,false,true,false': [19.173, 777, 1057], 'false,false,false,true': [1.365, 1, 161], 'false,false,false,false': [34.069, 3345, 1930]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'graduatedfrom(C, B), haschild(D, C)', 'false,true': 'iscitizenof(C, E), iscitizenof(A, E)', 'false,true,true': 'hascurrency(E, F), ismarriedto(G, D)', 'false,true,false': 'iscitizenof(D, H), hasgender(A, I)', 'false,false': 'graduatedfrom(A, J), owns(J, K)', 'false,false,true': 'owns(B, L)', 'false,false,false': 'graduatedfrom(M, B), owns(B, N)'}, {'true': [0.13, 6, 490], 'false,true,true,true': [3.882, 19, 112], 'false,true,true,false': [5.293, 35, 297], 'false,true,false,true': [9.176, 133, 478], 'false,true,false,false': [17.117, 624, 748], 'false,false,true,true': [10.951, 245, 269], 'false,false,true,false': [15.82, 927, 360], 'false,false,false,true': [11.022, 334, 241], 'false,false,false,false': [26.87, 1972, 1300]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'hasacademicadvisor(A, C), graduatedfrom(D, B)', 'false,true': 'iscitizenof(D, E), iscitizenof(A, E)', 'false,true,true': 'dealswith(E, F)', 'false,true,false': 'hasacademicadvisor(D, G), hasacademicadvisor(G, H)', 'false,false': 'graduatedfrom(I, B), isknownfor(I, J)', 'false,false,true': 'influences(K, I), influences(L, A)', 'false,false,false': 'graduatedfrom(A, M)'}, {'true': [0.126, 6, 490], 'false,true,true,true': [3.795, 10, 149], 'false,true,true,false': [6.43, 75, 199], 'false,true,false,true': [10.456, 216, 395], 'false,true,false,false': [8.926, 398, 107], 'false,false,true,true': [1.073, 1, 39], 'false,false,true,false': [7.528, 83, 313], 'false,false,false,true': [27.948, 2231, 1502], 'false,false,false,false': [23.126, 1275, 1101]}]


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(C, D) )
%   then if ( companyalsoknownas(E, C), companyalsoknownas(C, F) )
%   | then return 0.8032966144244026;  // std dev = 4,957, 474,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=448 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( cityhascompanyoffice(H, D), bankchiefexecutiveceo(C, I) )
%   | | | then return 0.5248156017661789;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.49644680743993713;  // std dev = 3,294, 47,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   else if ( companyalsoknownas(A, J), countryhascompanyoffice(K, J) )
%   | then return -0.1418510649004877;  // std dev = 2,58e-08, 28,000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( economicsectorcompany(B, L) )
%   | | then if ( companyceo(A, M), companyceo(L, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23799389633982326;  // std dev = 5,512, 129,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=49 */
%   | | else if ( companyalsoknownas(N, A), economicsectorcompany(P, N) )
%   | | | then return -0.14185106490048768;  // std dev = 4,47e-08, 42,000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.1418510649004897;  // std dev = 0,000, 894,000 (wgt'ed) examples reached here.  /* #neg=894 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(C, E), acquired(F, D) )
%   | then return 0.6700651038143471;  // std dev = 2,565, 116,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=109 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.733036808508193;  // std dev = 0,057, 13,000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( companyceo(A, H), bankbankincountry(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.6331460594310863;  // std dev = 5,836, 382,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=342 */
%   else if ( companyalsoknownas(J, A), countryhascompanyoffice(K, A) )
%   | then if ( economicsectorcompany(B, L), companyalsoknownas(M, L) )
%   | | then return 0.726035323724714;  // std dev = 0,012, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.13310750716252565;  // std dev = 0,119, 23,000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( economicsectorcompany(B, A) )
%   | | then return 0.7952991392339549;  // std dev = 0,362, 75,000 (wgt'ed) examples reached here.  /* #pos=75 */
%   | | else if ( companyalsoknownas(A, N), companyalsoknownas(N, P) )
%   | | | then return -0.13238621051027052;  // std dev = 0,211, 106,000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | | else return -0.12951602453428354;  // std dev = 0,545, 899,000 (wgt'ed) examples reached here.  /* #neg=899 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.5899034873417799;  // std dev = 0,075, 223,000 (wgt'ed) examples reached here.  /* #pos=223 */
%   | else return -0.32875000979679747;  // std dev = 0,088, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   else if ( economicsectorcompany(B, E), companyalsoknownas(E, F) )
%   | then if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return 0.5833511264091649;  // std dev = 0,036, 15,000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.46242276162215507;  // std dev = 2,306, 60,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=52 */
%   | | | else return 0.4557345702797347;  // std dev = 4,983, 221,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=188 */
%   | else if ( companyalsoknownas(I, A), countryhascompanyoffice(J, A) )
%   | | then return -0.1115546460482322;  // std dev = 1,97e-08, 30,000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( companyalsoknownas(A, K), countryhascompanyoffice(L, K) )
%   | | | then return -0.11162615394103187;  // std dev = 0,000, 17,000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.07095012695912337;  // std dev = 6,140, 1.093,000 (wgt'ed) examples reached here.  /* #neg=1.027 #pos=66 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(D, C) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.46085328020074534;  // std dev = 0,610, 473,000 (wgt'ed) examples reached here.  /* #pos=473 */
%   | else if ( companyalsoknownas(E, A), economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.43036137264743896;  // std dev = 0,918, 65,000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.654215984960792;  // std dev = 0,605, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | else if ( companyalsoknownas(A, F), countryhascompanyoffice(G, F) )
%   | | then if ( companyalsoknownas(H, A), economicsectorcompany(I, A) )
%   | | | then return -0.1009863147271784;  // std dev = 0,000139, 26,000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, J) )
%   | | | then return -0.18037528914534914;  // std dev = 0,530, 89,000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | | else return -0.10497234990988506;  // std dev = 0,014, 965,000 (wgt'ed) examples reached here.  /* #neg=965 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), bankboughtbank(C, D) )
%   then if ( companyceo(A, E) )
%   | then return 0.32640465120764806;  // std dev = 0,060, 17,000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return 0.3080259986598016;  // std dev = 1,758, 216,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=206 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.3953099664315852;  // std dev = 1,261, 321,000 (wgt'ed) examples reached here.  /* #pos=321 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return -0.10687915884916212;  // std dev = 0,048, 1.121,000 (wgt'ed) examples reached here.  /* #neg=1.121 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then if ( countryhascompanyoffice(C, A) )
%   | then return 0.2716003770451611;  // std dev = 0,201, 52,000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | else return 0.2936864421319619;  // std dev = 1,222, 492,000 (wgt'ed) examples reached here.  /* #pos=492 */
%   else if ( economicsectorcompany(B, D), bankboughtbank(D, E) )
%   | then if ( countryhascompanyoffice(F, A) )
%   | | then return -0.3156708828517485;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.26150021557857966;  // std dev = 0,067, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( companyalsoknownas(G, A), economicsectorcompany(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(H, A), economicsectorcompany(I, H) )
%   | | | then return -0.09357370176783888;  // std dev = 0,365, 73,000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.0957857696274546;  // std dev = 1,333, 992,000 (wgt'ed) examples reached here.  /* #neg=992 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( companyalsoknownas(D, E) )
%   | then return 0.1896193782934115;  // std dev = 2,702, 445,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=422 */
%   | else if ( companyceo(C, F), companyceo(A, F) )
%   | | then return 0.229898123453621;  // std dev = 0,054, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( companyceo(A, G), bankbankincountry(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09770937913624082;  // std dev = 1,936, 57,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   else if ( companyalsoknownas(A, I), companyalsoknownas(I, J) )
%   | then return -0.057715343465000284;  // std dev = 1,170, 147,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=13 */
%   | else if ( economicsectorcompany(K, A) )
%   | | then if ( companyalsoknownas(L, A), companyceo(A, M) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0551125299015847;  // std dev = 3,267, 971,000 (wgt'ed) examples reached here.  /* #neg=904 #pos=67 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( companyalsoknownas(C, A), economicsectorcompany(B, C) )
%   then return 0.1752976987715093;  // std dev = 0,039, 16,000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.18259791475239642;  // std dev = 0,487, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( companyalsoknownas(A, F), cityhascompanyoffice(G, D) )
%   | | | then return 0.1731333326120948;  // std dev = 0,519, 37,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return 0.12980062262862974;  // std dev = 4,488, 596,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=474 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.075315679660209;  // std dev = 0,021, 991,000 (wgt'ed) examples reached here.  /* #neg=991 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.19084165711670198;  // std dev = 1,293, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( economicsectorcompany(B, C) )
%   | then if ( companyceo(C, D), companyceo(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(E, F), countryhascompanyoffice(G, A) )
%   | | | then return -0.21401062403376367;  // std dev = 0,452, 10,000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.22778092926008434;  // std dev = 1,366, 116,000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( economicsectorcompany(H, A) )
%   | | then return -0.0703285801568925;  // std dev = 0,000425, 932,000 (wgt'ed) examples reached here.  /* #neg=932 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.16359257519272133;  // std dev = 1,170, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( companyalsoknownas(A, C), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyalsoknownas(D, F), companyalsoknownas(F, G) )
%   | | | then return -0.2970300095640011;  // std dev = 0,354, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1308501576858996;  // std dev = 0,173, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( acquired(I, H), acquired(J, A) )
%   | | | then return -0.3373133824393258;  // std dev = 0,186, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.16527448597684302;  // std dev = 0,937, 88,000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( economicsectorcompany(K, A) )
%   | | | then return -0.06582139681915064;  // std dev = 0,016, 960,000 (wgt'ed) examples reached here.  /* #neg=960 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


******************************************
Performing Parameter Learning
******************************************
Refine
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(C, D)', 'true': 'hasacademicadvisor(E, C), hasacademicadvisor(C, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'haswebsite(D, H), diedin(C, I)', 'false': 'hasacademicadvisor(A, J), hasgender(J, K)', 'false,false': 'graduatedfrom(L, B), livesin(L, M)', 'false,false,true': 'iscitizenof(A, M), iscitizenof(L, M)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.388, 273, 1209], 'true,false,true': [0.37, 69, 352], 'true,false,false,true': [7.829, 88, 202], 'true,false,false,false': [18.136, 687, 631], 'false,true': [0.451, 865, 344], 'false,false,true,true': [4.969, 33, 98], 'false,false,true,false': [17.103, 703, 501], 'false,false,false,true': [3.67, 85, 16], 'false,false,false,false': [24.03, 1492, 942]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'hasacademicadvisor(C, E), influences(F, D)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(J, A), hasgender(A, K)', 'false,true': 'graduatedfrom(L, B), hasacademicadvisor(M, L)', 'false,false': 'graduatedfrom(A, B)', 'false,false,false': 'hasacademicadvisor(A, N), hasacademicadvisor(N, P)'}, {'true,true': [0.378, 283, 1305], 'true,false,true': [0.385, 79, 353], 'true,false,false,true': [11.994, 386, 242], 'true,false,false,false': [17.15, 545, 655], 'false,true,true': [0.493, 44, 49], 'false,true,false': [0.36, 417, 76], 'false,false,true': [0.272, 0, 95], 'false,false,false,true': [8.587, 290, 100], 'false,false,false,false': [29.462, 2251, 1420]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'graduatedfrom(A, B)', 'true,false': 'wrotemusicfor(E, D), directed(F, D)', 'false': 'graduatedfrom(G, B), hasacademicadvisor(G, H)', 'false,true': 'hasacademicadvisor(I, A), graduatedfrom(I, B)', 'false,true,false': 'livesin(G, J), iscitizenof(A, J)', 'false,false': 'hasacademicadvisor(K, A), hasgender(A, L)', 'false,false,false': 'hasacademicadvisor(A, M), hasgender(M, N)'}, {'true,true': [0.153, 4, 184], 'true,false,true': [0.414, 433, 1308], 'true,false,false': [0.49, 77, 67], 'false,true,true': [0.064, 0, 141], 'false,true,false,true': [6.93, 67, 220], 'false,true,false,false': [20.31, 918, 826], 'false,false,true': [0.362, 427, 79], 'false,false,false,true': [11.452, 486, 182], 'false,false,false,false': [27.442, 1883, 1288]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), hasacademicadvisor(D, C)', 'true': 'graduatedfrom(A, B)', 'true,false': 'owns(B, E), wasbornin(D, F)', 'true,false,false': 'hasacademicadvisor(G, A), graduatedfrom(G, B)', 'false': 'graduatedfrom(A, B)', 'false,false': 'hasacademicadvisor(A, H), hasgender(H, I)', 'false,false,true': 'hasacademicadvisor(J, A), graduatedfrom(A, K)', 'false,false,false': 'graduatedfrom(L, B), haschild(M, L)'}, {'true,true': [0.146, 5, 384], 'true,false,true': [0.4, 322, 1131], 'true,false,false,true': [0.635, 0, 98], 'true,false,false,false': [18.546, 781, 735], 'false,true': [0.129, 1, 106], 'false,false,true,true': [5.613, 243, 38], 'false,false,true,false': [13.303, 627, 258], 'false,false,false,true': [10.404, 225, 233], 'false,false,false,false': [28.122, 2091, 1312]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), actedin(C, D)', 'true': 'edited(E, D), directed(E, F)', 'true,false': 'owns(B, G), wasbornin(C, H)', 'true,false,true': 'iscitizenof(A, I), islocatedin(D, I)', 'false': 'graduatedfrom(A, B)', 'false,false': 'graduatedfrom(A, J)', 'false,false,true': 'owns(B, K), owns(J, L)', 'false,false,false': 'graduatedfrom(M, B), isknownfor(M, N)'}, {'true,true': [0.361, 154, 706], 'true,false,true,true': [3.41, 16, 66], 'true,false,true,false': [8.413, 145, 170], 'true,false,false': [0.397, 199, 617], 'false,true': [0.118, 2, 306], 'false,false,true,true': [11.773, 283, 306], 'false,false,true,false': [26.388, 2214, 1128], 'false,false,false,true': [3.653, 19, 72], 'false,false,false,false': [22.516, 1263, 924]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'true': 'hasgender(A, C), owns(B, D)', 'false': 'graduatedfrom(E, B), actedin(E, F)', 'false,true': 'haschild(G, E), wasbornin(E, H)', 'false,true,true': 'livesin(I, H), hasgender(A, J)', 'false,true,false': 'wrotemusicfor(K, F), ismarriedto(K, L)', 'false,false': 'hasacademicadvisor(M, A), graduatedfrom(M, B)', 'false,false,false': 'hasacademicadvisor(N, A), graduatedfrom(N, P)'}, {'true,true': [0.163, 4, 183], 'true,false': [0.111, 2, 307], 'false,true,true,true': [5.377, 36, 271], 'false,true,true,false': [1.339, 5, 4], 'false,true,false,true': [12.385, 220, 730], 'false,true,false,false': [11.418, 249, 370], 'false,false,true': [0.096, 0, 95], 'false,false,false,true': [8.864, 426, 113], 'false,false,false,false': [35.62, 3353, 2222]}]
['worksat(A, B)', {'': 'graduatedfrom(C, B), influences(D, C)', 'true': 'livesin(D, E), hasacademicadvisor(D, F)', 'true,false': 'iscitizenof(C, G), iscitizenof(A, G)', 'true,false,false': 'iscitizenof(A, H), exports(H, I)', 'false': 'hasacademicadvisor(A, J), hasacademicadvisor(J, K)', 'false,false': 'graduatedfrom(A, L), owns(L, M)', 'false,false,true': 'hasacademicadvisor(N, A), iscitizenof(A, P)', 'false,false,false': 'influences(A, Q), graduatedfrom(R, B)'}, {'true,true': [0.345, 223, 1101], 'true,false,true': [0.367, 90, 443], 'true,false,false,true': [11.432, 399, 242], 'true,false,false,false': [17.013, 581, 769], 'false,true': [0.4, 500, 155], 'false,false,true,true': [2.32, 41, 6], 'false,false,true,false': [16.611, 802, 459], 'false,false,false,true': [2.891, 47, 13], 'false,false,false,false': [24.898, 1612, 1107]}]
['worksat(A, B)', {'': 'hasacademicadvisor(C, A), graduatedfrom(C, B)', 'false': 'graduatedfrom(D, B), wrotemusicfor(D, E)', 'false,true': 'directed(F, E), islocatedin(E, G)', 'false,true,true': 'diedin(A, H), hascurrency(G, I)', 'false,true,false': 'hasacademicadvisor(A, J), haswebsite(D, K)', 'false,false': 'graduatedfrom(L, B), haschild(L, M)', 'false,false,true': 'iscitizenof(L, N), iscitizenof(A, N)', 'false,false,false': 'graduatedfrom(A, B)'}, {'true': [0.085, 0, 241], 'false,true,true,true': [2.65, 13, 35], 'false,true,true,false': [6.432, 51, 415], 'false,true,false,true': [2.016, 5, 50], 'false,true,false,false': [6.758, 75, 167], 'false,false,true,true': [4.937, 28, 239], 'false,false,true,false': [19.173, 777, 1057], 'false,false,false,true': [1.365, 1, 161], 'false,false,false,false': [34.069, 3345, 1930]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'graduatedfrom(C, B), haschild(D, C)', 'false,true': 'iscitizenof(C, E), iscitizenof(A, E)', 'false,true,true': 'hascurrency(E, F), ismarriedto(G, D)', 'false,true,false': 'iscitizenof(D, H), hasgender(A, I)', 'false,false': 'graduatedfrom(A, J), owns(J, K)', 'false,false,true': 'owns(B, L)', 'false,false,false': 'graduatedfrom(M, B), owns(B, N)'}, {'true': [0.13, 6, 490], 'false,true,true,true': [3.882, 19, 112], 'false,true,true,false': [5.293, 35, 297], 'false,true,false,true': [9.176, 133, 478], 'false,true,false,false': [17.117, 624, 748], 'false,false,true,true': [10.951, 245, 269], 'false,false,true,false': [15.82, 927, 360], 'false,false,false,true': [11.022, 334, 241], 'false,false,false,false': [26.87, 1972, 1300]}]
['worksat(A, B)', {'': 'graduatedfrom(A, B)', 'false': 'hasacademicadvisor(A, C), graduatedfrom(D, B)', 'false,true': 'iscitizenof(D, E), iscitizenof(A, E)', 'false,true,true': 'dealswith(E, F)', 'false,true,false': 'hasacademicadvisor(D, G), hasacademicadvisor(G, H)', 'false,false': 'graduatedfrom(I, B), isknownfor(I, J)', 'false,false,true': 'influences(K, I), influences(L, A)', 'false,false,false': 'graduatedfrom(A, M)'}, {'true': [0.126, 6, 490], 'false,true,true,true': [3.795, 10, 149], 'false,true,true,false': [6.43, 75, 199], 'false,true,false,true': [10.456, 216, 395], 'false,true,false,false': [8.926, 398, 107], 'false,false,true,true': [1.073, 1, 39], 'false,false,true,false': [7.528, 83, 313], 'false,false,false,true': [27.948, 2231, 1502], 'false,false,false,false': [23.126, 1275, 1101]}]


WILL Produced-Tree #1
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(C, D) )
%   then if ( acquired(E, C), acquired(C, F) )
%   | then return 0.8022483139814973;  // std dev = 2,915, 161,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=152 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.8581489350995123;  // std dev = 0,000, 18,000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( countryhascompanyoffice(H, D), bankchiefexecutiveceo(C, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.7519542448340228;  // std dev = 5,672, 339,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=303 */
%   else if ( acquired(A, J), bankboughtbank(J, K) )
%   | then return 0.19148226843284552;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( economicsectorcompany(B, L) )
%   | | then if ( companyceo(A, M), companyceo(L, M) )
%   | | | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3008970267025667;  // std dev = 5,685, 131,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=58 */
%   | | else if ( acquired(N, A), economicsectorcompany(P, N) )
%   | | | then return -0.14185106490048766;  // std dev = 7,60e-08, 78,000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.14185106490048977;  // std dev = 0,000, 927,000 (wgt'ed) examples reached here.  /* #neg=927 */
WILL Produced-Tree #2
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(D, C) )
%   then if ( acquired(C, E), companyalsoknownas(F, D) )
%   | then return 0.683569529226522;  // std dev = 4,859, 473,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=448 */
%   | else if ( companyceo(C, G), companyceo(A, G) )
%   | | then return 0.7194734122109544;  // std dev = 0,000, 2,000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( companyceo(A, H), bankbankincountry(H, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3792883428830455;  // std dev = 2,882, 36,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=23 */
%   else if ( acquired(J, A), bankboughtbank(A, K) )
%   | then if ( economicsectorcompany(B, L), acquired(M, L) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.1368675808769131;  // std dev = 0,051, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( economicsectorcompany(B, A) )
%   | | then return 0.8011048467893663;  // std dev = 0,311, 71,000 (wgt'ed) examples reached here.  /* #pos=71 */
%   | | else if ( acquired(A, N), acquired(N, P) )
%   | | | then return -0.13702870699694047;  // std dev = 0,152, 51,000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return -0.12978603320181872;  // std dev = 0,482, 1.013,000 (wgt'ed) examples reached here.  /* #neg=1.013 */
WILL Produced-Tree #3
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.5904724618665557;  // std dev = 0,523, 488,000 (wgt'ed) examples reached here.  /* #pos=488 */
%   | else return -0.2992648918069226;  // std dev = 0,122, 58,000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( economicsectorcompany(B, E), acquired(E, F) )
%   | then if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then return 0.6677437817051401;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( companyceo(A, H) )
%   | | | then return 0.4515635462133562;  // std dev = 0,666, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2923049689419489;  // std dev = 2,202, 28,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=16 */
%   | else if ( acquired(I, A), bankboughtbank(A, J) )
%   | | then return -0.12545789270333;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( acquired(A, K), bankboughtbank(K, L) )
%   | | | then return -0.14860980320680245;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.09021676606995853;  // std dev = 4,436, 1.008,000 (wgt'ed) examples reached here.  /* #neg=975 #pos=33 */
WILL Produced-Tree #4
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), acquired(D, C) )
%   then if ( economicsectorcompany(B, A) )
%   | then return 0.44519784419909153;  // std dev = 0,625, 464,000 (wgt'ed) examples reached here.  /* #pos=464 */
%   | else if ( acquired(E, A), economicsectorcompany(B, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return -0.2887342050711154;  // std dev = 0,455, 34,000 (wgt'ed) examples reached here.  /* #neg=34 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.5645209664329776;  // std dev = 0,958, 80,000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | else if ( acquired(A, F), bankboughtbank(F, G) )
%   | | then if ( acquired(H, A), economicsectorcompany(I, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.23533551301345446;  // std dev = 0,148, 2,000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else if ( economicsectorcompany(B, J) )
%   | | | then return -0.17720440261430664;  // std dev = 0,657, 77,000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.10318854951516729;  // std dev = 0,009, 1.033,000 (wgt'ed) examples reached here.  /* #neg=1.033 */
WILL Produced-Tree #5
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), cityhascompanyoffice(D, C) )
%   then if ( companyceo(A, E) )
%   | then return 0.28808966289696203;  // std dev = 1,173, 82,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=77 */
%   | else return 0.28348393707133546;  // std dev = 3,533, 462,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=411 */
%   else if ( economicsectorcompany(B, A) )
%   | then return 0.49479447443258495;  // std dev = 0,594, 56,000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | else if ( economicsectorcompany(F, A) )
%   | | then return -0.09866798133196858;  // std dev = 0,024, 1.015,000 (wgt'ed) examples reached here.  /* #neg=1.015 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then if ( bankboughtbank(A, C) )
%   | then return 0.29043323321369235;  // std dev = 0,083, 7,000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28706875840259216;  // std dev = 0,983, 537,000 (wgt'ed) examples reached here.  /* #pos=537 */
%   else if ( economicsectorcompany(B, D), cityhascompanyoffice(E, D) )
%   | then if ( bankboughtbank(A, F) )
%   | | then return -0.3500777843745338;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return -0.23887023850035854;  // std dev = 0,104, 62,000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( acquired(G, A), economicsectorcompany(B, G) )
%   | | then return -0.2237232742880268;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( acquired(H, A), economicsectorcompany(I, H) )
%   | | | then return -0.08988440538386393;  // std dev = 0,201, 96,000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | | else return -0.09037528475869362;  // std dev = 0,774, 934,000 (wgt'ed) examples reached here.  /* #neg=934 */
WILL Produced-Tree #7
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, C), companyalsoknownas(D, C) )
%   then if ( acquired(D, E) )
%   | then return 0.18880753107150458;  // std dev = 2,550, 434,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=408 */
%   | else if ( companyceo(C, F), companyceo(A, F) )
%   | | then return 0.2088900283158827;  // std dev = 0,064, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( companyceo(A, G), bankbankincountry(G, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08528369082352004;  // std dev = 2,407, 89,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=60 */
%   else if ( acquired(A, I), acquired(I, J) )
%   | then return -0.0616109139618595;  // std dev = 0,516, 47,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=3 */
%   | else if ( economicsectorcompany(K, A) )
%   | | then if ( acquired(L, A), companyceo(A, M) )
%   | | | then return -0.06195994933026336;  // std dev = 0,429, 34,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=2 */
%   | | | else return -0.05793291242110784;  // std dev = 2,983, 1.049,000 (wgt'ed) examples reached here.  /* #neg=983 #pos=66 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR companyeconomicsector(A, B):
%   if ( acquired(C, A), economicsectorcompany(B, C) )
%   then return 0.19292980166264387;  // std dev = 0,067, 27,000 (wgt'ed) examples reached here.  /* #pos=27 */
%   else if ( economicsectorcompany(B, D) )
%   | then if ( bankchiefexecutiveceo(A, E) )
%   | | then return 0.18125415493806646;  // std dev = 0,467, 22,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else if ( acquired(A, F), countryhascompanyoffice(G, D) )
%   | | | then return 0.15758012754584566;  // std dev = 0,695, 54,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=50 */
%   | | | else return 0.1363733724218778;  // std dev = 3,962, 554,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=447 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( economicsectorcompany(B, A) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.07500890045233705;  // std dev = 0,021, 930,000 (wgt'ed) examples reached here.  /* #neg=930 */
WILL Produced-Tree #9
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.18675309027216874;  // std dev = 1,056, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( economicsectorcompany(B, C) )
%   | then if ( companyceo(C, D), companyceo(A, D) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( companyceo(E, F), bankboughtbank(A, G) )
%   | | | then return -0.3341926946192235;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.23431104201825226;  // std dev = 1,284, 123,000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( economicsectorcompany(H, A) )
%   | | then return -0.06995239889672576;  // std dev = 0,000568, 973,000 (wgt'ed) examples reached here.  /* #neg=973 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR companyeconomicsector(A, B):
%   if ( economicsectorcompany(B, A) )
%   then return 0.1603557902799848;  // std dev = 0,953, 544,000 (wgt'ed) examples reached here.  /* #pos=544 */
%   else if ( acquired(A, C), economicsectorcompany(B, D) )
%   | then if ( companyceo(D, E), companyceo(A, E) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( acquired(D, F), acquired(F, G) )
%   | | | then return -0.31092786781920906;  // std dev = 0,000, 1,000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.14474929260081623;  // std dev = 0,335, 18,000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( economicsectorcompany(B, H) )
%   | | then if ( companyalsoknownas(I, H), companyalsoknownas(J, A) )
%   | | | then return -0.2639412495850872;  // std dev = 0,052, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.1684783624064975;  // std dev = 0,861, 87,000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( economicsectorcompany(K, A) )
%   | | | then return -0.06553096573357041;  // std dev = 0,014, 948,000 (wgt'ed) examples reached here.  /* #neg=948 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.


Results
   AUC ROC   = 1.0
   AUC PR    = 1.0
   CLL	      = -0.076521
   Precision = 1.0 at threshold = 0.5
   Recall    = 1.0
   F1        = 1.0


Total learning time: 14.405 seconds
Total inference time: 29.894 seconds
AUC ROC: 1.0


